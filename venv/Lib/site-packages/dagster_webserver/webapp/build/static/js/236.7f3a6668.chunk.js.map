{"version":3,"file":"static/js/236.7f3a6668.chunk.js","mappings":"oZAqBMA,EAAe,SAACC,GACpB,IAAOC,EAAyDD,EAAzDC,UAAWC,EAA8CF,EAA9CE,MAAOC,EAAuCH,EAAvCG,SAAUC,EAA6BJ,EAA7BI,QAASC,EAAoBL,EAApBK,SAAUC,EAAUN,EAAVM,OAEhDC,EAAQC,EAAAA,OAA+B,MAC7CC,EAA8BD,EAAAA,UAAe,GAAME,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAA5CG,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA0BN,EAAAA,SAAeN,GAAMa,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAgBV,EAAAA,aAAkB,WAClCL,GACFU,GAAW,EAEf,GAAG,CAACV,IAEEgB,EAAgBX,EAAAA,aACpB,SAACY,GACCA,EAAEC,kBACFhB,GAAYA,GACd,GACA,CAACA,IAGGiB,EAAad,EAAAA,aAAkB,WACnCK,GAAW,GACXV,GAAYA,EAASa,EACvB,GAAG,CAACb,EAAUa,IAERO,EAAef,EAAAA,aACnB,SAACY,GAAsC,OAAKH,EAASG,EAAEI,OAAOR,MAAM,GACpE,IAWF,OARAR,EAAAA,WAAgB,WACd,IAAMiB,EAAKlB,EAAMmB,QACbD,GAAMb,IACRa,EAAGE,QACHF,EAAGG,SAEP,GAAG,CAAChB,KAGFiB,EAAAA,EAAAA,MAACC,EAAY,CAACC,QAASzB,IAAU,EAAOY,cAAeA,EAAed,QAASA,EAAQ4B,SAAA,CACpFpB,GACCqB,EAAAA,EAAAA,KAAA,SACEC,IAAK3B,EACL4B,KAAK,OACLC,UAAW,SAAChB,GAAC,MAAe,UAAVA,EAAEiB,KAAmBjB,EAAEkB,cAAcC,MAAM,EAC7DpC,SAAUoB,EACViB,OAAQlB,EACRN,MAAOA,EACPyB,YAAY,0BAGdvC,EAEDD,IAAcW,GAAWP,GACxB4B,EAAAA,EAAAA,KAACS,EAAY,CAACtC,QAASe,EAAca,UACnCC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,KAAK,QAAQC,MAAOC,EAAAA,EAAAA,aAE1B,OAGV,EAUaC,EAAgB,SAAC/C,GAC5B,IAAOgD,EAA0BhD,EAA1BgD,KAAMC,EAAoBjD,EAApBiD,SAAUC,EAAUlD,EAAVkD,OAChBC,EAAYH,EAAZG,SACDC,EAAcC,OAAOC,KAAKH,GAC1BI,EAAeH,EAAYI,OAE3BC,GAAUC,EAAAA,EAAAA,KAEVC,EAAU,SAACC,GAAkC,IAAD,IAAAC,EAAAC,UAAAN,OAAhBO,EAAI,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJF,EAAIE,EAAA,GAAAH,UAAAG,GACpCf,EAAOU,EAAOM,WAAC,EAAD,CAAClB,GAAImB,OAAKJ,IAC1B,EAEM1D,EAAQ,eAAA+D,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAmB,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACrCtB,EAAe,GAAC,CAAAoB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACZpB,EAAQ,CACZvD,MAAO,cACP4E,YAAY,yBAADX,OACTM,GAAetB,EAASsB,GAAY,IAAAN,OAAOhB,EAASsB,GAAc7B,KAAI,KAAM,WAAU,yBAEvF,KAAD,EACFe,EAAQoB,EAAAA,GAAoBN,GAAa,wBAAAE,EAAAK,OAAA,GAAAR,EAAA,KAE5C,gBAVaS,GAAA,OAAAb,EAAAF,MAAA,KAAAJ,UAAA,KAYRoB,EAAW,eAAAC,GAAAd,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAa,IAAA,IAAAC,EAAA,OAAAf,EAAAA,EAAAA,KAAAI,MAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAT,KAAA,EACZpB,EAAQ,CACZvD,MAAO,mBACP4E,YAAa,8CACZ,KAAD,EAEEO,EAAcrC,EAClBI,EAAYmC,SAAQ,SAACd,GACnBY,GAAcN,EAAAA,EAAAA,IAAmBM,EAAaZ,EAChD,IAEAvB,EAAOmC,GAAa,wBAAAC,EAAAN,OAAA,GAAAI,EAAA,KACrB,kBAZgB,OAAAD,EAAAjB,MAAA,KAAAJ,UAAA,KAcjB,OACE7B,EAAAA,EAAAA,KAACuD,EAAAA,EAAG,CAACC,OAAQ,CAACC,KAAM,SAAUC,MAAO,EAAG9C,MAAOC,EAAAA,EAAAA,aAAqB8C,QAAS,CAACC,IAAK,IAAI7D,UACrFH,EAAAA,EAAAA,MAACiE,EAAsB,CAAA9D,SAAA,CACpBoB,EAAY2C,KAAI,SAAC1D,GAAG,OACnBJ,EAAAA,EAAAA,KAAClC,EAAY,CACXE,UAAWsD,EAAe,EAE1BjD,OAAQ+B,IAAQW,EAAKtB,QACrBxB,MAAOiD,EAASd,GAAMO,MAAQ,UAC9BxC,QAAS,kBAAMuD,EAAQqC,EAAAA,GAAoB3D,EAAI,EAC/ClC,SAAU,SAACyC,GAAI,OAAKe,EAAQsC,EAAAA,GAAuB5D,EAAK,CAACO,KAAAA,GAAM,EAC/DvC,SAAU,kBAAMA,EAASgC,EAAI,GALxBA,EAML,KAEJJ,EAAAA,EAAAA,KAAClC,EAAY,CAACG,MAAM,WAAWE,QAAS6C,IACvCG,EAAYI,OA7DQ,GA8DnBvB,EAAAA,EAAAA,KAACiE,EAAAA,EAAU,CAACrD,MAAOC,EAAAA,EAAAA,OAAe1C,QAAS8E,EAAYlD,UACrDH,EAAAA,EAAAA,MAAC2D,EAAAA,EAAG,CACFW,KAAM,CAACC,UAAW,MAAOC,IAAK,EAAGC,WAAY,UAC7CC,MAAO,CAACC,WAAY,UAAUxE,SAAA,EAE9BC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,KAAK,SAASC,MAAOC,EAAAA,EAAAA,UAC3Bb,EAAAA,EAAAA,KAAA,OAAAD,SAAK,oBAGP,SAIZ,EAEM8D,EAAyBW,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,wCAAAC,YAAA,eAAVF,CAAU,4HAWnC3E,EAAe2E,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,8BAAAC,YAAA,eAAVF,CAAU,uTAW3B,SAAAG,GAAS,OAAAA,EAAP7E,SAEE8E,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kJAEmBjE,EAAAA,EAAAA,QACXA,EAAAA,EAAAA,YACKA,EAAAA,EAAAA,cAEhB+D,EAAAA,EAAAA,IAAGG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,mSAEmBjE,EAAAA,EAAAA,OACXA,EAAAA,EAAAA,QACKA,EAAAA,EAAAA,SAGQA,EAAAA,EAAAA,QACNA,EAAAA,EAAAA,SACLA,EAAAA,EAAAA,SAEZ,IAcG,SAAAmE,GAAS,OAAAA,EAAPlF,QAAqC,UAAZ,SAAqB,IAGtDW,EAAe+D,EAAAA,GAAAA,OAAAA,WAAa,CAAAC,YAAA,8BAAAC,YAAA,eAAbF,CAAa,6IAM9BS,EAAAA,GAIQA,EAAAA,GACYpE,EAAAA,EAAAA,UC1MXqE,EAAmC,SAACnH,GAC/C,IAAOoH,EAAwEpH,EAAxEoH,cAAeC,EAAyDrH,EAAzDqH,SAAUC,EAA+CtH,EAA/CsH,cAAeC,EAAgCvH,EAAhCuH,YAAaC,EAAmBxH,EAAnBwH,gBAErDC,GAA+BC,EAAAA,EAAAA,MAA/BD,4BACDE,GAAqBC,EAAAA,EAAAA,IACzBP,EACAC,EACAE,GACCC,GAEHI,GAAuBC,EAAAA,EAAAA,IAA2BP,EAAaF,EAASzE,KAAM+E,GAAmBI,GAAApH,EAAAA,EAAAA,GAAAkH,EAAA,GAA1F7E,EAAI+E,EAAA,GAAE7E,EAAM6E,EAAA,GAUbC,EAAiBhF,EAAKG,SAASH,EAAKtB,SAE1C,OACEG,EAAAA,EAAAA,MAAAoG,EAAAA,SAAA,CAAAjG,SAAA,EACEC,EAAAA,EAAAA,KAACc,EAAa,CAACC,KAAMA,EAAMC,SAZP,WACtBC,GAAOgF,EAAAA,EAAAA,IAAmBlF,EAAM2E,GAClC,EAU0DzE,OAAQA,KAC9DjB,EAAAA,EAAAA,KAACkG,EAAAA,EAAgB,CACff,cAAeA,EACfgB,QAASJ,EACT9E,OAZgB,SAACmF,GACrBnF,GAAO+C,EAAAA,EAAAA,IAAsBjD,EAAMA,EAAKtB,QAAS2G,GACnD,EAWMhB,SAAUA,EACVC,cAAeA,EACfC,YAAaA,EACbC,gBAAiBA,MAIzB,EAGA,G","sources":["../../core/src/launchpad/LaunchpadTabs.tsx","../../core/src/launchpad/LaunchpadStoredSessionsContainer.tsx"],"sourcesContent":["import {Box, ButtonLink, Colors, Icon, IconWrapper} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {useConfirmation} from '../app/CustomConfirmationProvider';\nimport {\n  applyChangesToSession,\n  applyRemoveSession,\n  applySelectSession,\n  IStorageData,\n} from '../app/ExecutionSessionStorage';\n\ninterface ExecutationTabProps {\n  canRemove?: boolean;\n  title: string;\n  active?: boolean;\n  onChange?: (title: string) => void;\n  onRemove?: () => void;\n  onClick: () => void;\n}\n\nconst LaunchpadTab = (props: ExecutationTabProps) => {\n  const {canRemove, title, onChange, onClick, onRemove, active} = props;\n\n  const input = React.useRef<HTMLInputElement>(null);\n  const [editing, setEditing] = React.useState(false);\n  const [value, setValue] = React.useState(title);\n\n  const onDoubleClick = React.useCallback(() => {\n    if (onChange) {\n      setEditing(true);\n    }\n  }, [onChange]);\n\n  const onClickRemove = React.useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation();\n      onRemove && onRemove();\n    },\n    [onRemove],\n  );\n\n  const handleBlur = React.useCallback(() => {\n    setEditing(false);\n    onChange && onChange(value);\n  }, [onChange, value]);\n\n  const handleChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value),\n    [],\n  );\n\n  React.useEffect(() => {\n    const el = input.current;\n    if (el && editing) {\n      el.focus();\n      el.select();\n    }\n  }, [editing]);\n\n  return (\n    <TabContainer $active={active || false} onDoubleClick={onDoubleClick} onClick={onClick}>\n      {editing ? (\n        <input\n          ref={input}\n          type=\"text\"\n          onKeyDown={(e) => e.key === 'Enter' && e.currentTarget.blur()}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={value}\n          placeholder=\"Type a tab nameâ€¦\"\n        />\n      ) : (\n        title\n      )}\n      {canRemove && !editing && onRemove ? (\n        <RemoveButton onClick={onClickRemove}>\n          <Icon name=\"close\" color={Colors.Olive500} />\n        </RemoveButton>\n      ) : null}\n    </TabContainer>\n  );\n};\n\nconst REMOVE_ALL_THRESHOLD = 3;\n\ninterface LaunchpadTabsProps {\n  data: IStorageData;\n  onCreate: () => void;\n  onSave: (data: IStorageData) => void;\n}\n\nexport const LaunchpadTabs = (props: LaunchpadTabsProps) => {\n  const {data, onCreate, onSave} = props;\n  const {sessions} = data;\n  const sessionKeys = Object.keys(sessions);\n  const sessionCount = sessionKeys.length;\n\n  const confirm = useConfirmation();\n\n  const onApply = (mutator: any, ...args: any[]) => {\n    onSave(mutator(data, ...args));\n  };\n\n  const onRemove = async (keyToRemove: string) => {\n    if (sessionCount > 1) {\n      await confirm({\n        title: 'Remove tab?',\n        description: `The configuration for ${\n          keyToRemove && sessions[keyToRemove] ? `\"${sessions[keyToRemove]!.name}\"` : 'this tab'\n        } will be discarded.`,\n      });\n      onApply(applyRemoveSession, keyToRemove);\n    }\n  };\n\n  const onRemoveAll = async () => {\n    await confirm({\n      title: 'Remove all tabs?',\n      description: 'All configuration tabs will be discarded.',\n    });\n\n    let updatedData = data;\n    sessionKeys.forEach((keyToRemove) => {\n      updatedData = applyRemoveSession(updatedData, keyToRemove);\n    });\n\n    onSave(updatedData);\n  };\n\n  return (\n    <Box border={{side: 'bottom', width: 1, color: Colors.KeylineGray}} padding={{top: 12}}>\n      <LaunchpadTabsContainer>\n        {sessionKeys.map((key) => (\n          <LaunchpadTab\n            canRemove={sessionCount > 1}\n            key={key}\n            active={key === data.current}\n            title={sessions[key]!.name || 'Unnamed'}\n            onClick={() => onApply(applySelectSession, key)}\n            onChange={(name) => onApply(applyChangesToSession, key, {name})}\n            onRemove={() => onRemove(key)}\n          />\n        ))}\n        <LaunchpadTab title=\"+ Add...\" onClick={onCreate} />\n        {sessionKeys.length > REMOVE_ALL_THRESHOLD ? (\n          <ButtonLink color={Colors.Red500} onClick={onRemoveAll}>\n            <Box\n              flex={{direction: 'row', gap: 4, alignItems: 'center'}}\n              style={{whiteSpace: 'nowrap'}}\n            >\n              <Icon name=\"delete\" color={Colors.Red500} />\n              <div>Remove all</div>\n            </Box>\n          </ButtonLink>\n        ) : null}\n      </LaunchpadTabsContainer>\n    </Box>\n  );\n};\n\nconst LaunchpadTabsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n  gap: 8px;\n  z-index: 1;\n  flex-direction: row;\n  padding-left: 12px;\n  overflow-x: auto;\n`;\n\nconst TabContainer = styled.div<{$active: boolean}>`\n  align-items: center;\n  user-select: none;\n  padding: 8px 12px;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  white-space: nowrap;\n\n  ${({$active}) =>\n    $active\n      ? css`\n          font-weight: 600;\n          background-color: ${Colors.Gray100};\n          color: ${Colors.ForestGreen};\n          box-shadow: ${Colors.ForestGreen} 0 -2px 0 inset;\n        `\n      : css`\n          font-weight: normal;\n          background-color: ${Colors.Gray50};\n          color: ${Colors.Gray300};\n          box-shadow: ${Colors.Olive200} 0 -1px 0 inset;\n\n          &:hover {\n            background-color: ${Colors.Gray100};\n            box-shadow: ${Colors.Olive500} 0 -1px 0 inset;\n            color: ${Colors.Olive500};\n          }\n        `}\n\n  &:last-child {\n    padding-right: 12px;\n  }\n\n  input {\n    background-color: transparent;\n    font-size: 13px;\n    border: 0;\n    outline: none;\n    padding: 0;\n  }\n\n  cursor: ${({$active}) => (!$active ? 'pointer' : 'inherit')};\n`;\n\nconst RemoveButton = styled.button`\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  padding: 0;\n\n  ${IconWrapper} {\n    transition: background-color 100ms;\n  }\n\n  &:hover ${IconWrapper} {\n    background-color: ${Colors.Olive700};\n  }\n`;\n","import * as React from 'react';\n\nimport {\n  applyChangesToSession,\n  applyCreateSession,\n  IExecutionSessionChanges,\n  useExecutionSessionStorage,\n  useInitialDataForMode,\n} from '../app/ExecutionSessionStorage';\nimport {useFeatureFlags} from '../app/Flags';\nimport {RepoAddress} from '../workspace/types';\n\nimport LaunchpadSession from './LaunchpadSession';\nimport {LaunchpadTabs} from './LaunchpadTabs';\nimport {LaunchpadType} from './types';\nimport {\n  LaunchpadSessionPartitionSetsFragment,\n  LaunchpadSessionPipelineFragment,\n} from './types/LaunchpadAllowedRoot.types';\n\ninterface Props {\n  launchpadType: LaunchpadType;\n  pipeline: LaunchpadSessionPipelineFragment;\n  partitionSets: LaunchpadSessionPartitionSetsFragment;\n  repoAddress: RepoAddress;\n  rootDefaultYaml: string | undefined;\n}\n\nexport const LaunchpadStoredSessionsContainer = (props: Props) => {\n  const {launchpadType, pipeline, partitionSets, repoAddress, rootDefaultYaml} = props;\n\n  const {flagDisableAutoLoadDefaults} = useFeatureFlags();\n  const initialDataForMode = useInitialDataForMode(\n    pipeline,\n    partitionSets,\n    rootDefaultYaml,\n    !flagDisableAutoLoadDefaults,\n  );\n  const [data, onSave] = useExecutionSessionStorage(repoAddress, pipeline.name, initialDataForMode);\n\n  const onCreateSession = () => {\n    onSave(applyCreateSession(data, initialDataForMode));\n  };\n\n  const onSaveSession = (changes: IExecutionSessionChanges) => {\n    onSave(applyChangesToSession(data, data.current, changes));\n  };\n\n  const currentSession = data.sessions[data.current]!;\n\n  return (\n    <>\n      <LaunchpadTabs data={data} onCreate={onCreateSession} onSave={onSave} />\n      <LaunchpadSession\n        launchpadType={launchpadType}\n        session={currentSession}\n        onSave={onSaveSession}\n        pipeline={pipeline}\n        partitionSets={partitionSets}\n        repoAddress={repoAddress}\n        rootDefaultYaml={rootDefaultYaml}\n      />\n    </>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default LaunchpadStoredSessionsContainer;\n"],"names":["LaunchpadTab","props","canRemove","title","onChange","onClick","onRemove","active","input","React","_React$useState","_React$useState2","_slicedToArray","editing","setEditing","_React$useState3","_React$useState4","value","setValue","onDoubleClick","onClickRemove","e","stopPropagation","handleBlur","handleChange","target","el","current","focus","select","_jsxs","TabContainer","$active","children","_jsx","ref","type","onKeyDown","key","currentTarget","blur","onBlur","placeholder","RemoveButton","Icon","name","color","Colors","LaunchpadTabs","data","onCreate","onSave","sessions","sessionKeys","Object","keys","sessionCount","length","confirm","useConfirmation","onApply","mutator","_len","arguments","args","Array","_key","apply","concat","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","keyToRemove","wrap","_context","prev","next","description","applyRemoveSession","stop","_x","onRemoveAll","_ref2","_callee2","updatedData","_context2","forEach","Box","border","side","width","padding","top","LaunchpadTabsContainer","map","applySelectSession","applyChangesToSession","ButtonLink","flex","direction","gap","alignItems","style","whiteSpace","styled","displayName","componentId","_ref3","css","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref4","IconWrapper","LaunchpadStoredSessionsContainer","launchpadType","pipeline","partitionSets","repoAddress","rootDefaultYaml","flagDisableAutoLoadDefaults","useFeatureFlags","initialDataForMode","useInitialDataForMode","_useExecutionSessionS","useExecutionSessionStorage","_useExecutionSessionS2","currentSession","_Fragment","applyCreateSession","LaunchpadSession","session","changes"],"sourceRoot":""}
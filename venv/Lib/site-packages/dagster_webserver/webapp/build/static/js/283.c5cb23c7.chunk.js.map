{"version":3,"file":"static/js/283.c5cb23c7.chunk.js","mappings":"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","sources":["../../core/src/runs/DeletionDialog.tsx","../../core/src/runs/NavigationBlock.tsx","../../core/src/hooks/useOnBeforeUnload.tsx","../../core/src/runs/RunStats.tsx","../../core/src/runs/RunStatusDots.tsx","../../core/src/runs/RunStatusTag.tsx","../../core/src/runs/TerminationDialog.tsx","../../core/src/runs/useJobAvailabilityErrorForRun.tsx","../../core/src/workspace/useRepositoryForRun.ts","../../ui/src/components/PageHeader.tsx"],"sourcesContent":["import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {Button, Colors, DialogBody, DialogFooter, Dialog, Group, Icon, Mono} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {DeleteMutation, DeleteMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst refineToError = (data: DeleteMutation | null | undefined) => {\n  if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.deletePipelineRun;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    deletionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<DeleteMutation, DeleteMutationVariables>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import * as React from 'react';\nimport {Prompt} from 'react-router-dom';\n\nimport {useOnBeforeUnload} from '../hooks/useOnBeforeUnload';\n\ninterface Props {\n  message: string;\n}\n\nexport const NavigationBlock = (props: Props) => {\n  useOnBeforeUnload();\n  return <Prompt message={props.message} />;\n};\n","import * as React from 'react';\n\nexport const useOnBeforeUnload = () => {\n  React.useEffect(() => {\n    const handler = (e: BeforeUnloadEvent) => {\n      e.preventDefault();\n      e.returnValue = '';\n    };\n\n    window.addEventListener('beforeunload', handler);\n    return () => {\n      window.removeEventListener('beforeunload', handler);\n    };\n  }, []);\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\n\nimport {RunStatsQuery, RunStatsQueryVariables} from './types/RunStats.types';\n\nexport const RunStats = ({runId}: {runId: string}) => {\n  const stats = useQuery<RunStatsQuery, RunStatsQueryVariables>(RUN_STATS_QUERY, {\n    variables: {runId},\n  });\n\n  if (stats.loading || !stats.data) {\n    return (\n      <RunStatsDetailsContainer>\n        <Box padding={24} flex={{justifyContent: 'center'}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      </RunStatsDetailsContainer>\n    );\n  }\n\n  const result = stats.data.pipelineRunOrError;\n\n  if (result.__typename !== 'Run') {\n    return <PythonErrorInfo error={result} />;\n  }\n  if (result.stats.__typename !== 'RunStatsSnapshot') {\n    return <PythonErrorInfo error={result.stats} />;\n  }\n\n  const runPath = `/runs/${runId}`;\n  return (\n    <RunStatsDetailsContainer>\n      <Link\n        to={`${runPath}?logs=type:STEP_SUCCESS`}\n      >{`${result.stats.stepsSucceeded} steps succeeded`}</Link>\n      <Link to={`${runPath}?logs=type:STEP_FAILURE`}>\n        {`${result.stats.stepsFailed} steps failed`}\n      </Link>\n      <Link\n        to={`${runPath}?logs=type:ASSET_MATERIALIZATION`}\n      >{`${result.stats.materializations} materializations`}</Link>\n      <Link\n        to={`${runPath}?logs=type:STEP_EXPECTATION_RESULT`}\n      >{`${result.stats.expectations} expectations passed`}</Link>\n    </RunStatsDetailsContainer>\n  );\n};\n\nconst RUN_STATS_QUERY = gql`\n  query RunStatsQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on RunNotFoundError {\n        message\n      }\n      ... on Run {\n        id\n        pipelineName\n        stats {\n          ... on RunStatsSnapshot {\n            id\n            stepsSucceeded\n            stepsFailed\n            expectations\n            materializations\n          }\n          ...PythonErrorFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunStatsDetailsContainer = styled.div`\n  min-width: 200px;\n  padding: 12px;\n  color: white;\n  font-size: 12px;\n  & > a {\n    display: block;\n  }\n`;\n","import {Popover, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled, {css, keyframes} from 'styled-components/macro';\n\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RUN_STATUS_COLORS} from './RunStatusTag';\nimport {inProgressStatuses, queuedStatuses} from './RunStatuses';\n\nexport const RunStatusWithStats: React.FC<RunStatusProps & {runId: string}> = React.memo(\n  ({runId, ...rest}) => (\n    <Popover\n      position=\"bottom\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n    >\n      <RunStatusIndicator {...rest} />\n    </Popover>\n  ),\n);\n\ninterface RunStatusProps {\n  status: RunStatus | 'SCHEDULED';\n  size?: number;\n}\n\nexport const RunStatusIndicator: React.FC<RunStatusProps> = React.memo(({status, size}) => {\n  if (status === 'STARTED' || status === 'CANCELING') {\n    return <Spinner purpose=\"caption-text\" />;\n  }\n  if (status === 'SCHEDULED') {\n    return <RunStatusDot status={status} size={size || 12} />;\n  }\n  return (\n    <RunStatusDot\n      status={status}\n      size={size || 12}\n      pulse={inProgressStatuses.has(status) || queuedStatuses.has(status)}\n    />\n  );\n});\n\nconst pulseAnimation = keyframes`\n  0% {\n    filter: brightness(1);\n  }\n\n  50% {\n    filter: brightness(0.7);\n  }\n\n  100% {\n    filter: brightness(1);\n  }\n`;\n\nexport const RunStatusDot = styled.div<{\n  status: RunStatus | 'SCHEDULED';\n  size: number;\n  pulse?: boolean;\n}>`\n  width: ${({size}) => size}px;\n  height: ${({size}) => size}px;\n  border-radius: ${({size}) => size / 2}px;\n  transition: filter 200ms linear;\n  ${({pulse}) =>\n    pulse\n      ? css`\n          animation: ${pulseAnimation} 2s infinite;\n        `\n      : null}\n\n  background: ${({status}) => RUN_STATUS_COLORS[status]};\n  &:hover {\n    animation: none;\n    filter: brightness(0.7);\n  }\n`;\n","import {Box, CaptionMono, Colors, Popover, Tag} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {assertUnreachable} from '../app/Util';\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RunStatusIndicator} from './RunStatusDots';\n\nconst statusToIntent = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n    case RunStatus.NOT_STARTED:\n    case RunStatus.CANCELED:\n    case RunStatus.MANAGED:\n      return 'none';\n    case RunStatus.SUCCESS:\n      return 'success';\n    case RunStatus.FAILURE:\n      return 'danger';\n    case RunStatus.STARTING:\n    case RunStatus.STARTED:\n    case RunStatus.CANCELING:\n      return 'primary';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nconst runStatusToString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Success';\n    case RunStatus.STARTING:\n      return 'Starting';\n    case RunStatus.NOT_STARTED:\n      return 'Not started';\n    case RunStatus.FAILURE:\n      return 'Failure';\n    case RunStatus.STARTED:\n      return 'Started';\n    case RunStatus.MANAGED:\n      return 'Managed';\n    case RunStatus.CANCELING:\n      return 'Canceling';\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nexport const runStatusToBackfillStateString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    case RunStatus.CANCELING:\n      return 'Canceling';\n    case RunStatus.FAILURE:\n      return 'Failed';\n    case RunStatus.STARTING:\n    case RunStatus.STARTED:\n      return 'In progress';\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Completed';\n    case RunStatus.MANAGED:\n    case RunStatus.NOT_STARTED:\n      return 'Missing';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nexport const RUN_STATUS_COLORS = {\n  QUEUED: Colors.Blue200,\n  NOT_STARTED: Colors.Gray600,\n  MANAGED: Colors.Gray400,\n  STARTED: Colors.Blue500,\n  STARTING: Colors.Blue500,\n  CANCELING: Colors.Blue500,\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  CANCELED: Colors.Gray400,\n\n  // Not technically a RunStatus, but useful.\n  SCHEDULED: Colors.Blue200,\n};\n\nexport const RunStatusTag = (props: {status: RunStatus}) => {\n  const {status} = props;\n  return (\n    <Tag intent={statusToIntent(status)}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        <RunStatusIndicator status={status} size={10} />\n        <div>{runStatusToString(status)}</div>\n      </Box>\n    </Tag>\n  );\n};\n\nexport const RunStatusTagWithID = ({runId, status}: {runId: string; status: RunStatus}) => {\n  return (\n    <Tag intent={statusToIntent(status)}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        <RunStatusIndicator status={status} size={10} />\n        <CaptionMono>{runId.slice(0, 8)}</CaptionMono>\n      </Box>\n    </Tag>\n  );\n};\n\ninterface Props {\n  runId: string;\n  status: RunStatus;\n}\n\nexport const RunStatusTagWithStats = (props: Props) => {\n  const {runId, status} = props;\n  return (\n    <Popover\n      position=\"bottom-left\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n      usePortal\n    >\n      <RunStatusTag status={status} />\n    </Popover>\n  );\n};\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {TerminateRunPolicy} from '../graphql/types';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {TERMINATE_MUTATION} from './RunUtils';\nimport {TerminateMutation, TerminateMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (terminationState: TerminationState) => void;\n  // A map from the run ID to its `canTerminate` value\n  selectedRuns: {[id: string]: boolean};\n}\n\nconst refineToError = (data: TerminateMutation | null | undefined) => {\n  if (data?.terminatePipelineExecution.__typename === 'TerminateRunSuccess') {\n    throw new ErrorEvent('Not an error!');\n  }\n  return data?.terminatePipelineExecution;\n};\n\ntype Error = ReturnType<typeof refineToError> | undefined;\n\nexport type TerminationState = {completed: number; errors: {[id: string]: Error}};\n\ntype TerminationDialogState = {\n  mustForce: boolean;\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'terminating' | 'completed';\n  termination: TerminationState;\n};\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst initializeState = (selectedRuns: SelectedRuns): TerminationDialogState => {\n  return {\n    // If any selected runs have `canTerminate`, we don't necessarily have to force.\n    mustForce: !Object.keys(selectedRuns).some((id) => selectedRuns[id]),\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    termination: {completed: 0, errors: {}},\n  };\n};\n\ntype TerminationDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'toggle-force-terminate'; checked: boolean}\n  | {type: 'start'}\n  | {type: 'termination-success'}\n  | {type: 'termination-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst terminationDialogReducer = (\n  prevState: TerminationDialogState,\n  action: TerminationDialogAction,\n): TerminationDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'toggle-force-terminate':\n      return {...prevState, mustForce: action.checked};\n    case 'start':\n      return {...prevState, step: 'terminating'};\n    case 'termination-success': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {...termination, completed: termination.completed + 1},\n      };\n    }\n    case 'termination-error': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {\n          ...termination,\n          completed: termination.completed + 1,\n          errors: {...termination.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const TerminationDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // terminating. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    terminationDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [terminate] = useMutation<TerminateMutation, TerminateMutationVariables>(\n    TERMINATE_MUTATION,\n  );\n  const policy = state.mustForce\n    ? TerminateRunPolicy.MARK_AS_CANCELED_IMMEDIATELY\n    : TerminateRunPolicy.SAFE_TERMINATE;\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await terminate({variables: {runId, terminatePolicy: policy}});\n\n      if (data?.terminatePipelineExecution.__typename === 'TerminateRunSuccess') {\n        dispatch({type: 'termination-success'});\n      } else {\n        dispatch({type: 'termination-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.termination);\n  };\n\n  const onToggleForce = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({type: 'toggle-force-terminate', checked: event.target.checked});\n  };\n\n  const showCheckbox = Object.keys(state.frozenRuns).some((id) => state.frozenRuns[id]);\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for termination.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>\n              {`${count} ${\n                count === 1 ? 'run' : 'runs'\n              } will be terminated. Do you wish to continue?`}\n            </div>\n            <div>\n              {showCheckbox ? (\n                <>\n                  <Checkbox\n                    checked={state.mustForce}\n                    size=\"small\"\n                    label=\"Force termination immediately\"\n                    onChange={onToggleForce}\n                  />\n                  {state.mustForce ? (\n                    <Box flex={{display: 'flex', direction: 'row', gap: 8}} margin={{top: 8}}>\n                      <Icon name=\"warning\" color={Colors.Yellow500} />\n                      <div>\n                        <strong>Warning:</strong> computational resources created by runs may not be\n                        cleaned up.\n                      </div>\n                    </Box>\n                  ) : null}\n                </>\n              ) : (\n                <Group direction=\"row\" spacing={8}>\n                  <Icon name=\"warning\" color={Colors.Yellow500} />\n                  <div>\n                    <strong>Warning:</strong> computational resources created by runs may not be\n                    cleaned up.\n                  </div>\n                </Group>\n              )}\n            </div>\n          </Group>\n        );\n      case 'terminating':\n      case 'completed':\n        const value = count > 0 ? state.termination.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{state.mustForce ? 'Forcing termination…' : 'Terminating…'}</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'terminating' ? (\n              <NavigationBlock message=\"Termination in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`${state.mustForce ? 'Force termination for' : 'Terminate'} ${`${count} ${\n                count === 1 ? 'run' : 'runs'\n              }`}`}\n            </Button>\n          </>\n        );\n      case 'terminating':\n        return (\n          <Button intent=\"danger\" disabled>\n            {state.mustForce\n              ? `Forcing termination for ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`\n              : `Terminating ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'terminating') {\n      return <div>Please do not close the window or navigate away during termination.</div>;\n    }\n\n    const errors = state.termination.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.termination.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {state.mustForce\n                ? `Successfully forced termination for ${successCount}\n                ${successCount === 1 ? 'run' : `runs`}.`\n                : `Successfully requested termination for ${successCount}\n              ${successCount === 1 ? 'run' : `runs`}.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {state.mustForce\n                  ? `Could not force termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`\n                  : `Could not request termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'terminating';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Terminate runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {Group, IconName} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {buildRepoAddress, buildRepoPathForHuman} from '../workspace/buildRepoAddress';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {\n  TargetRunWithParentSnapshot,\n  useRepositoryForRunWithParentSnapshot,\n} from '../workspace/useRepositoryForRun';\n\nexport const useJobAvailabilityErrorForRun = (\n  run: TargetRunWithParentSnapshot | null | undefined,\n): null | {tooltip?: string | JSX.Element; icon?: IconName; disabled: boolean} => {\n  const repoMatch = useRepositoryForRunWithParentSnapshot(run);\n\n  // The run hasn't loaded, so no error.\n  if (!run) {\n    return null;\n  }\n\n  if (!run.pipelineSnapshotId) {\n    return {\n      icon: 'error',\n      tooltip: `\"${run.pipelineName}\" could not be found.`,\n      disabled: true,\n    };\n  }\n\n  if (repoMatch) {\n    const {type: matchType} = repoMatch;\n\n    // The run matches the repository and active snapshot ID for the job. This is the best\n    // we can do, so consider it safe to run as-is.\n    if (matchType === 'origin-and-snapshot') {\n      return null;\n    }\n\n    // Beyond this point, we're just trying our best. Warn the user that behavior might not be what\n    // they expect.\n\n    if (matchType === 'origin-only') {\n      // Only the repo is a match.\n      return {\n        icon: 'warning',\n        tooltip: `The loaded version of \"${run.pipelineName}\" may be different than the one used for the original run.`,\n        disabled: false,\n      };\n    }\n\n    if (matchType === 'snapshot-only') {\n      // Only the snapshot ID matched, but not the repo.\n      const originRepoName = run.repositoryOrigin\n        ? repoAddressAsHumanString(\n            buildRepoAddress(\n              run.repositoryOrigin.repositoryName,\n              run.repositoryOrigin.repositoryLocationName,\n            ),\n          )\n        : null;\n\n      return {\n        icon: 'warning',\n        tooltip: (\n          <Group direction=\"column\" spacing={4}>\n            <div>{`The original run loaded \"${run.pipelineName}\" from ${\n              originRepoName || 'a different code location'\n            }.`}</div>\n            {originRepoName ? (\n              <div>\n                Original definition in: <strong>{originRepoName}</strong>\n              </div>\n            ) : null}\n          </Group>\n        ),\n        disabled: false,\n      };\n    }\n\n    // Only the job name matched. This could be from any repo in the workspace.\n    return {\n      icon: 'warning',\n      tooltip: `The job \"${run.pipelineName}\" may be a different version from the original pipeline run.`,\n      disabled: false,\n    };\n  }\n\n  // We could not find a repo that contained this job. Inform the user that they should\n  // load the missing repository.\n  const repoForRun = run.repositoryOrigin?.repositoryName;\n  const repoLocationForRun = run.repositoryOrigin?.repositoryLocationName;\n\n  const tooltip = (\n    <Group direction=\"column\" spacing={8}>\n      <div>{`\"${run.pipelineName}\" is not available in your definitions.`}</div>\n      {repoForRun && repoLocationForRun ? (\n        <div>{`Load definitions for ${buildRepoPathForHuman(\n          repoForRun,\n          repoLocationForRun,\n        )} and try again.`}</div>\n      ) : null}\n    </Group>\n  );\n\n  return {\n    icon: 'error',\n    tooltip,\n    disabled: true,\n  };\n};\n","import {DagsterRepoOption, useRepositoryOptions} from './WorkspaceContext';\nimport {findRepoContainingPipeline, repoContainsPipeline} from './findRepoContainingPipeline';\n\ntype MatchType = {\n  match: DagsterRepoOption;\n  type: 'origin' | 'pipeline-name-only';\n};\n\ntype MatchTypeWithSnapshot = {\n  match: DagsterRepoOption;\n  type: 'origin-and-snapshot' | 'origin-only' | 'snapshot-only' | 'pipeline-name-only';\n};\n\nexport interface TargetRunWithParentSnapshot extends TargetRun {\n  parentPipelineSnapshotId?: string | null;\n}\n\ninterface TargetRun {\n  pipelineName: string;\n  repositoryOrigin: null | {\n    repositoryLocationName: string;\n    repositoryName: string;\n  };\n  pipelineSnapshotId: string | null;\n}\n\nconst repoOriginMatchForRun = (options: DagsterRepoOption[], run: TargetRun | null | undefined) => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n  // Try to match the pipeline name within the specified origin, if possible.\n  const origin = run.repositoryOrigin;\n\n  if (!origin) {\n    return null;\n  }\n\n  const location = origin?.repositoryLocationName;\n  const name = origin?.repositoryName;\n\n  const match = options.find(\n    (option) => option.repository.name === name && option.repositoryLocation.name === location,\n  );\n\n  // The origin repo is loaded. Verify that a pipeline with this name exists and return the match if so.\n  return match && repoContainsPipeline(match, pipelineName) ? match : null;\n};\n\nconst jobNameMatchesForRun = (\n  options: DagsterRepoOption[],\n  run: TargetRun | null | undefined,\n): DagsterRepoOption[] | null => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n\n  // There is no origin repo. Find any repos that might contain a matching pipeline name.\n  const possibleMatches = findRepoContainingPipeline(options, pipelineName);\n  return possibleMatches.length ? possibleMatches : null;\n};\n\nconst snapshotMatchesForRun = (\n  options: DagsterRepoOption[],\n  run: TargetRunWithParentSnapshot | null | undefined,\n): DagsterRepoOption[] | null => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n\n  // When jobs are subsetted (with an opSelection or assetSelection), only their\n  // parentPipelineSnapshotId (the id of the pipelineSnapshot that they were subsetted from) will\n  // be found in the repository, so look for that instead.\n  const snapshotId = run.parentPipelineSnapshotId ?? run.pipelineSnapshotId;\n\n  // Find the repository that contains the specified pipeline name and snapshot ID, if any.\n  if (pipelineName && snapshotId) {\n    const snapshotMatches = findRepoContainingPipeline(options, pipelineName, snapshotId);\n    if (snapshotMatches.length) {\n      return snapshotMatches;\n    }\n  }\n\n  return null;\n};\n\n/**\n * The simple case. Find the repo match for this job name, or the first available\n * repo match for that job name.\n */\nexport const useRepositoryForRunWithoutSnapshot = (\n  run: TargetRun | null | undefined,\n): MatchType | null => {\n  const {options} = useRepositoryOptions();\n  const repoMatch = repoOriginMatchForRun(options, run);\n  if (repoMatch) {\n    return {match: repoMatch, type: 'origin'};\n  }\n  const jobNameMatches = jobNameMatchesForRun(options, run);\n  if (jobNameMatches && jobNameMatches.length) {\n    return {match: jobNameMatches[0]!, type: 'pipeline-name-only'};\n  }\n  return null;\n};\n\n/**\n * The more complex case, where a parent snapshot has been fetched. Here, use a\n * repo match and try to pair it with the snapshot ID. If that fails, use any repo\n * match, then any snapshot ID match, then any job name match.\n *\n * Retrieving a parent snapshot ID is expensive, so this should only be used for\n * one run at a time.\n */\nexport const useRepositoryForRunWithParentSnapshot = (\n  run: TargetRunWithParentSnapshot | null | undefined,\n): MatchTypeWithSnapshot | null => {\n  const {options} = useRepositoryOptions();\n\n  const repoMatch = repoOriginMatchForRun(options, run);\n  const snapshotMatches = snapshotMatchesForRun(options, run);\n  const jobNameMatches = jobNameMatchesForRun(options, run);\n\n  if (repoMatch) {\n    if (snapshotMatches) {\n      const repoAndSnapshotMatch = snapshotMatches.find(\n        (repoOption) =>\n          repoOption.repository.name === repoMatch.repository.name &&\n          repoOption.repositoryLocation.name === repoMatch.repositoryLocation.name,\n      );\n      if (repoAndSnapshotMatch) {\n        return {match: repoAndSnapshotMatch, type: 'origin-and-snapshot'};\n      }\n    }\n\n    return {match: repoMatch, type: 'origin-only'};\n  }\n\n  if (snapshotMatches && snapshotMatches[0]) {\n    return {match: snapshotMatches[0], type: 'snapshot-only'};\n  }\n\n  if (jobNameMatches && jobNameMatches[0]) {\n    return {match: jobNameMatches[0], type: 'pipeline-name-only'};\n  }\n\n  return null;\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n"],"names":["refineToError","data","deletePipelineRun","__typename","Error","initializeState","frozenRuns","step","deletion","completed","errors","deletionDialogReducer","prevState","action","type","_objectSpread","_defineProperty","id","error","DeletionDialog","props","isOpen","onClose","onComplete","onTerminateInstead","selectedRuns","React","_React$useReducer","current","_React$useReducer2","_slicedToArray","state","dispatch","runIDs","Object","keys","count","length","terminatableCount","filter","_useMutation","useMutation","DELETE_MUTATION","destroy","mutate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","runList","_i","_runList","runId","_yield$destroy","wrap","_context","prev","next","variables","sent","stop","apply","arguments","canQuicklyClose","_jsxs","Dialog","title","canEscapeKeyClose","canOutsideClickClose","children","_jsx","DialogBody","Group","direction","spacing","concat","_Fragment","value","ProgressBar","intent","Math","max","animate","NavigationBlock","message","progressContent","errorCount","successCount","alignItems","Icon","name","color","Colors","map","_errors$runId","Mono","slice","completionContent","DialogFooter","Button","onClick","disabled","buttons","handler","e","preventDefault","returnValue","window","addEventListener","removeEventListener","Prompt","RunStats","stats","useQuery","RUN_STATS_QUERY","loading","RunStatsDetailsContainer","Box","padding","flex","justifyContent","Spinner","purpose","result","pipelineRunOrError","PythonErrorInfo","runPath","Link","to","stepsSucceeded","stepsFailed","materializations","expectations","gql","_templateObject","_taggedTemplateLiteral","PYTHON_ERROR_FRAGMENT","styled","displayName","componentId","RunStatusWithStats","rest","_objectWithoutProperties","_excluded","Popover","position","interactionKind","content","hoverOpenDelay","RunStatusIndicator","_ref2","status","size","RunStatusDot","pulse","inProgressStatuses","queuedStatuses","pulseAnimation","keyframes","_ref3","_ref4","_ref5","_ref6","css","_templateObject2","_ref7","RUN_STATUS_COLORS","statusToIntent","RunStatus","assertUnreachable","runStatusToString","runStatusToBackfillStateString","QUEUED","NOT_STARTED","MANAGED","STARTED","STARTING","CANCELING","SUCCESS","FAILURE","CANCELED","SCHEDULED","RunStatusTag","Tag","gap","RunStatusTagWithID","CaptionMono","RunStatusTagWithStats","usePortal","terminatePipelineExecution","ErrorEvent","mustForce","some","termination","terminationDialogReducer","checked","TerminationDialog","TERMINATE_MUTATION","terminate","policy","TerminateRunPolicy","_yield$terminate","terminatePolicy","onToggleForce","event","target","showCheckbox","Checkbox","label","onChange","display","margin","top","useJobAvailabilityErrorForRun","run","_run$repositoryOrigin","_run$repositoryOrigin2","repoMatch","useRepositoryForRunWithParentSnapshot","pipelineSnapshotId","icon","tooltip","pipelineName","matchType","originRepoName","repositoryOrigin","repoAddressAsHumanString","buildRepoAddress","repositoryName","repositoryLocationName","repoForRun","repoLocationForRun","buildRepoPathForHuman","repoOriginMatchForRun","options","origin","location","match","find","option","repository","repositoryLocation","repoContainsPipeline","jobNameMatchesForRun","possibleMatches","findRepoContainingPipeline","useRepositoryForRunWithoutSnapshot","useRepositoryOptions","jobNameMatches","snapshotMatches","_run$parentPipelineSn","snapshotId","parentPipelineSnapshotId","snapshotMatchesForRun","repoAndSnapshotMatch","repoOption","PageHeader","tags","right","tabs","PageHeaderContainer","background","left","border","side","width","bottom","withConfig"],"sourceRoot":""}
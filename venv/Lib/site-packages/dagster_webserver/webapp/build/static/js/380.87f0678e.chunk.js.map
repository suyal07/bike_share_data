{"version":3,"file":"static/js/380.87f0678e.chunk.js","mappings":"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","sources":["../../core/src/hooks/useSelectionReducer.ts","../../core/src/runs/AssetKeyTagCollection.tsx","../../core/src/runs/ReexecutionDialog.tsx","../../core/src/runs/RunActionsMenu.tsx","../../core/src/runs/RunCreatedByCell.tsx","../../core/src/runs/RunTable.tsx","../../core/src/ui/MenuLink.tsx"],"sourcesContent":["import React from 'react';\n\ntype State = {\n  checkedIds: Set<string>;\n  lastCheckedId: string | null;\n};\n\ntype Action =\n  | {type: 'toggle-one'; payload: {checked: boolean; id: string}}\n  | {\n      type: 'toggle-slice';\n      payload: {checked: boolean; id: string; allIds: string[]};\n    }\n  | {type: 'toggle-all'; payload: {checked: boolean; allIds: string[]}};\n\nconst reducer = (state: State, action: Action): State => {\n  const copy = new Set(Array.from(state.checkedIds));\n  switch (action.type) {\n    case 'toggle-one': {\n      const {checked, id} = action.payload;\n      checked ? copy.add(id) : copy.delete(id);\n      return {lastCheckedId: id, checkedIds: copy};\n    }\n\n    case 'toggle-slice': {\n      const {checked, id, allIds} = action.payload;\n      const {lastCheckedId} = state;\n\n      const indexOfLast = lastCheckedId ? allIds.indexOf(lastCheckedId) : -1;\n      const indexOfChecked = allIds.indexOf(id);\n      if (indexOfLast === -1 || indexOfChecked === -1) {\n        return state;\n      }\n\n      const [start, end] = [indexOfLast, indexOfChecked].sort();\n      allIds.slice(start, end! + 1).forEach((id) => {\n        checked ? copy.add(id) : copy.delete(id);\n      });\n\n      return {\n        lastCheckedId: id,\n        checkedIds: copy,\n      };\n    }\n\n    case 'toggle-all': {\n      const {checked, allIds} = action.payload;\n      return {\n        lastCheckedId: null,\n        checkedIds: checked ? new Set(allIds) : new Set(),\n      };\n    }\n  }\n};\n\nconst initialState: State = {\n  checkedIds: new Set(),\n  lastCheckedId: null,\n};\n\nexport function useSelectionReducer(allIds: string[]) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const onToggleFactory = (id: string) => (values: {checked: boolean; shiftKey: boolean}) => {\n    const {checked, shiftKey} = values;\n    if (shiftKey && state.lastCheckedId) {\n      dispatch({type: 'toggle-slice', payload: {checked, id, allIds}});\n    } else {\n      dispatch({type: 'toggle-one', payload: {checked, id}});\n    }\n  };\n\n  const onToggleAll = (checked: boolean) => {\n    dispatch({type: 'toggle-all', payload: {checked, allIds}});\n  };\n\n  return [state, {onToggleFactory, onToggleAll}] as const;\n}\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Table,\n  Tag,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {displayNameForAssetKey, tokenForAssetKey} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {AssetKey} from '../assets/types';\n\nconst MAX_ASSET_TAGS = 3;\n\nexport const AssetKeyTagCollection: React.FC<{\n  assetKeys: AssetKey[] | null;\n  modalTitle?: string;\n  useTags?: boolean;\n}> = React.memo(({assetKeys, useTags, modalTitle = 'Assets in Run'}) => {\n  const [showMore, setShowMore] = React.useState(false);\n\n  if (!assetKeys || !assetKeys.length) {\n    return null;\n  }\n\n  const assetCount = assetKeys.length;\n  const displayed = assetCount <= MAX_ASSET_TAGS ? assetKeys : [];\n  const hidden = assetCount - displayed.length;\n\n  const showMoreDialog =\n    hidden > 0 ? (\n      <Dialog\n        title={modalTitle}\n        onClose={() => setShowMore(false)}\n        style={{minWidth: '400px', maxWidth: '80vw', maxHeight: '70vh'}}\n        isOpen={showMore}\n      >\n        {showMore ? (\n          <Box\n            padding={{bottom: 12}}\n            border={{side: 'bottom', color: Colors.KeylineGray, width: 1}}\n            style={{overflowY: 'auto'}}\n            background={Colors.White}\n          >\n            <Table>\n              <thead>\n                <tr>\n                  <th>Asset key</th>\n                </tr>\n              </thead>\n              <tbody>\n                {assetKeys.map((assetKey, ii) => (\n                  <tr key={`${tokenForAssetKey(assetKey)}-${ii}`}>\n                    <td>\n                      <Link to={assetDetailsPathForKey(assetKey)} key={tokenForAssetKey(assetKey)}>\n                        {displayNameForAssetKey(assetKey)}\n                      </Link>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Box>\n        ) : null}\n        <DialogFooter>\n          <Button intent=\"primary\" autoFocus onClick={() => setShowMore(false)}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    ) : undefined;\n\n  if (useTags) {\n    return (\n      <>\n        {displayed.map((assetKey, ii) => (\n          <Link to={assetDetailsPathForKey(assetKey)} key={`${tokenForAssetKey(assetKey)}-${ii}`}>\n            <Tag intent=\"none\" interactive icon=\"asset\">\n              {displayNameForAssetKey(assetKey)}\n            </Tag>\n          </Link>\n        ))}\n        {hidden > 0 && (\n          <ButtonLink onClick={() => setShowMore(true)}>\n            <Tag intent=\"none\" icon=\"asset\">\n              {hidden} assets\n            </Tag>\n          </ButtonLink>\n        )}\n        {showMoreDialog}\n      </>\n    );\n  }\n\n  return (\n    <Box flex={{direction: 'row', gap: 8}}>\n      <Icon color={Colors.Gray400} name=\"asset\" size={16} style={{marginTop: 2}} />\n      <Box style={{flex: 1}} flex={{wrap: 'wrap', display: 'inline-flex'}}>\n        {displayed.map((assetKey, idx) => (\n          <Link\n            to={assetDetailsPathForKey(assetKey)}\n            key={tokenForAssetKey(assetKey)}\n            style={{marginRight: 4}}\n          >\n            {`${displayNameForAssetKey(assetKey)}${idx < displayed.length - 1 ? ',' : ''}`}\n          </Link>\n        ))}\n\n        {hidden > 0 && displayed.length > 0 ? (\n          <ButtonLink onClick={() => setShowMore(true)}>{` + ${hidden} more`}</ButtonLink>\n        ) : hidden > 0 ? (\n          <ButtonLink onClick={() => setShowMore(true)}>{`${hidden} assets`}</ButtonLink>\n        ) : undefined}\n      </Box>\n      {showMoreDialog}\n    </Box>\n  );\n});\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {Button, Colors, DialogBody, DialogFooter, Dialog, Group, Icon, Mono} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {ReexecutionStrategy} from '../graphql/types';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {LAUNCH_PIPELINE_REEXECUTION_MUTATION} from './RunUtils';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (reexecutionState: ReexecutionState) => void;\n  selectedRuns: {[id: string]: string};\n  reexecutionStrategy: ReexecutionStrategy;\n}\n\nconst refineToError = (data: LaunchPipelineReexecutionMutation | null | undefined) => {\n  if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.launchPipelineReexecution;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\nconst errorText = (error: Error) => {\n  if (!error) {\n    return 'Unknown error';\n  }\n  switch (error.__typename) {\n    case 'ConflictingExecutionParamsError':\n      return 'Conflicting execution parameters';\n    case 'InvalidOutputError':\n      return 'Invalid output';\n    case 'InvalidStepError':\n      return 'Invalid step';\n    case 'NoModeProvidedError':\n      return 'No mode provided';\n    case 'PipelineNotFoundError':\n      return 'Job not found in workspace';\n    case 'PresetNotFoundError':\n      return 'Preset not found';\n    case 'PythonError':\n      return error.message;\n    case 'RunConfigValidationInvalid':\n      return 'Run config invalid';\n    case 'RunConflict':\n      return 'Run conflict';\n    case 'UnauthorizedError':\n      return 'Re-execution not authorized';\n    case 'InvalidSubsetError':\n      return 'Invalid op subset: ' + error.message;\n    default:\n      return 'Unknown error';\n  }\n};\n\ntype ReexecutionState = {completed: number; errors: {[id: string]: Error}};\n\ntype ReexecutionDialogState = {\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'reexecuting' | 'completed';\n  reexecution: ReexecutionState;\n};\n\ntype SelectedRuns = {[id: string]: string};\n\nconst initializeState = (selectedRuns: SelectedRuns): ReexecutionDialogState => {\n  return {\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    reexecution: {completed: 0, errors: {}},\n  };\n};\n\ntype ReexecutionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'reexecution-success'}\n  | {type: 'reexecution-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst reexecutionDialogReducer = (\n  prevState: ReexecutionDialogState,\n  action: ReexecutionDialogAction,\n): ReexecutionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'reexecuting'};\n    case 'reexecution-success': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {...reexecution, completed: reexecution.completed + 1},\n      };\n    }\n    case 'reexecution-error': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {\n          ...reexecution,\n          completed: reexecution.completed + 1,\n          errors: {...reexecution.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const ReexecutionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, reexecutionStrategy, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // re-executing. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    reexecutionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await reexecute({\n        variables: {\n          reexecutionParams: {\n            parentRunId: runId,\n            strategy: reexecutionStrategy,\n          },\n        },\n      });\n\n      if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n        dispatch({type: 'reexecution-success'});\n      } else {\n        dispatch({type: 'reexecution-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.reexecution);\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for re-execution.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        const message = () => {\n          if (reexecutionStrategy === ReexecutionStrategy.ALL_STEPS) {\n            return (\n              <span>\n                {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n                <strong>with all steps</strong>. Do you wish to continue?\n              </span>\n            );\n          }\n          return (\n            <span>\n              {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n              <strong>from failure</strong>. Do you wish to continue?\n            </span>\n          );\n        };\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>{message()}</div>\n          </Group>\n        );\n      case 'reexecuting':\n      case 'completed':\n        const value = count > 0 ? state.reexecution.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'reexecuting' ? (\n              <NavigationBlock message=\"Re-execution in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"primary\" onClick={mutate}>\n              {`Re-execute ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n          </>\n        );\n      case 'reexecuting':\n        return (\n          <Button intent=\"primary\" disabled>\n            {`Re-executing ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'reexecuting') {\n      return <div>Please do not close the window or navigate away during re-execution.</div>;\n    }\n\n    const errors = state.reexecution.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.reexecution.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {`Successfully requested re-execution for ${successCount} ${\n                successCount === 1 ? 'run' : `runs`\n              }.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {`Could not request re-execution for ${errorCount} ${\n                  errorCount === 1 ? 'run' : 'runs'\n                }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8} alignItems=\"baseline\">\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errorText(errors[runId])}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'reexecuting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={\n        reexecutionStrategy === ReexecutionStrategy.ALL_STEPS\n          ? 'Re-execute runs'\n          : 'Re-execute runs from failure'\n      }\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery, useMutation} from '@apollo/client';\nimport {\n  Button,\n  Icon,\n  MenuDivider,\n  MenuExternalLink,\n  MenuItem,\n  Menu,\n  Popover,\n  Tooltip,\n  DialogFooter,\n  Dialog,\n  StyledReadOnlyCodeMirror,\n  JoinedButtons,\n  DialogBody,\n  Box,\n  Colors,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {useCopyToClipboard} from '../app/browser';\nimport {ReexecutionStrategy} from '../graphql/types';\nimport {NO_LAUNCH_PERMISSION_MESSAGE} from '../launchpad/LaunchRootExecutionButton';\nimport {getPipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePathFromRunDetails} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {ReexecutionDialog} from './ReexecutionDialog';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {RunTags} from './RunTags';\nimport {\n  LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  RunsQueryRefetchContext,\n  getReexecutionVariables,\n  handleLaunchResult,\n} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {TerminationDialog} from './TerminationDialog';\nimport {\n  PipelineEnvironmentQuery,\n  PipelineEnvironmentQueryVariables,\n} from './types/RunActionsMenu.types';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\n\nexport const RunActionsMenu: React.FC<{\n  run: RunTableRunFragment;\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  onAddTag?: (token: RunFilterToken) => void;\n}> = React.memo(({run, onAddTag, additionalActionsForRun}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'config' | 'tags'\n  >('none');\n\n  const {rootServerURI} = React.useContext(AppContext);\n  const history = useHistory();\n\n  const copyConfig = useCopyToClipboard();\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION, {\n    onCompleted: refetch,\n  });\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<\n    PipelineEnvironmentQuery,\n    PipelineEnvironmentQueryVariables\n  >(PIPELINE_ENVIRONMENT_QUERY, {\n    variables: {runId: run.id},\n  });\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'Run' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(pipelineRun);\n  const jobError = useJobAvailabilityErrorForRun({\n    ...run,\n    parentPipelineSnapshotId: pipelineRun?.parentPipelineSnapshotId,\n  });\n\n  const isFinished = doneStatuses.has(run.status);\n  const isJob = !!(repoMatch && isThisThingAJob(repoMatch?.match, run.pipelineName));\n\n  const infoReady = called ? !loading : false;\n\n  const reexecutionDisabledState = React.useMemo(() => {\n    if (!run.hasReExecutePermission) {\n      return {disabled: true, message: DEFAULT_DISABLED_REASON};\n    }\n    if (jobError) {\n      return {disabled: jobError.disabled, message: jobError.tooltip};\n    }\n    if (!infoReady) {\n      return {disabled: true};\n    }\n    return {disabled: false};\n  }, [run.hasReExecutePermission, jobError, infoReady]);\n\n  return (\n    <>\n      <JoinedButtons>\n        <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton>\n        <Popover\n          content={\n            <Menu>\n              <MenuItem\n                tagName=\"button\"\n                text={loading ? 'Loading configuration...' : 'View configuration...'}\n                disabled={!runConfigYaml}\n                icon=\"open_in_new\"\n                onClick={() => setVisibleDialog('config')}\n              />\n              <MenuItem\n                tagName=\"button\"\n                text={\n                  <div style={{display: 'contents'}}>\n                    View all tags\n                    <Box\n                      flex={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                      }}\n                      padding={{horizontal: 8}}\n                    >\n                      <SlashShortcut>t</SlashShortcut>\n                    </Box>\n                  </div>\n                }\n                icon=\"tag\"\n                onClick={() => setVisibleDialog('tags')}\n              />\n\n              {run.pipelineSnapshotId ? (\n                <LinkNoUnderline\n                  to={getPipelineSnapshotLink(run.pipelineName, run.pipelineSnapshotId)}\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"job\"\n                    text=\"View snapshot\"\n                    onClick={() => setVisibleDialog('tags')}\n                  />\n                </LinkNoUnderline>\n              ) : null}\n              <MenuDivider />\n              <>\n                <Tooltip\n                  content={\n                    run.hasReExecutePermission\n                      ? OPEN_LAUNCHPAD_UNKNOWN\n                      : NO_LAUNCH_PERMISSION_MESSAGE\n                  }\n                  position=\"left\"\n                  disabled={infoReady && run.hasReExecutePermission}\n                  targetTagName=\"div\"\n                >\n                  <MenuLink\n                    text=\"Open in Launchpad...\"\n                    disabled={!infoReady || !run.hasReExecutePermission}\n                    icon=\"edit\"\n                    to={workspacePathFromRunDetails({\n                      id: run.id,\n                      pipelineName: run.pipelineName,\n                      repositoryName: repoMatch?.match.repository.name,\n                      repositoryLocationName: repoMatch?.match.repositoryLocation.name,\n                      isJob,\n                    })}\n                  />\n                </Tooltip>\n                <Tooltip\n                  content={reexecutionDisabledState.message || ''}\n                  position=\"left\"\n                  canShow={reexecutionDisabledState.disabled}\n                  targetTagName=\"div\"\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    text=\"Re-execute\"\n                    disabled={reexecutionDisabledState.disabled}\n                    icon=\"refresh\"\n                    onClick={async () => {\n                      if (repoMatch && runConfigYaml) {\n                        const result = await reexecute({\n                          variables: getReexecutionVariables({\n                            run: {...run, runConfigYaml},\n                            style: {type: 'all'},\n                            repositoryLocationName: repoMatch.match.repositoryLocation.name,\n                            repositoryName: repoMatch.match.repository.name,\n                          }),\n                        });\n                        handleLaunchResult(\n                          run.pipelineName,\n                          result.data?.launchPipelineReexecution,\n                          history,\n                          {\n                            behavior: 'open',\n                          },\n                        );\n                      }\n                    }}\n                  />\n                </Tooltip>\n                {isFinished || !run.hasTerminatePermission ? null : (\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"cancel\"\n                    text=\"Terminate\"\n                    onClick={() => setVisibleDialog('terminate')}\n                  />\n                )}\n                {additionalActionsForRun?.(run)}\n                <MenuDivider />\n              </>\n              <MenuExternalLink\n                text=\"Download debug file\"\n                icon=\"download_for_offline\"\n                download\n                href={`${rootServerURI}/download_debug/${run.id}`}\n              />\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n          position=\"bottom-right\"\n          onOpening={() => {\n            if (!called) {\n              loadEnv();\n            }\n          }}\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </JoinedButtons>\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      <Dialog\n        isOpen={visibleDialog === 'tags'}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <Dialog\n        isOpen={visibleDialog === 'config'}\n        title=\"Config\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <StyledReadOnlyCodeMirror\n          value={runConfigYaml || ''}\n          options={{lineNumbers: true, mode: 'yaml'}}\n        />\n        <DialogFooter topBorder>\n          <Button\n            intent=\"none\"\n            onClick={async () => {\n              copyConfig(runConfigYaml || '');\n              await showSharedToaster({\n                intent: 'success',\n                icon: 'copy_to_clipboard_done',\n                message: 'Copied!',\n              });\n            }}\n          >\n            Copy config\n          </Button>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n});\n\nexport const RunBulkActionsMenu: React.FC<{\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}> = React.memo(({selected, clearSelection}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'reexecute-from-failure' | 'reexecute'\n  >('none');\n\n  const canTerminateAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canDeleteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canReexecuteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasReExecutePermission);\n  }, [selected]);\n\n  const disabled = !canTerminateAny && !canDeleteAny;\n\n  const terminatableRuns = selected.filter(\n    (r) => !doneStatuses.has(r?.status) && r.hasTerminatePermission,\n  );\n  const terminateableIDs = terminatableRuns.map((r) => r.id);\n  const terminateableMap = terminatableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.canTerminate}),\n    {},\n  );\n\n  const deleteableIDs = selected.map((run) => run.id);\n  const deletionMap = selected.reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {});\n\n  const reexecuteFromFailureRuns = selected.filter(\n    (r) => failedStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecuteFromFailureMap = reexecuteFromFailureRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const reexecutableRuns = selected.filter(\n    (r) => doneStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecutableMap = reexecutableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        disabled={disabled || selected.length === 0}\n        content={\n          <Menu>\n            {canTerminateAny ? (\n              <MenuItem\n                icon=\"cancel\"\n                text={`Terminate ${terminateableIDs.length} ${\n                  terminateableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={terminateableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeleteAny ? (\n              <MenuItem\n                icon=\"delete\"\n                intent=\"danger\"\n                text={`Delete ${deleteableIDs.length} ${\n                  deleteableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={deleteableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n            {canReexecuteAny ? (\n              <>\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecutableRuns.length} ${\n                    reexecutableRuns.length === 1 ? 'run' : 'runs'\n                  }`}\n                  disabled={reexecutableRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute');\n                  }}\n                />\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecuteFromFailureRuns.length} ${\n                    reexecuteFromFailureRuns.length === 1 ? 'run' : 'runs'\n                  } from failure`}\n                  disabled={reexecuteFromFailureRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute-from-failure');\n                  }}\n                />\n              </>\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n      >\n        <Button\n          disabled={disabled || selected.length === 0}\n          rightIcon={<Icon name=\"expand_more\" />}\n          intent=\"primary\"\n        >\n          Actions\n        </Button>\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={terminateableMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute-from-failure'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecuteFromFailureMap}\n        reexecutionStrategy={ReexecutionStrategy.FROM_FAILURE}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecutableMap}\n        reexecutionStrategy={ReexecutionStrategy.ALL_STEPS}\n      />\n    </>\n  );\n});\n\nconst OPEN_LAUNCHPAD_UNKNOWN =\n  'Launchpad is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml and parentPipelineSnapshotId on load in Runs page, they're slow.\nconst PIPELINE_ENVIRONMENT_QUERY = gql`\n  query PipelineEnvironmentQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        pipelineName\n        pipelineSnapshotId\n        runConfigYaml\n        pipelineName\n        parentPipelineSnapshotId\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n      }\n    }\n  }\n`;\n\nconst SlashShortcut = styled.div`\n  border-radius: 4px;\n  padding: 0px 6px;\n  background: ${Colors.Gray100};\n  color: ${Colors.Gray500};\n`;\n\nconst LinkNoUnderline = styled(Link)`\n  text-decoration: none !important;\n`;\n","import {Box, Tag} from '@dagster-io/ui';\nimport React from 'react';\n\nimport {useLaunchPadHooks} from '../launchpad/LaunchpadHooksContext';\n\nimport {DagsterTag} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTable.types';\n\ntype Props = {\n  run: RunTableRunFragment;\n  onAddTag?: (tag: RunFilterToken) => void;\n};\n\nexport function RunCreatedByCell(props: Props) {\n  const tags = props.run.tags || [];\n\n  const scheduleTag = tags.find((tag) => tag.key === DagsterTag.ScheduleName);\n  const sensorTag = tags.find((tag) => tag.key === DagsterTag.SensorName);\n  const user = tags.find((tag) => tag.key === DagsterTag.User);\n\n  const automaterialize = tags.find(\n    (tag) =>\n      tag.key === DagsterTag.Automaterialize ||\n      // Backwards compatibility\n      (tag.key === DagsterTag.CreatedBy && tag.value === 'auto_materialize'),\n  );\n  const createdBy = tags.find((tag) => tag.key === DagsterTag.CreatedBy);\n\n  const {UserDisplay} = useLaunchPadHooks();\n\n  let creator;\n\n  if (user) {\n    creator = <UserDisplay email={user.value} />;\n  } else if (scheduleTag) {\n    creator = (\n      <Tag icon=\"schedule\" key=\"schedule\">\n        {scheduleTag.value}\n      </Tag>\n    );\n  } else if (sensorTag) {\n    creator = (\n      <Tag icon=\"sensors\" key=\"sensor\">\n        {sensorTag.value}\n      </Tag>\n    );\n  } else if (automaterialize) {\n    creator = (\n      <Tag icon=\"auto_materialize_policy\" key=\"automaterialize\">\n        Auto-materialize policy\n      </Tag>\n    );\n  } else {\n    creator = <Tag icon=\"account_circle\">Manually launched</Tag>;\n  }\n\n  return (\n    <Box flex={{direction: 'column', alignItems: 'flex-start'}}>{creator || createdBy?.value}</Box>\n  );\n}\n","import {gql} from '@apollo/client';\nimport {\n  Box,\n  Checkbox,\n  Colors,\n  Icon,\n  NonIdealState,\n  Table,\n  Mono,\n  Tag,\n  Button,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  BaseTag,\n  ButtonLink,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {RunsFilter} from '../graphql/types';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {useRepositoryForRunWithoutSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePipelinePath, workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {AssetKeyTagCollection} from './AssetKeyTagCollection';\nimport {RunActionsMenu, RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunCreatedByCell} from './RunCreatedByCell';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {DagsterTag, TagType} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {\n  assetKeysForRun,\n  RunStateSummary,\n  RunTime,\n  RUN_TIME_FRAGMENT,\n  titleForRun,\n} from './RunUtils';\nimport {RunFilterToken, runsPathWithFilters} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTable.types';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  filter?: RunsFilter;\n  onAddTag?: (token: RunFilterToken) => void;\n  actionBarComponents?: React.ReactNode;\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n  belowActionBarComponents?: React.ReactNode;\n  hideCreatedBy?: boolean;\n  additionalActionsForRun?: (run: RunTableRunFragment) => JSX.Element[];\n  emptyState?: () => React.ReactNode;\n}\n\nexport const RunTable = (props: RunTableProps) => {\n  const {\n    runs,\n    filter,\n    onAddTag,\n    highlightedIds,\n    actionBarComponents,\n    belowActionBarComponents,\n    hideCreatedBy,\n    emptyState,\n  } = props;\n  const allIds = runs.map((r) => r.id);\n\n  const [{checkedIds}, {onToggleFactory, onToggleAll}] = useSelectionReducer(allIds);\n\n  const canTerminateOrDeleteAny = React.useMemo(() => {\n    return runs.some((run) => run.hasTerminatePermission || run.hasDeletePermission);\n  }, [runs]);\n\n  function content() {\n    if (runs.length === 0) {\n      const anyFilter = !!Object.keys(filter || {}).length;\n      if (emptyState) {\n        return <>{emptyState()}</>;\n      }\n\n      return (\n        <div>\n          <Box margin={{vertical: 32}}>\n            {anyFilter ? (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No matching runs\"\n                description=\"No runs were found for this filter.\"\n              />\n            ) : (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No runs found\"\n                description={\n                  <Box flex={{direction: 'column', gap: 12}}>\n                    <div>You have not launched any runs yet.</div>\n                    <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n                      <AnchorButton icon={<Icon name=\"add_circle\" />} to=\"/overview/jobs\">\n                        Launch a run\n                      </AnchorButton>\n                      <span>or</span>\n                      <AnchorButton icon={<Icon name=\"materialization\" />} to=\"/asset-groups\">\n                        Materialize an asset\n                      </AnchorButton>\n                    </Box>\n                  </Box>\n                }\n              />\n            )}\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <Table>\n          <thead>\n            <tr>\n              {canTerminateOrDeleteAny ? (\n                <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n                  <Checkbox\n                    indeterminate={checkedIds.size > 0 && checkedIds.size !== runs.length}\n                    checked={checkedIds.size === runs.length}\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                      if (e.target instanceof HTMLInputElement) {\n                        onToggleAll(e.target.checked);\n                      }\n                    }}\n                  />\n                </th>\n              ) : null}\n              <th style={{width: 90}}>Run ID</th>\n              <th style={{width: 180}}>Created date</th>\n              <th>Target</th>\n              {hideCreatedBy ? null : <th style={{width: 160}}>Launched by</th>}\n              <th style={{width: 120}}>Status</th>\n              <th style={{width: 190}}>Duration</th>\n              {props.additionalColumnHeaders}\n              <th style={{width: 52}} />\n            </tr>\n          </thead>\n          <tbody>\n            {runs.map((run) => (\n              <RunRow\n                canTerminateOrDelete={run.hasTerminatePermission || run.hasDeletePermission}\n                run={run}\n                key={run.id}\n                onAddTag={onAddTag}\n                checked={checkedIds.has(run.id)}\n                additionalColumns={props.additionalColumnsForRow?.(run)}\n                additionalActionsForRun={props.additionalActionsForRun}\n                onToggleChecked={onToggleFactory(run.id)}\n                isHighlighted={highlightedIds && highlightedIds.includes(run.id)}\n                hideCreatedBy={hideCreatedBy}\n              />\n            ))}\n          </tbody>\n        </Table>\n      );\n    }\n  }\n\n  const selectedFragments = runs.filter((run) => checkedIds.has(run.id));\n\n  return (\n    <>\n      <ActionBar\n        top={\n          <Box\n            flex={{\n              direction: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              grow: 1,\n            }}\n          >\n            {actionBarComponents}\n            <RunBulkActionsMenu\n              selected={selectedFragments}\n              clearSelection={() => onToggleAll(false)}\n            />\n          </Box>\n        }\n        bottom={belowActionBarComponents}\n      />\n      {content()}\n    </>\n  );\n};\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on Run {\n    id\n    status\n    stepKeysToExecute\n    canTerminate\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    status\n    tags {\n      key\n      value\n    }\n    ...RunTimeFragment\n  }\n\n  ${RUN_TIME_FRAGMENT}\n`;\n\nconst RunRow: React.FC<{\n  run: RunTableRunFragment;\n  canTerminateOrDelete: boolean;\n  onAddTag?: (token: RunFilterToken) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  isHighlighted?: boolean;\n  hideCreatedBy?: boolean;\n}> = ({\n  run,\n  canTerminateOrDelete,\n  onAddTag,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  additionalActionsForRun,\n  isHighlighted,\n  hideCreatedBy,\n}) => {\n  const {pipelineName} = run;\n  const repo = useRepositoryForRunWithoutSnapshot(run);\n\n  const isJob = React.useMemo(() => {\n    if (repo) {\n      const pipelinesAndJobs = repo.match.repository.pipelines;\n      const match = pipelinesAndJobs.find((pipelineOrJob) => pipelineOrJob.name === pipelineName);\n      return !!match?.isJob;\n    }\n    return false;\n  }, [repo, pipelineName]);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  const isReexecution = run.tags.some((tag) => tag.key === DagsterTag.ParentRunId);\n\n  const targetBackfill = run.tags.find((tag) => tag.key === DagsterTag.Backfill);\n  const targetPartition = run.tags.find((tag) => tag.key === DagsterTag.Partition);\n  const targetPartitionSet = run.tags.find((tag) => tag.key === DagsterTag.PartitionSet);\n  const targetPartitionRangeStart = run.tags.find(\n    (tag) => tag.key === DagsterTag.AssetPartitionRangeStart,\n  );\n  const targetPartitionRangeEnd = run.tags.find(\n    (tag) => tag.key === DagsterTag.AssetPartitionRangeEnd,\n  );\n\n  const [showRunTags, setShowRunTags] = React.useState(false);\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const tagsToShow = React.useMemo(() => {\n    const tags: TagType[] = [];\n    if (targetBackfill) {\n      const link = run.assetSelection?.length\n        ? `/overview/backfills/${targetBackfill.value}`\n        : runsPathWithFilters([\n            {\n              token: 'tag',\n              value: `${DagsterTag.Backfill}=${targetBackfill.value}`,\n            },\n          ]);\n      tags.push({\n        key: targetBackfill.key,\n        value: targetBackfill.value,\n        link,\n      });\n    }\n    if (targetPartition) {\n      tags.push(targetPartition);\n    } else if (targetPartitionSet) {\n      tags.push(targetPartitionSet);\n    } else if (targetPartitionRangeStart !== undefined && targetPartitionRangeEnd !== undefined) {\n      tags.push(targetPartitionRangeStart, targetPartitionRangeEnd);\n    }\n    return tags;\n  }, [\n    run.assetSelection?.length,\n    targetBackfill,\n    targetPartition,\n    targetPartitionRangeEnd,\n    targetPartitionRangeStart,\n    targetPartitionSet,\n  ]);\n\n  return (\n    <Row\n      highlighted={!!isHighlighted}\n      onMouseEnter={() => {\n        setIsHovered(true);\n      }}\n      onMouseLeave={() => {\n        setIsHovered(false);\n      }}\n    >\n      {canTerminateOrDelete ? (\n        <td>{onToggleChecked ? <Checkbox checked={!!checked} onChange={onChange} /> : null}</td>\n      ) : null}\n      <td>\n        <Link to={`/runs/${run.id}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          {isReexecution ? (\n            <div>\n              <Tag icon=\"cached\">Re-execution</Tag>\n            </div>\n          ) : null}\n        </Box>\n      </td>\n      <td style={{position: 'relative'}}>\n        <Box flex={{direction: 'column', gap: 5}}>\n          {isHiddenAssetGroupJob(run.pipelineName) ? (\n            <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} />\n          ) : (\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n              <PipelineReference\n                isJob={isJob}\n                showIcon\n                pipelineName={run.pipelineName}\n                pipelineHrefContext=\"no-link\"\n              />\n              <Link\n                to={\n                  repo\n                    ? workspacePipelinePath({\n                        repoName: repo.match.repository.name,\n                        repoLocation: repo.match.repositoryLocation.name,\n                        pipelineName: run.pipelineName,\n                        isJob,\n                      })\n                    : workspacePipelinePathGuessRepo(run.pipelineName)\n                }\n                target=\"_blank\"\n              >\n                <Icon name=\"open_in_new\" color={Colors.Blue500} />\n              </Link>\n            </Box>\n          )}\n          <Box flex={{direction: 'row', gap: 8, wrap: 'wrap'}}>\n            {run.tags.length ? (\n              <Box>\n                <BaseTag\n                  fillColor={Colors.Gray100}\n                  label={\n                    <ButtonLink\n                      onClick={() => {\n                        setShowRunTags(true);\n                      }}\n                    >\n                      {run.tags.length} tag{run.tags.length === 1 ? '' : 's'}\n                    </ButtonLink>\n                  }\n                />\n              </Box>\n            ) : null}\n            <RunTagsWrapper>\n              {tagsToShow.length ? (\n                <RunTags\n                  tags={tagsToShow}\n                  mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n                  onAddTag={onAddTag}\n                />\n              ) : null}\n            </RunTagsWrapper>\n          </Box>\n        </Box>\n        {isHovered && run.tags.length ? (\n          <ShortcutHandler\n            key=\"runtabletags\"\n            onShortcut={() => {\n              setShowRunTags((showRunTags) => !showRunTags);\n            }}\n            shortcutLabel=\"t\"\n            shortcutFilter={(e) => e.code === 'KeyT'}\n          >\n            {null}\n          </ShortcutHandler>\n        ) : null}\n      </td>\n      {hideCreatedBy ? null : (\n        <td>\n          <RunCreatedByCell run={run} onAddTag={onAddTag} />\n        </td>\n      )}\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.id} />\n      </td>\n      <td>\n        <RunStateSummary run={run} />\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu\n          run={run}\n          onAddTag={onAddTag}\n          additionalActionsForRun={additionalActionsForRun}\n        />\n      </td>\n      <Dialog\n        isOpen={showRunTags}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={() => {\n          setShowRunTags(false);\n        }}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button\n            intent=\"primary\"\n            onClick={() => {\n              setShowRunTags(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n\nfunction ActionBar({top, bottom}: {top: React.ReactNode; bottom?: React.ReactNode}) {\n  return (\n    <Box flex={{direction: 'column'}} padding={{vertical: 12}}>\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{left: 24, right: 24}}>\n        {top}\n      </Box>\n      {bottom ? (\n        <Box\n          margin={{top: 12}}\n          padding={{left: 24, right: 12, top: 8}}\n          border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n          flex={{gap: 8}}\n        >\n          {bottom}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nconst RunTagsWrapper = styled.div`\n  display: contents;\n  > * {\n    display: contents;\n  }\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Box,\n  Colors,\n  CommonMenuItemProps,\n  IconWrapper,\n  iconWithColor,\n  MenuItem,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface MenuLinkProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof MenuItem>, 'icon' | 'onClick' | 'onFocus' | 'target'>,\n    LinkProps {}\n\n/**\n * If you want to use a menu item as a link, use `MenuLink` and provide a `to` prop.\n */\nexport const MenuLink: React.FC<MenuLinkProps> = (props) => {\n  const {icon, intent, text, disabled, ...rest} = props;\n\n  if (disabled) {\n    return <MenuItem disabled icon={icon} intent={intent} text={text} />;\n  }\n  return (\n    <StyledMenuLink {...rest}>\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n        {iconWithColor(icon, intent)}\n        <div>{text}</div>\n      </Box>\n    </StyledMenuLink>\n  );\n};\n\nconst StyledMenuLink = styled(Link)`\n  text-decoration: none;\n\n  border-radius: 4px;\n  display: block;\n  line-height: 20px;\n  padding: 6px 8px 6px 12px;\n  transition: background-color 50ms, box-shadow 150ms;\n  align-items: flex-start;\n  user-select: none;\n\n  /**\n   * Use margin instead of align-items: center because the contents of the menu item may wrap \n   * in unusual circumstances.\n   */\n  ${IconWrapper} {\n    margin-top: 2px;\n  }\n\n  ${IconWrapper}:first-child {\n    margin-left: -4px;\n  }\n\n  &&&:link,\n  &&&:visited,\n  &&&:hover,\n  &&&:active {\n    color: ${Colors.Gray900};\n    text-decoration: none;\n  }\n\n  &&&:hover {\n    background: ${Colors.Gray100};\n  }\n`;\n"],"names":["reducer","state","action","copy","Set","Array","from","checkedIds","type","_action$payload","payload","checked","id","add","delete","lastCheckedId","_action$payload2","allIds","indexOfLast","indexOf","indexOfChecked","_sort","sort","_sort2","_slicedToArray","start","end","slice","forEach","_action$payload3","initialState","useSelectionReducer","_React$useReducer","React","_React$useReducer2","dispatch","onToggleFactory","values","shiftKey","onToggleAll","AssetKeyTagCollection","_ref","assetKeys","useTags","_ref$modalTitle","modalTitle","_React$useState","_React$useState2","showMore","setShowMore","length","assetCount","displayed","hidden","showMoreDialog","_jsxs","Dialog","title","onClose","style","minWidth","maxWidth","maxHeight","isOpen","children","_jsx","Box","padding","bottom","border","side","color","Colors","width","overflowY","background","Table","map","assetKey","ii","Link","to","assetDetailsPathForKey","displayNameForAssetKey","tokenForAssetKey","concat","DialogFooter","Button","intent","autoFocus","onClick","undefined","_Fragment","Tag","interactive","icon","ButtonLink","flex","direction","gap","Icon","name","size","marginTop","wrap","display","idx","marginRight","refineToError","data","launchPipelineReexecution","__typename","Error","errorText","error","message","initializeState","selectedRuns","frozenRuns","step","reexecution","completed","errors","reexecutionDialogReducer","prevState","_objectSpread","_defineProperty","ReexecutionDialog","props","onComplete","reexecutionStrategy","current","count","Object","keys","_useMutation","useMutation","LAUNCH_PIPELINE_REEXECUTION_MUTATION","reexecute","mutate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","runList","_i","_runList","runId","_yield$reexecute","_context","prev","next","variables","reexecutionParams","parentRunId","strategy","sent","stop","apply","arguments","canQuicklyClose","ReexecutionStrategy","canEscapeKeyClose","canOutsideClickClose","DialogBody","Group","spacing","value","ProgressBar","Math","max","animate","NavigationBlock","progressContent","errorCount","successCount","alignItems","Mono","completionContent","disabled","buttons","RunActionsMenu","_data$pipelineRunOrEr","run","onAddTag","additionalActionsForRun","refetch","RunsQueryRefetchContext","visibleDialog","setVisibleDialog","rootServerURI","AppContext","history","useHistory","copyConfig","useCopyToClipboard","onCompleted","_useLazyQuery","useLazyQuery","PIPELINE_ENVIRONMENT_QUERY","_useLazyQuery2","loadEnv","_useLazyQuery2$","called","loading","closeDialogs","pipelineRun","pipelineRunOrError","runConfigYaml","repoMatch","useRepositoryForRunWithParentSnapshot","jobError","useJobAvailabilityErrorForRun","parentPipelineSnapshotId","isFinished","doneStatuses","status","isJob","isThisThingAJob","match","pipelineName","infoReady","reexecutionDisabledState","hasReExecutePermission","tooltip","DEFAULT_DISABLED_REASON","JoinedButtons","AnchorButton","Popover","content","Menu","MenuItem","tagName","text","justifyContent","horizontal","SlashShortcut","pipelineSnapshotId","LinkNoUnderline","getPipelineSnapshotLink","MenuDivider","Tooltip","OPEN_LAUNCHPAD_UNKNOWN","NO_LAUNCH_PERMISSION_MESSAGE","position","targetTagName","MenuLink","workspacePathFromRunDetails","repositoryName","repository","repositoryLocationName","repositoryLocation","canShow","_result$data","result","getReexecutionVariables","handleLaunchResult","behavior","hasTerminatePermission","MenuExternalLink","download","href","hasDeletePermission","onOpening","TerminationDialog","canTerminate","DeletionDialog","onTerminateInstead","RunTags","tags","mode","topBorder","StyledReadOnlyCodeMirror","options","lineNumbers","_callee2","_context2","showSharedToaster","RunBulkActionsMenu","_ref6","selected","clearSelection","_React$useState3","_React$useState4","canTerminateAny","some","canDeleteAny","canReexecuteAny","terminatableRuns","filter","r","terminateableIDs","terminateableMap","reduce","accum","deleteableIDs","deletionMap","reexecuteFromFailureRuns","failedStatuses","reexecuteFromFailureMap","reexecutableRuns","reexecutableMap","rightIcon","gql","_templateObject","_taggedTemplateLiteral","styled","displayName","componentId","withConfig","RunCreatedByCell","creator","scheduleTag","find","tag","key","DagsterTag","sensorTag","user","automaterialize","createdBy","UserDisplay","useLaunchPadHooks","email","RunTable","runs","highlightedIds","actionBarComponents","belowActionBarComponents","hideCreatedBy","emptyState","_useSelectionReducer","_useSelectionReducer2","_useSelectionReducer3","canTerminateOrDeleteAny","selectedFragments","has","ActionBar","top","grow","anyFilter","margin","vertical","NonIdealState","description","paddingTop","paddingBottom","Checkbox","indeterminate","onChange","e","target","HTMLInputElement","additionalColumnHeaders","_props$additionalColu","RunRow","canTerminateOrDelete","additionalColumns","additionalColumnsForRow","call","onToggleChecked","isHighlighted","includes","RUN_TABLE_RUN_FRAGMENT","RUN_TIME_FRAGMENT","_run$assetSelection2","repo","useRepositoryForRunWithoutSnapshot","pipelines","pipelineOrJob","isReexecution","targetBackfill","targetPartition","targetPartitionSet","targetPartitionRangeStart","targetPartitionRangeEnd","showRunTags","setShowRunTags","isHovered","setIsHovered","tagsToShow","_run$assetSelection","link","assetSelection","runsPathWithFilters","token","push","Row","highlighted","onMouseEnter","onMouseLeave","nativeEvent","MouseEvent","getModifierState","titleForRun","RunTime","isHiddenAssetGroupJob","assetKeysForRun","PipelineReference","showIcon","pipelineHrefContext","workspacePipelinePath","repoName","repoLocation","workspacePipelinePathGuessRepo","BaseTag","fillColor","label","RunTagsWrapper","ShortcutHandler","onShortcut","shortcutLabel","shortcutFilter","code","RunStatusTagWithStats","RunStateSummary","_ref2","_ref3","left","right","rest","_objectWithoutProperties","_excluded","StyledMenuLink","iconWithColor","IconWrapper"],"sourceRoot":""}
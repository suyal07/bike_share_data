{"version":3,"file":"static/js/39.7df19ced.chunk.js","mappings":"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","sources":["../../core/src/instance/InstanceConfig.tsx","../../core/src/nav/InstanceWarningIcon.tsx","../../core/src/nav/WorkspaceStatus.tsx","../../core/src/instance/InstanceTabs.tsx","../../core/src/instance/useCanSeeConfig.tsx","../../core/src/ui/TabLink.tsx","../../ui/src/components/PageHeader.tsx","../../ui/src/components/Tabs.tsx"],"sourcesContent":["import 'codemirror/addon/search/searchcursor';\n\nimport {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Colors,\n  PageHeader,\n  Spinner,\n  Code,\n  Heading,\n  StyledReadOnlyCodeMirror,\n  Subheading,\n} from '@dagster-io/ui';\nimport * as codemirror from 'codemirror';\nimport * as React from 'react';\nimport {createGlobalStyle} from 'styled-components/macro';\n\nimport {useQueryRefreshAtInterval, FIFTEEN_SECONDS} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceConfigQuery, InstanceConfigQueryVariables} from './types/InstanceConfig.types';\n\nconst InstanceConfigStyle = createGlobalStyle`\n  .react-codemirror2 .CodeMirror.cm-s-instance-config {\n    box-shadow: 0 1px 0 ${Colors.KeylineGray};\n    height: 100%;\n  }\n\n  .react-codemirror2 .CodeMirror.cm-s-instance-config {\n    .config-highlight {\n      background-color: ${Colors.Yellow200};\n    }\n`;\n\nexport const InstanceConfig = React.memo(() => {\n  useTrackPageView();\n  useDocumentTitle('Configuration');\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryResult = useQuery<InstanceConfigQuery, InstanceConfigQueryVariables>(\n    INSTANCE_CONFIG_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const {data} = queryResult;\n  const config = data?.instance.info;\n\n  const onEditorDidMount = (editor: codemirror.Editor) => {\n    const documentHash = document.location.hash;\n    if (documentHash) {\n      const target = new RegExp(`^${documentHash.slice(1)}:`);\n      const cursor = editor.getSearchCursor(target);\n      const found = cursor.findNext();\n      if (found) {\n        editor.markText(cursor.from(), cursor.to(), {className: 'config-highlight'});\n        editor.scrollIntoView(cursor.from());\n      }\n    }\n  };\n\n  if (!data) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <InstanceConfigStyle />\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"config\" refreshState={refreshState} />}\n      />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n      >\n        <Subheading>\n          Dagster version: <Code style={{fontSize: '16px'}}>{data.version}</Code>\n        </Subheading>\n      </Box>\n      <StyledReadOnlyCodeMirror\n        editorDidMount={onEditorDidMount}\n        value={config || ''}\n        options={{lineNumbers: true, mode: 'yaml'}}\n        theme={['instance-config']}\n      />\n    </>\n  );\n});\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceConfig;\n\nexport const INSTANCE_CONFIG_QUERY = gql`\n  query InstanceConfigQuery {\n    version\n    instance {\n      id\n      info\n    }\n  }\n`;\n","import {Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const InstanceWarningIcon = React.memo(() => {\n  const {daemons} = React.useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Tooltip, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const WorkspaceStatus: React.FC<{placeholder: boolean}> = React.memo(({placeholder}) => {\n  const {codeLocations} = React.useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.Gray300} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = React.useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n  const {flagInstanceConcurrencyLimits} = useFeatureFlags();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig && flagInstanceConcurrencyLimits ? (\n          <TabLink id=\"concurrency\" title=\"Concurrency limits\" to=\"/concurrency\" />\n        ) : null}\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n","import {TabStyleProps, getTabA11yProps, getTabContent, tabCSS} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface TabLinkProps extends TabStyleProps, Omit<LinkProps, 'title'> {\n  title?: React.ReactNode;\n}\n\nexport const TabLink = styled((props: TabLinkProps) => {\n  const {to, title, disabled, ...rest} = props;\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof title === 'string' ? title : undefined;\n\n  return (\n    <Link to={disabled ? '#' : to} title={titleText} {...containerProps} {...rest}>\n      {content}\n    </Link>\n  );\n})<TabLinkProps>`\n  ${tabCSS}\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\nimport {IconWrapper} from './Icon';\nimport {FontFamily} from './styles';\n\nexport interface TabStyleProps {\n  disabled?: boolean;\n  selected?: boolean;\n  count?: number | 'indeterminate' | null;\n  icon?: React.ReactNode;\n  title?: React.ReactNode;\n  $size?: 'small' | 'large';\n}\n\nexport const getTabA11yProps = (props: {selected?: boolean; disabled?: boolean}) => {\n  const {selected, disabled} = props;\n  return {\n    role: 'tab',\n    tabIndex: disabled ? -1 : 0,\n    'aria-disabled': disabled,\n    'aria-expanded': selected,\n    'aria-selected': selected,\n  };\n};\n\nexport const getTabContent = (props: TabStyleProps & {title?: React.ReactNode}) => {\n  const {title, count, icon} = props;\n  return (\n    <>\n      {title}\n      {icon}\n      {count !== undefined ? <Count>{count === 'indeterminate' ? '–' : count}</Count> : null}\n    </>\n  );\n};\n\nconst Count = styled.div`\n  display: inline;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.02%;\n  padding: 0 4px;\n  color: ${Colors.Gray900};\n  background: ${Colors.Gray100};\n`;\n\nexport const tabCSS = css<TabStyleProps>`\n  background: none;\n  border: none;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 600;\n  padding: ${({$size}) => ($size === 'small' ? '10px 0' : '16px 0')};\n  box-shadow: ${({selected}) => (selected ? Colors.Blue500 : 'transparent')} 0 -2px 0 inset;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  gap: 6px;\n\n  &,\n  & a {\n    cursor: pointer;\n    user-select: none;\n    color: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : Colors.Gray700};\n  }\n\n  & ${IconWrapper} {\n    background: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : ''};\n  }\n\n  /* Focus outline only when using keyboard, not when focusing via mouse. */\n  &:focus {\n    outline: none !important;\n    box-shadow: ${({selected, disabled}) =>\n        selected ? Colors.Blue500 : disabled ? 'transparent' : Colors.Blue200}\n      0 -2px 0 inset;\n  }\n\n  &:hover {\n    &,\n    a {\n      text-decoration: none;\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : Colors.Blue700};\n    }\n    ${IconWrapper} {\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : ''};\n    }\n  }\n`;\n\ninterface TabProps extends TabStyleProps, Omit<React.ComponentPropsWithoutRef<'button'>, 'title'> {}\n\nexport const Tab = styled((props: TabProps) => {\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof props.title === 'string' ? props.title : undefined;\n\n  return (\n    <button {...props} {...containerProps} title={titleText} type=\"button\">\n      {content}\n    </button>\n  );\n})<TabStyleProps>`\n  ${tabCSS}\n`;\n\ninterface TabsProps {\n  children: Array<React.ReactElement<TabProps>>;\n  selectedTabId?: string;\n  onChange?: (selectedTabId: string) => void;\n  size?: 'small' | 'large';\n}\n\nexport const Tabs = styled(({selectedTabId, children, onChange, size = 'large', ...rest}) => {\n  return (\n    <div {...rest} role=\"tablist\">\n      {React.Children.map(children, (child) =>\n        child\n          ? React.cloneElement(child, {\n              selected: child.props.selected || child.props.id === selectedTabId,\n              $size: size,\n              ...(onChange\n                ? {\n                    onClick: () => onChange(child.props.id),\n                  }\n                : {}),\n            })\n          : null,\n      )}\n    </div>\n  );\n})<TabsProps>`\n  display: flex;\n  gap: 16px;\n  font-size: ${({size}) => (size === 'small' ? '12px' : '14px')};\n  line-height: ${({size}) => (size === 'small' ? '16px' : '20px')};\n  font-weight: 600;\n`;\n"],"names":["InstanceConfigStyle","createGlobalStyle","Colors","InstanceConfig","React","useTrackPageView","useDocumentTitle","pageTitle","InstancePageContext","queryResult","useQuery","INSTANCE_CONFIG_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","data","config","instance","info","_jsxs","_Fragment","children","_jsx","PageHeader","title","Heading","tabs","InstanceTabs","tab","Box","padding","vertical","horizontal","border","side","width","color","Subheading","Code","style","fontSize","version","StyledReadOnlyCodeMirror","editorDidMount","editor","documentHash","document","location","hash","target","RegExp","concat","slice","cursor","getSearchCursor","findNext","markText","from","to","className","scrollIntoView","value","options","lineNumbers","mode","theme","Spinner","purpose","gql","_templateObject","_taggedTemplateLiteral","InstanceWarningIcon","daemons","DeploymentStatusContext","WarningTooltip","content","position","modifiers","offset","enabled","Icon","name","WorkspaceStatus","_ref","placeholder","codeLocations","type","Tooltip","placement","fillColor","props","healthTitle","canSeeConfig","useCanSeeConfig","flagInstanceConcurrencyLimits","useFeatureFlags","flex","direction","justifyContent","alignItems","Tabs","selectedTabId","TabLink","id","icon","bottom","QueryRefreshCountdown","INSTANCE_CONFIG_HAS_INFO","hasInfo","styled","disabled","rest","_objectWithoutProperties","_excluded","containerProps","getTabA11yProps","getTabContent","titleText","undefined","Link","_objectSpread","withConfig","displayName","componentId","tabCSS","tags","right","PageHeaderContainer","background","top","left","gap","wrap","selected","role","tabIndex","count","Count","FontFamily","css","$size","_ref2","_ref3","IconWrapper","_ref4","_ref5","_ref6","_ref7","Tab","_ref8","onChange","_ref8$size","size","child","onClick","_ref9","_ref10"],"sourceRoot":""}
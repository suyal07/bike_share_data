{"version":3,"file":"static/js/676.10351291.chunk.js","mappings":"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","sources":["../../core/src/hooks/useDocumentTitle.tsx","../../core/src/instance/InstanceHealthPage.tsx","../../core/src/nav/InstanceWarningIcon.tsx","../../core/src/nav/WorkspaceStatus.tsx","../../core/src/instance/InstanceTabs.tsx","../../core/src/instance/useCanSeeConfig.tsx","../../core/src/ui/TabLink.tsx","../../ui/src/components/PageHeader.tsx","../../ui/src/components/Tabs.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport const useDocumentTitle = (title: string) => {\n  React.useEffect(() => {\n    const currentTitle = document.title;\n    document.title = title;\n    return () => {\n      document.title = currentTitle;\n    };\n  }, [title]);\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, PageHeader, Heading, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nimport {DaemonList} from './DaemonList';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceHealthQuery, InstanceHealthQueryVariables} from './types/InstanceHealthPage.types';\n\nexport const InstanceHealthPage = () => {\n  useTrackPageView();\n  useDocumentTitle('Daemons');\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryData = useQuery<InstanceHealthQuery, InstanceHealthQueryVariables>(\n    INSTANCE_HEALTH_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n  const {loading, data} = queryData;\n\n  const daemonContent = () => {\n    if (loading && !data?.instance) {\n      return (\n        <Box padding={{horizontal: 24}} style={{color: Colors.Gray400}}>\n          Loadingâ€¦\n        </Box>\n      );\n    }\n    return data?.instance ? (\n      <DaemonList daemonStatuses={data.instance.daemonHealth.allDaemonStatuses} />\n    ) : null;\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"health\" refreshState={refreshState} />}\n      />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Subheading>Daemon statuses</Subheading>\n      </Box>\n      {daemonContent()}\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceHealthPage;\n\nconst INSTANCE_HEALTH_QUERY = gql`\n  query InstanceHealthQuery {\n    instance {\n      id\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n","import {Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const InstanceWarningIcon = React.memo(() => {\n  const {daemons} = React.useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Tooltip, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const WorkspaceStatus: React.FC<{placeholder: boolean}> = React.memo(({placeholder}) => {\n  const {codeLocations} = React.useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.Gray300} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = React.useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n  const {flagInstanceConcurrencyLimits} = useFeatureFlags();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig && flagInstanceConcurrencyLimits ? (\n          <TabLink id=\"concurrency\" title=\"Concurrency limits\" to=\"/concurrency\" />\n        ) : null}\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n","import {TabStyleProps, getTabA11yProps, getTabContent, tabCSS} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface TabLinkProps extends TabStyleProps, Omit<LinkProps, 'title'> {\n  title?: React.ReactNode;\n}\n\nexport const TabLink = styled((props: TabLinkProps) => {\n  const {to, title, disabled, ...rest} = props;\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof title === 'string' ? title : undefined;\n\n  return (\n    <Link to={disabled ? '#' : to} title={titleText} {...containerProps} {...rest}>\n      {content}\n    </Link>\n  );\n})<TabLinkProps>`\n  ${tabCSS}\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\nimport {IconWrapper} from './Icon';\nimport {FontFamily} from './styles';\n\nexport interface TabStyleProps {\n  disabled?: boolean;\n  selected?: boolean;\n  count?: number | 'indeterminate' | null;\n  icon?: React.ReactNode;\n  title?: React.ReactNode;\n  $size?: 'small' | 'large';\n}\n\nexport const getTabA11yProps = (props: {selected?: boolean; disabled?: boolean}) => {\n  const {selected, disabled} = props;\n  return {\n    role: 'tab',\n    tabIndex: disabled ? -1 : 0,\n    'aria-disabled': disabled,\n    'aria-expanded': selected,\n    'aria-selected': selected,\n  };\n};\n\nexport const getTabContent = (props: TabStyleProps & {title?: React.ReactNode}) => {\n  const {title, count, icon} = props;\n  return (\n    <>\n      {title}\n      {icon}\n      {count !== undefined ? <Count>{count === 'indeterminate' ? 'â€“' : count}</Count> : null}\n    </>\n  );\n};\n\nconst Count = styled.div`\n  display: inline;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.02%;\n  padding: 0 4px;\n  color: ${Colors.Gray900};\n  background: ${Colors.Gray100};\n`;\n\nexport const tabCSS = css<TabStyleProps>`\n  background: none;\n  border: none;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 600;\n  padding: ${({$size}) => ($size === 'small' ? '10px 0' : '16px 0')};\n  box-shadow: ${({selected}) => (selected ? Colors.Blue500 : 'transparent')} 0 -2px 0 inset;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  gap: 6px;\n\n  &,\n  & a {\n    cursor: pointer;\n    user-select: none;\n    color: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : Colors.Gray700};\n  }\n\n  & ${IconWrapper} {\n    background: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : ''};\n  }\n\n  /* Focus outline only when using keyboard, not when focusing via mouse. */\n  &:focus {\n    outline: none !important;\n    box-shadow: ${({selected, disabled}) =>\n        selected ? Colors.Blue500 : disabled ? 'transparent' : Colors.Blue200}\n      0 -2px 0 inset;\n  }\n\n  &:hover {\n    &,\n    a {\n      text-decoration: none;\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : Colors.Blue700};\n    }\n    ${IconWrapper} {\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : ''};\n    }\n  }\n`;\n\ninterface TabProps extends TabStyleProps, Omit<React.ComponentPropsWithoutRef<'button'>, 'title'> {}\n\nexport const Tab = styled((props: TabProps) => {\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof props.title === 'string' ? props.title : undefined;\n\n  return (\n    <button {...props} {...containerProps} title={titleText} type=\"button\">\n      {content}\n    </button>\n  );\n})<TabStyleProps>`\n  ${tabCSS}\n`;\n\ninterface TabsProps {\n  children: Array<React.ReactElement<TabProps>>;\n  selectedTabId?: string;\n  onChange?: (selectedTabId: string) => void;\n  size?: 'small' | 'large';\n}\n\nexport const Tabs = styled(({selectedTabId, children, onChange, size = 'large', ...rest}) => {\n  return (\n    <div {...rest} role=\"tablist\">\n      {React.Children.map(children, (child) =>\n        child\n          ? React.cloneElement(child, {\n              selected: child.props.selected || child.props.id === selectedTabId,\n              $size: size,\n              ...(onChange\n                ? {\n                    onClick: () => onChange(child.props.id),\n                  }\n                : {}),\n            })\n          : null,\n      )}\n    </div>\n  );\n})<TabsProps>`\n  display: flex;\n  gap: 16px;\n  font-size: ${({size}) => (size === 'small' ? '12px' : '14px')};\n  line-height: ${({size}) => (size === 'small' ? '16px' : '20px')};\n  font-weight: 600;\n`;\n"],"names":["useDocumentTitle","title","React","currentTitle","document","InstanceHealthPage","useTrackPageView","pageTitle","InstancePageContext","queryData","useQuery","INSTANCE_HEALTH_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","loading","data","_jsxs","_Fragment","children","_jsx","PageHeader","Heading","tabs","InstanceTabs","tab","Box","padding","vertical","horizontal","Subheading","instance","DaemonList","daemonStatuses","daemonHealth","allDaemonStatuses","style","color","Colors","gql","_templateObject","_taggedTemplateLiteral","INSTANCE_HEALTH_FRAGMENT","InstanceWarningIcon","daemons","DeploymentStatusContext","WarningTooltip","content","position","modifiers","offset","enabled","options","Icon","name","WorkspaceStatus","_ref","placeholder","codeLocations","type","Tooltip","placement","Spinner","purpose","fillColor","width","props","healthTitle","canSeeConfig","useCanSeeConfig","flagInstanceConcurrencyLimits","useFeatureFlags","flex","direction","justifyContent","alignItems","Tabs","selectedTabId","TabLink","id","to","icon","bottom","QueryRefreshCountdown","INSTANCE_CONFIG_HAS_INFO","hasInfo","styled","disabled","rest","_objectWithoutProperties","_excluded","containerProps","getTabA11yProps","getTabContent","titleText","undefined","Link","_objectSpread","withConfig","displayName","componentId","tabCSS","tags","right","PageHeaderContainer","background","top","left","border","side","gap","wrap","selected","role","tabIndex","count","Count","FontFamily","css","$size","_ref2","_ref3","IconWrapper","_ref4","_ref5","_ref6","_ref7","Tab","_ref8","onChange","_ref8$size","size","child","onClick","_ref9","_ref10"],"sourceRoot":""}
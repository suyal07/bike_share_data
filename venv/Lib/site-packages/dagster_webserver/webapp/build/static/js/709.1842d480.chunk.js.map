{"version":3,"file":"static/js/709.1842d480.chunk.js","mappings":"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","sources":["../../../node_modules/chartjs-plugin-zoom/dist/chartjs-plugin-zoom.esm.js","../../../node_modules/hammerjs/hammer.js","../../../node_modules/lodash/_baseDifference.js","../../../node_modules/lodash/flatMap.js","../../../node_modules/lodash/keyBy.js","../../../node_modules/lodash/pickBy.js","../../../node_modules/lodash/without.js"],"sourcesContent":["/*!\n* chartjs-plugin-zoom v1.2.1\n* undefined\n * (c) 2016-2022 chartjs-plugin-zoom Contributors\n * Released under the MIT License\n */\nimport Hammer from 'hammerjs';\nimport { each, valueOrDefault, callback, sign } from 'chart.js/helpers';\n\nconst getModifierKey = opts => opts && opts.enabled && opts.modifierKey;\nconst keyPressed = (key, event) => key && event[key + 'Key'];\nconst keyNotPressed = (key, event) => key && !event[key + 'Key'];\n\n/**\n * @param {string|function} mode can be 'x', 'y' or 'xy'\n * @param {string} dir can be 'x' or 'y'\n * @param {import('chart.js').Chart} chart instance of the chart in question\n * @returns {boolean}\n */\nfunction directionEnabled(mode, dir, chart) {\n  if (mode === undefined) {\n    return true;\n  } else if (typeof mode === 'string') {\n    return mode.indexOf(dir) !== -1;\n  } else if (typeof mode === 'function') {\n    return mode({chart}).indexOf(dir) !== -1;\n  }\n\n  return false;\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n * @param {function} fn - Function to call. No arguments are passed.\n * @param {number} delay - Delay in ms. 0 = immediate invocation.\n * @returns {function}\n */\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    clearTimeout(timeout);\n    timeout = setTimeout(fn, delay);\n    return delay;\n  };\n}\n\n/** This function use for check what axis now under mouse cursor.\n * @param {{x: number, y: number}} point - the mouse location\n * @param {import('chart.js').Chart} [chart] instance of the chart in question\n * @return {import('chart.js').Scale}\n */\nfunction getScaleUnderPoint({x, y}, chart) {\n  const scales = chart.scales;\n  const scaleIds = Object.keys(scales);\n  for (let i = 0; i < scaleIds.length; i++) {\n    const scale = scales[scaleIds[i]];\n    if (y >= scale.top && y <= scale.bottom && x >= scale.left && x <= scale.right) {\n      return scale;\n    }\n  }\n  return null;\n}\n\n/** This function return only one scale whose position is under mouse cursor and which direction is enabled.\n * If under mouse hasn't scale, then return all other scales which 'mode' is diffrent with overScaleMode.\n * So 'overScaleMode' works as a limiter to scale the user-selected scale (in 'mode') only when the cursor is under the scale,\n * and other directions in 'mode' works as before.\n * Example: mode = 'xy', overScaleMode = 'y' -> it's means 'x' - works as before, and 'y' only works for one scale when cursor is under it.\n * options.overScaleMode can be a function if user want zoom only one scale of many for example.\n * @param {string} mode - 'xy', 'x' or 'y'\n * @param {{x: number, y: number}} point - the mouse location\n * @param {import('chart.js').Chart} [chart] instance of the chart in question\n * @return {import('chart.js').Scale[]}\n */\nfunction getEnabledScalesByPoint(mode, point, chart) {\n  const scale = getScaleUnderPoint(point, chart);\n\n  if (scale && directionEnabled(mode, scale.axis, chart)) {\n    return [scale];\n  }\n\n  const enabledScales = [];\n  each(chart.scales, function(scaleItem) {\n    if (!directionEnabled(mode, scaleItem.axis, chart)) {\n      enabledScales.push(scaleItem);\n    }\n  });\n  return enabledScales;\n}\n\nconst chartStates = new WeakMap();\n\nfunction getState(chart) {\n  let state = chartStates.get(chart);\n  if (!state) {\n    state = {\n      originalScaleLimits: {},\n      updatedScaleLimits: {},\n      handlers: {},\n      panDelta: {}\n    };\n    chartStates.set(chart, state);\n  }\n  return state;\n}\n\nfunction removeState(chart) {\n  chartStates.delete(chart);\n}\n\nfunction zoomDelta(scale, zoom, center) {\n  const range = scale.max - scale.min;\n  const newRange = range * (zoom - 1);\n\n  const centerPoint = scale.isHorizontal() ? center.x : center.y;\n  // `scale.getValueForPixel()` can return a value less than the `scale.min` or\n  // greater than `scale.max` when `centerPoint` is outside chartArea.\n  const minPercent = Math.max(0, Math.min(1,\n    (scale.getValueForPixel(centerPoint) - scale.min) / range || 0\n  ));\n\n  const maxPercent = 1 - minPercent;\n\n  return {\n    min: newRange * minPercent,\n    max: newRange * maxPercent\n  };\n}\n\nfunction getLimit(state, scale, scaleLimits, prop, fallback) {\n  let limit = scaleLimits[prop];\n  if (limit === 'original') {\n    const original = state.originalScaleLimits[scale.id][prop];\n    limit = valueOrDefault(original.options, original.scale);\n  }\n  return valueOrDefault(limit, fallback);\n}\n\nfunction updateRange(scale, {min, max}, limits, zoom = false) {\n  const state = getState(scale.chart);\n  const {id, axis, options: scaleOpts} = scale;\n\n  const scaleLimits = limits && (limits[id] || limits[axis]) || {};\n  const {minRange = 0} = scaleLimits;\n  const minLimit = getLimit(state, scale, scaleLimits, 'min', -Infinity);\n  const maxLimit = getLimit(state, scale, scaleLimits, 'max', Infinity);\n\n  const cmin = Math.max(min, minLimit);\n  const cmax = Math.min(max, maxLimit);\n  const range = zoom ? Math.max(cmax - cmin, minRange) : scale.max - scale.min;\n  if (cmax - cmin !== range) {\n    if (minLimit > cmax - range) {\n      min = cmin;\n      max = cmin + range;\n    } else if (maxLimit < cmin + range) {\n      max = cmax;\n      min = cmax - range;\n    } else {\n      const offset = (range - cmax + cmin) / 2;\n      min = cmin - offset;\n      max = cmax + offset;\n    }\n  } else {\n    min = cmin;\n    max = cmax;\n  }\n  scaleOpts.min = min;\n  scaleOpts.max = max;\n\n  state.updatedScaleLimits[scale.id] = {min, max};\n\n  // return true if the scale range is changed\n  return scale.parse(min) !== scale.min || scale.parse(max) !== scale.max;\n}\n\nfunction zoomNumericalScale(scale, zoom, center, limits) {\n  const delta = zoomDelta(scale, zoom, center);\n  const newRange = {min: scale.min + delta.min, max: scale.max - delta.max};\n  return updateRange(scale, newRange, limits, true);\n}\n\nconst integerChange = (v) => v === 0 || isNaN(v) ? 0 : v < 0 ? Math.min(Math.round(v), -1) : Math.max(Math.round(v), 1);\n\nfunction existCategoryFromMaxZoom(scale) {\n  const labels = scale.getLabels();\n  const maxIndex = labels.length - 1;\n\n  if (scale.min > 0) {\n    scale.min -= 1;\n  }\n  if (scale.max < maxIndex) {\n    scale.max += 1;\n  }\n}\n\nfunction zoomCategoryScale(scale, zoom, center, limits) {\n  const delta = zoomDelta(scale, zoom, center);\n  if (scale.min === scale.max && zoom < 1) {\n    existCategoryFromMaxZoom(scale);\n  }\n  const newRange = {min: scale.min + integerChange(delta.min), max: scale.max - integerChange(delta.max)};\n  return updateRange(scale, newRange, limits, true);\n}\n\nfunction scaleLength(scale) {\n  return scale.isHorizontal() ? scale.width : scale.height;\n}\n\nfunction panCategoryScale(scale, delta, limits) {\n  const labels = scale.getLabels();\n  const lastLabelIndex = labels.length - 1;\n  let {min, max} = scale;\n  // The visible range. Ticks can be skipped, and thus not reliable.\n  const range = Math.max(max - min, 1);\n  // How many pixels of delta is required before making a step. stepSize, but limited to max 1/10 of the scale length.\n  const stepDelta = Math.round(scaleLength(scale) / Math.max(range, 10));\n  const stepSize = Math.round(Math.abs(delta / stepDelta));\n  let applied;\n  if (delta < -stepDelta) {\n    max = Math.min(max + stepSize, lastLabelIndex);\n    min = range === 1 ? max : max - range;\n    applied = max === lastLabelIndex;\n  } else if (delta > stepDelta) {\n    min = Math.max(0, min - stepSize);\n    max = range === 1 ? min : min + range;\n    applied = min === 0;\n  }\n\n  return updateRange(scale, {min, max}, limits) || applied;\n}\n\nconst OFFSETS = {\n  second: 500, // 500 ms\n  minute: 30 * 1000, // 30 s\n  hour: 30 * 60 * 1000, // 30 m\n  day: 12 * 60 * 60 * 1000, // 12 h\n  week: 3.5 * 24 * 60 * 60 * 1000, // 3.5 d\n  month: 15 * 24 * 60 * 60 * 1000, // 15 d\n  quarter: 60 * 24 * 60 * 60 * 1000, // 60 d\n  year: 182 * 24 * 60 * 60 * 1000 // 182 d\n};\n\nfunction panNumericalScale(scale, delta, limits, canZoom = false) {\n  const {min: prevStart, max: prevEnd, options} = scale;\n  const round = options.time && options.time.round;\n  const offset = OFFSETS[round] || 0;\n  const newMin = scale.getValueForPixel(scale.getPixelForValue(prevStart + offset) - delta);\n  const newMax = scale.getValueForPixel(scale.getPixelForValue(prevEnd + offset) - delta);\n  const {min: minLimit = -Infinity, max: maxLimit = Infinity} = canZoom && limits && limits[scale.axis] || {};\n  if (isNaN(newMin) || isNaN(newMax) || newMin < minLimit || newMax > maxLimit) {\n    // At limit: No change but return true to indicate no need to store the delta.\n    // NaN can happen for 0-dimension scales (either because they were configured\n    // with min === max or because the chart has 0 plottable area).\n    return true;\n  }\n  return updateRange(scale, {min: newMin, max: newMax}, limits, canZoom);\n}\n\nfunction panNonLinearScale(scale, delta, limits) {\n  return panNumericalScale(scale, delta, limits, true);\n}\n\nconst zoomFunctions = {\n  category: zoomCategoryScale,\n  default: zoomNumericalScale,\n};\n\nconst panFunctions = {\n  category: panCategoryScale,\n  default: panNumericalScale,\n  logarithmic: panNonLinearScale,\n  timeseries: panNonLinearScale,\n};\n\nfunction shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits) {\n  const {id, options: {min, max}} = scale;\n  if (!originalScaleLimits[id] || !updatedScaleLimits[id]) {\n    return true;\n  }\n  const previous = updatedScaleLimits[id];\n  return previous.min !== min || previous.max !== max;\n}\n\nfunction removeMissingScales(limits, scales) {\n  each(limits, (opt, key) => {\n    if (!scales[key]) {\n      delete limits[key];\n    }\n  });\n}\n\nfunction storeOriginalScaleLimits(chart, state) {\n  const {scales} = chart;\n  const {originalScaleLimits, updatedScaleLimits} = state;\n\n  each(scales, function(scale) {\n    if (shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits)) {\n      originalScaleLimits[scale.id] = {\n        min: {scale: scale.min, options: scale.options.min},\n        max: {scale: scale.max, options: scale.options.max},\n      };\n    }\n  });\n\n  removeMissingScales(originalScaleLimits, scales);\n  removeMissingScales(updatedScaleLimits, scales);\n  return originalScaleLimits;\n}\n\nfunction doZoom(scale, amount, center, limits) {\n  const fn = zoomFunctions[scale.type] || zoomFunctions.default;\n  callback(fn, [scale, amount, center, limits]);\n}\n\nfunction getCenter(chart) {\n  const ca = chart.chartArea;\n  return {\n    x: (ca.left + ca.right) / 2,\n    y: (ca.top + ca.bottom) / 2,\n  };\n}\n\n/**\n * @param chart The chart instance\n * @param {number | {x?: number, y?: number, focalPoint?: {x: number, y: number}}} amount The zoom percentage or percentages and focal point\n * @param {string} [transition] Which transition mode to use. Defaults to 'none'\n */\nfunction zoom(chart, amount, transition = 'none') {\n  const {x = 1, y = 1, focalPoint = getCenter(chart)} = typeof amount === 'number' ? {x: amount, y: amount} : amount;\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n  const {mode = 'xy', overScaleMode} = zoomOptions || {};\n\n  storeOriginalScaleLimits(chart, state);\n\n  const xEnabled = x !== 1 && directionEnabled(mode, 'x', chart);\n  const yEnabled = y !== 1 && directionEnabled(mode, 'y', chart);\n  const enabledScales = overScaleMode && getEnabledScalesByPoint(overScaleMode, focalPoint, chart);\n\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      doZoom(scale, x, focalPoint, limits);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      doZoom(scale, y, focalPoint, limits);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(zoomOptions.onZoom, [{chart}]);\n}\n\nfunction getRange(scale, pixel0, pixel1) {\n  const v0 = scale.getValueForPixel(pixel0);\n  const v1 = scale.getValueForPixel(pixel1);\n  return {\n    min: Math.min(v0, v1),\n    max: Math.max(v0, v1)\n  };\n}\n\nfunction zoomRect(chart, p0, p1, transition = 'none') {\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n  const {mode = 'xy'} = zoomOptions;\n\n  storeOriginalScaleLimits(chart, state);\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n\n  each(chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      updateRange(scale, getRange(scale, p0.x, p1.x), limits, true);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      updateRange(scale, getRange(scale, p0.y, p1.y), limits, true);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(zoomOptions.onZoom, [{chart}]);\n}\n\nfunction zoomScale(chart, scaleId, range, transition = 'none') {\n  storeOriginalScaleLimits(chart, getState(chart));\n  const scale = chart.scales[scaleId];\n  updateRange(scale, range, undefined, true);\n  chart.update(transition);\n}\n\nfunction resetZoom(chart, transition = 'default') {\n  const state = getState(chart);\n  const originalScaleLimits = storeOriginalScaleLimits(chart, state);\n\n  each(chart.scales, function(scale) {\n    const scaleOptions = scale.options;\n    if (originalScaleLimits[scale.id]) {\n      scaleOptions.min = originalScaleLimits[scale.id].min.options;\n      scaleOptions.max = originalScaleLimits[scale.id].max.options;\n    } else {\n      delete scaleOptions.min;\n      delete scaleOptions.max;\n    }\n  });\n  chart.update(transition);\n  callback(state.options.zoom.onZoomComplete, [{chart}]);\n}\n\nfunction getOriginalRange(state, scaleId) {\n  const original = state.originalScaleLimits[scaleId];\n  if (!original) {\n    return;\n  }\n  const {min, max} = original;\n  return valueOrDefault(max.options, max.scale) - valueOrDefault(min.options, min.scale);\n}\n\nfunction getZoomLevel(chart) {\n  const state = getState(chart);\n  let min = 1;\n  let max = 1;\n  each(chart.scales, function(scale) {\n    const origRange = getOriginalRange(state, scale.id);\n    if (origRange) {\n      const level = Math.round(origRange / (scale.max - scale.min) * 100) / 100;\n      min = Math.min(min, level);\n      max = Math.max(max, level);\n    }\n  });\n  return min < 1 ? min : max;\n}\n\nfunction panScale(scale, delta, limits, state) {\n  const {panDelta} = state;\n  // Add possible cumulative delta from previous pan attempts where scale did not change\n  const storedDelta = panDelta[scale.id] || 0;\n  if (sign(storedDelta) === sign(delta)) {\n    delta += storedDelta;\n  }\n  const fn = panFunctions[scale.type] || panFunctions.default;\n  if (callback(fn, [scale, delta, limits])) {\n    // The scale changed, reset cumulative delta\n    panDelta[scale.id] = 0;\n  } else {\n    // The scale did not change, store cumulative delta\n    panDelta[scale.id] = delta;\n  }\n}\n\nfunction pan(chart, delta, enabledScales, transition = 'none') {\n  const {x = 0, y = 0} = typeof delta === 'number' ? {x: delta, y: delta} : delta;\n  const state = getState(chart);\n  const {options: {pan: panOptions, limits}} = state;\n  const {mode = 'xy', onPan} = panOptions || {};\n\n  storeOriginalScaleLimits(chart, state);\n\n  const xEnabled = x !== 0 && directionEnabled(mode, 'x', chart);\n  const yEnabled = y !== 0 && directionEnabled(mode, 'y', chart);\n\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      panScale(scale, x, limits, state);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      panScale(scale, y, limits, state);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(onPan, [{chart}]);\n}\n\nfunction getInitialScaleBounds(chart) {\n  const state = getState(chart);\n  const scaleBounds = {};\n  for (const scaleId of Object.keys(chart.scales)) {\n    const {min, max} = state.originalScaleLimits[scaleId] || {min: {}, max: {}};\n    scaleBounds[scaleId] = {min: min.scale, max: max.scale};\n  }\n\n  return scaleBounds;\n}\n\nfunction isZoomedOrPanned(chart) {\n  const scaleBounds = getInitialScaleBounds(chart);\n  for (const scaleId of Object.keys(chart.scales)) {\n    const {min: originalMin, max: originalMax} = scaleBounds[scaleId];\n\n    if (originalMin !== undefined && chart.scales[scaleId].min !== originalMin) {\n      return true;\n    }\n\n    if (originalMax !== undefined && chart.scales[scaleId].max !== originalMax) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction removeHandler(chart, type) {\n  const {handlers} = getState(chart);\n  const handler = handlers[type];\n  if (handler && handler.target) {\n    handler.target.removeEventListener(type, handler);\n    delete handlers[type];\n  }\n}\n\nfunction addHandler(chart, target, type, handler) {\n  const {handlers, options} = getState(chart);\n  const oldHandler = handlers[type];\n  if (oldHandler && oldHandler.target === target) {\n    // already attached\n    return;\n  }\n  removeHandler(chart, type);\n  handlers[type] = (event) => handler(chart, event, options);\n  handlers[type].target = target;\n  target.addEventListener(type, handlers[type]);\n}\n\nfunction mouseMove(chart, event) {\n  const state = getState(chart);\n  if (state.dragStart) {\n    state.dragging = true;\n    state.dragEnd = event;\n    chart.update('none');\n  }\n}\n\nfunction zoomStart(chart, event, zoomOptions) {\n  const {onZoomStart, onZoomRejected} = zoomOptions;\n  if (onZoomStart) {\n    const {left: offsetX, top: offsetY} = event.target.getBoundingClientRect();\n    const point = {\n      x: event.clientX - offsetX,\n      y: event.clientY - offsetY\n    };\n    if (callback(onZoomStart, [{chart, event, point}]) === false) {\n      callback(onZoomRejected, [{chart, event}]);\n      return false;\n    }\n  }\n}\n\nfunction mouseDown(chart, event) {\n  const state = getState(chart);\n  const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n  if (keyPressed(getModifierKey(panOptions), event) || keyNotPressed(getModifierKey(zoomOptions.drag), event)) {\n    return callback(zoomOptions.onZoomRejected, [{chart, event}]);\n  }\n\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n  state.dragStart = event;\n\n  addHandler(chart, chart.canvas, 'mousemove', mouseMove);\n}\n\nfunction computeDragRect(chart, mode, beginPoint, endPoint) {\n  const {left: offsetX, top: offsetY} = beginPoint.target.getBoundingClientRect();\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n  let {top, left, right, bottom, width: chartWidth, height: chartHeight} = chart.chartArea;\n\n  if (xEnabled) {\n    left = Math.min(beginPoint.clientX, endPoint.clientX) - offsetX;\n    right = Math.max(beginPoint.clientX, endPoint.clientX) - offsetX;\n  }\n\n  if (yEnabled) {\n    top = Math.min(beginPoint.clientY, endPoint.clientY) - offsetY;\n    bottom = Math.max(beginPoint.clientY, endPoint.clientY) - offsetY;\n  }\n  const width = right - left;\n  const height = bottom - top;\n\n  return {\n    left,\n    top,\n    right,\n    bottom,\n    width,\n    height,\n    zoomX: xEnabled && width ? 1 + ((chartWidth - width) / chartWidth) : 1,\n    zoomY: yEnabled && height ? 1 + ((chartHeight - height) / chartHeight) : 1\n  };\n}\n\nfunction mouseUp(chart, event) {\n  const state = getState(chart);\n  if (!state.dragStart) {\n    return;\n  }\n\n  removeHandler(chart, 'mousemove');\n  const {mode, onZoomComplete, drag: {threshold = 0}} = state.options.zoom;\n  const rect = computeDragRect(chart, mode, state.dragStart, event);\n  const distanceX = directionEnabled(mode, 'x', chart) ? rect.width : 0;\n  const distanceY = directionEnabled(mode, 'y', chart) ? rect.height : 0;\n  const distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n\n  // Remove drag start and end before chart update to stop drawing selected area\n  state.dragStart = state.dragEnd = null;\n\n  if (distance <= threshold) {\n    state.dragging = false;\n    chart.update('none');\n    return;\n  }\n\n  zoomRect(chart, {x: rect.left, y: rect.top}, {x: rect.right, y: rect.bottom}, 'zoom');\n\n  setTimeout(() => (state.dragging = false), 500);\n  callback(onZoomComplete, [{chart}]);\n}\n\nfunction wheelPreconditions(chart, event, zoomOptions) {\n  // Before preventDefault, check if the modifier key required and pressed\n  if (keyNotPressed(getModifierKey(zoomOptions.wheel), event)) {\n    callback(zoomOptions.onZoomRejected, [{chart, event}]);\n    return;\n  }\n\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n\n  // Prevent the event from triggering the default behavior (eg. Content scrolling).\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n\n  // Firefox always fires the wheel event twice:\n  // First without the delta and right after that once with the delta properties.\n  if (event.deltaY === undefined) {\n    return;\n  }\n  return true;\n}\n\nfunction wheel(chart, event) {\n  const {handlers: {onZoomComplete}, options: {zoom: zoomOptions}} = getState(chart);\n\n  if (!wheelPreconditions(chart, event, zoomOptions)) {\n    return;\n  }\n\n  const rect = event.target.getBoundingClientRect();\n  const speed = 1 + (event.deltaY >= 0 ? -zoomOptions.wheel.speed : zoomOptions.wheel.speed);\n  const amount = {\n    x: speed,\n    y: speed,\n    focalPoint: {\n      x: event.clientX - rect.left,\n      y: event.clientY - rect.top\n    }\n  };\n\n  zoom(chart, amount);\n\n  if (onZoomComplete) {\n    onZoomComplete();\n  }\n}\n\nfunction addDebouncedHandler(chart, name, handler, delay) {\n  if (handler) {\n    getState(chart).handlers[name] = debounce(() => callback(handler, [{chart}]), delay);\n  }\n}\n\nfunction addListeners(chart, options) {\n  const canvas = chart.canvas;\n  const {wheel: wheelOptions, drag: dragOptions, onZoomComplete} = options.zoom;\n\n  // Install listeners. Do this dynamically based on options so that we can turn zoom on and off\n  // We also want to make sure listeners aren't always on. E.g. if you're scrolling down a page\n  // and the mouse goes over a chart you don't want it intercepted unless the plugin is enabled\n  if (wheelOptions.enabled) {\n    addHandler(chart, canvas, 'wheel', wheel);\n    addDebouncedHandler(chart, 'onZoomComplete', onZoomComplete, 250);\n  } else {\n    removeHandler(chart, 'wheel');\n  }\n  if (dragOptions.enabled) {\n    addHandler(chart, canvas, 'mousedown', mouseDown);\n    addHandler(chart, canvas.ownerDocument, 'mouseup', mouseUp);\n  } else {\n    removeHandler(chart, 'mousedown');\n    removeHandler(chart, 'mousemove');\n    removeHandler(chart, 'mouseup');\n  }\n}\n\nfunction removeListeners(chart) {\n  removeHandler(chart, 'mousedown');\n  removeHandler(chart, 'mousemove');\n  removeHandler(chart, 'mouseup');\n  removeHandler(chart, 'wheel');\n  removeHandler(chart, 'click');\n}\n\nfunction createEnabler(chart, state) {\n  return function(recognizer, event) {\n    const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n    if (!panOptions || !panOptions.enabled) {\n      return false;\n    }\n    const srcEvent = event && event.srcEvent;\n    if (!srcEvent) { // Sometimes Hammer queries this with a null event.\n      return true;\n    }\n    if (!state.panning && event.pointerType === 'mouse' && (\n      keyNotPressed(getModifierKey(panOptions), srcEvent) || keyPressed(getModifierKey(zoomOptions.drag), srcEvent))\n    ) {\n      callback(panOptions.onPanRejected, [{chart, event}]);\n      return false;\n    }\n    return true;\n  };\n}\n\nfunction pinchAxes(p0, p1) {\n  // fingers position difference\n  const pinchX = Math.abs(p0.clientX - p1.clientX);\n  const pinchY = Math.abs(p0.clientY - p1.clientY);\n\n  // diagonal fingers will change both (xy) axes\n  const p = pinchX / pinchY;\n  let x, y;\n  if (p > 0.3 && p < 1.7) {\n    x = y = true;\n  } else if (pinchX > pinchY) {\n    x = true;\n  } else {\n    y = true;\n  }\n  return {x, y};\n}\n\nfunction handlePinch(chart, state, e) {\n  if (state.scale) {\n    const {center, pointers} = e;\n    // Hammer reports the total scaling. We need the incremental amount\n    const zoomPercent = 1 / state.scale * e.scale;\n    const rect = e.target.getBoundingClientRect();\n    const pinch = pinchAxes(pointers[0], pointers[1]);\n    const mode = state.options.zoom.mode;\n    const amount = {\n      x: pinch.x && directionEnabled(mode, 'x', chart) ? zoomPercent : 1,\n      y: pinch.y && directionEnabled(mode, 'y', chart) ? zoomPercent : 1,\n      focalPoint: {\n        x: center.x - rect.left,\n        y: center.y - rect.top\n      }\n    };\n\n    zoom(chart, amount);\n\n    // Keep track of overall scale\n    state.scale = e.scale;\n  }\n}\n\nfunction startPinch(chart, state) {\n  if (state.options.zoom.pinch.enabled) {\n    state.scale = 1;\n  }\n}\n\nfunction endPinch(chart, state, e) {\n  if (state.scale) {\n    handlePinch(chart, state, e);\n    state.scale = null; // reset\n    callback(state.options.zoom.onZoomComplete, [{chart}]);\n  }\n}\n\nfunction handlePan(chart, state, e) {\n  const delta = state.delta;\n  if (delta) {\n    state.panning = true;\n    pan(chart, {x: e.deltaX - delta.x, y: e.deltaY - delta.y}, state.panScales);\n    state.delta = {x: e.deltaX, y: e.deltaY};\n  }\n}\n\nfunction startPan(chart, state, event) {\n  const {enabled, overScaleMode, onPanStart, onPanRejected} = state.options.pan;\n  if (!enabled) {\n    return;\n  }\n  const rect = event.target.getBoundingClientRect();\n  const point = {\n    x: event.center.x - rect.left,\n    y: event.center.y - rect.top\n  };\n\n  if (callback(onPanStart, [{chart, event, point}]) === false) {\n    return callback(onPanRejected, [{chart, event}]);\n  }\n\n  state.panScales = overScaleMode && getEnabledScalesByPoint(overScaleMode, point, chart);\n  state.delta = {x: 0, y: 0};\n  clearTimeout(state.panEndTimeout);\n  handlePan(chart, state, event);\n}\n\nfunction endPan(chart, state) {\n  state.delta = null;\n  if (state.panning) {\n    state.panEndTimeout = setTimeout(() => (state.panning = false), 500);\n    callback(state.options.pan.onPanComplete, [{chart}]);\n  }\n}\n\nconst hammers = new WeakMap();\nfunction startHammer(chart, options) {\n  const state = getState(chart);\n  const canvas = chart.canvas;\n  const {pan: panOptions, zoom: zoomOptions} = options;\n\n  const mc = new Hammer.Manager(canvas);\n  if (zoomOptions && zoomOptions.pinch.enabled) {\n    mc.add(new Hammer.Pinch());\n    mc.on('pinchstart', () => startPinch(chart, state));\n    mc.on('pinch', (e) => handlePinch(chart, state, e));\n    mc.on('pinchend', (e) => endPinch(chart, state, e));\n  }\n\n  if (panOptions && panOptions.enabled) {\n    mc.add(new Hammer.Pan({\n      threshold: panOptions.threshold,\n      enable: createEnabler(chart, state)\n    }));\n    mc.on('panstart', (e) => startPan(chart, state, e));\n    mc.on('panmove', (e) => handlePan(chart, state, e));\n    mc.on('panend', () => endPan(chart, state));\n  }\n\n  hammers.set(chart, mc);\n}\n\nfunction stopHammer(chart) {\n  const mc = hammers.get(chart);\n  if (mc) {\n    mc.remove('pinchstart');\n    mc.remove('pinch');\n    mc.remove('pinchend');\n    mc.remove('panstart');\n    mc.remove('pan');\n    mc.remove('panend');\n    mc.destroy();\n    hammers.delete(chart);\n  }\n}\n\nvar version = \"1.2.1\";\n\nvar plugin = {\n  id: 'zoom',\n\n  version,\n\n  defaults: {\n    pan: {\n      enabled: false,\n      mode: 'xy',\n      threshold: 10,\n      modifierKey: null,\n    },\n    zoom: {\n      wheel: {\n        enabled: false,\n        speed: 0.1,\n        modifierKey: null\n      },\n      drag: {\n        enabled: false,\n        modifierKey: null\n      },\n      pinch: {\n        enabled: false\n      },\n      mode: 'xy',\n    }\n  },\n\n  start: function(chart, _args, options) {\n    const state = getState(chart);\n    state.options = options;\n\n    if (Object.prototype.hasOwnProperty.call(options.zoom, 'enabled')) {\n      console.warn('The option `zoom.enabled` is no longer supported. Please use `zoom.wheel.enabled`, `zoom.drag.enabled`, or `zoom.pinch.enabled`.');\n    }\n\n    if (Hammer) {\n      startHammer(chart, options);\n    }\n\n    chart.pan = (delta, panScales, transition) => pan(chart, delta, panScales, transition);\n    chart.zoom = (args, transition) => zoom(chart, args, transition);\n    chart.zoomScale = (id, range, transition) => zoomScale(chart, id, range, transition);\n    chart.resetZoom = (transition) => resetZoom(chart, transition);\n    chart.getZoomLevel = () => getZoomLevel(chart);\n    chart.getInitialScaleBounds = () => getInitialScaleBounds(chart);\n    chart.isZoomedOrPanned = () => isZoomedOrPanned(chart);\n  },\n\n  beforeEvent(chart) {\n    const state = getState(chart);\n    if (state.panning || state.dragging) {\n      // cancel any event handling while panning or dragging\n      return false;\n    }\n  },\n\n  beforeUpdate: function(chart, args, options) {\n    const state = getState(chart);\n    state.options = options;\n    addListeners(chart, options);\n  },\n\n  beforeDatasetsDraw: function(chart, args, options) {\n    const {dragStart, dragEnd} = getState(chart);\n\n    if (dragEnd) {\n      const {left, top, width, height} = computeDragRect(chart, options.zoom.mode, dragStart, dragEnd);\n\n      const dragOptions = options.zoom.drag;\n      const ctx = chart.ctx;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.fillStyle = dragOptions.backgroundColor || 'rgba(225,225,225,0.3)';\n      ctx.fillRect(left, top, width, height);\n\n      if (dragOptions.borderWidth > 0) {\n        ctx.lineWidth = dragOptions.borderWidth;\n        ctx.strokeStyle = dragOptions.borderColor || 'rgba(225,225,225)';\n        ctx.strokeRect(left, top, width, height);\n      }\n      ctx.restore();\n    }\n  },\n\n  stop: function(chart) {\n    removeListeners(chart);\n\n    if (Hammer) {\n      stopHammer(chart);\n    }\n    removeState(chart);\n  },\n\n  panFunctions,\n\n  zoomFunctions\n};\n\nexport { plugin as default, pan, resetZoom, zoom, zoomScale };\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n","var baseDifference = require('./_baseDifference'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */\nvar without = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nmodule.exports = without;\n"],"names":["getModifierKey","opts","enabled","modifierKey","keyPressed","key","event","keyNotPressed","directionEnabled","mode","dir","chart","undefined","indexOf","getEnabledScalesByPoint","point","scale","_ref","x","y","scales","scaleIds","Object","keys","i","length","top","bottom","left","right","getScaleUnderPoint","axis","enabledScales","each","scaleItem","push","chartStates","WeakMap","getState","state","get","originalScaleLimits","updatedScaleLimits","handlers","panDelta","set","zoomDelta","zoom","center","range","max","min","newRange","centerPoint","isHorizontal","minPercent","Math","getValueForPixel","getLimit","scaleLimits","prop","fallback","limit","original","id","valueOrDefault","options","updateRange","_ref2","limits","arguments","scaleOpts","_scaleLimits$minRange","minRange","minLimit","Infinity","maxLimit","cmin","cmax","offset","parse","integerChange","v","isNaN","round","OFFSETS","second","minute","hour","day","week","month","quarter","year","panNumericalScale","delta","canZoom","prevStart","prevEnd","time","newMin","getPixelForValue","newMax","_ref3","_ref3$min","_ref3$max","panNonLinearScale","zoomFunctions","category","maxIndex","getLabels","existCategoryFromMaxZoom","default","panFunctions","applied","lastLabelIndex","stepDelta","width","height","scaleLength","stepSize","abs","logarithmic","timeseries","removeMissingScales","opt","storeOriginalScaleLimits","_scale$options","previous","shouldUpdateScaleLimits","doZoom","amount","fn","type","callback","transition","_ref4","_ref4$x","_ref4$y","_ref4$focalPoint","focalPoint","ca","chartArea","getCenter","_state$options","zoomOptions","_ref5","_ref5$mode","overScaleMode","xEnabled","yEnabled","update","onZoom","getRange","pixel0","pixel1","v0","v1","getZoomLevel","origRange","scaleId","getOriginalRange","level","panScale","storedDelta","sign","pan","_ref6","_ref6$x","_ref6$y","_state$options3","panOptions","_ref7","_ref7$mode","onPan","getInitialScaleBounds","scaleBounds","_i","_Object$keys","_ref8","removeHandler","handler","target","removeEventListener","addHandler","_getState2","oldHandler","addEventListener","mouseMove","dragStart","dragging","dragEnd","zoomStart","onZoomStart","onZoomRejected","_event$target$getBoun","getBoundingClientRect","offsetX","offsetY","clientX","clientY","mouseDown","_state$options4","_state$options4$zoom","drag","canvas","computeDragRect","beginPoint","endPoint","_beginPoint$target$ge","_chart$chartArea","chartWidth","chartHeight","zoomX","zoomY","mouseUp","_state$options$zoom","onZoomComplete","_state$options$zoom$d","threshold","rect","distanceX","distanceY","distance","sqrt","p0","p1","_state$options2","_zoomOptions$mode","zoomRect","setTimeout","wheel","_getState3","cancelable","preventDefault","deltaY","wheelPreconditions","speed","addDebouncedHandler","name","delay","timeout","clearTimeout","debounce","createEnabler","recognizer","_state$options5","_state$options5$zoom","srcEvent","panning","pointerType","onPanRejected","handlePinch","e","pointers","zoomPercent","pinch","pinchX","pinchY","p","pinchAxes","handlePan","deltaX","panScales","hammers","startHammer","mc","Hammer","add","on","startPinch","endPinch","enable","_state$options$pan","onPanStart","panEndTimeout","startPan","onPanComplete","endPan","plugin","version","defaults","start","_args","prototype","hasOwnProperty","call","console","warn","args","zoomScale","resetZoom","scaleOptions","isZoomedOrPanned","_i2","_Object$keys2","_scaleBounds$scaleId","originalMin","originalMax","beforeEvent","beforeUpdate","_options$zoom","wheelOptions","dragOptions","ownerDocument","addListeners","beforeDatasetsDraw","_getState4","_computeDragRect","ctx","save","beginPath","fillStyle","backgroundColor","fillRect","borderWidth","lineWidth","strokeStyle","borderColor","strokeRect","restore","stop","removeListeners","remove","destroy","delete","stopHammer","removeState","window","document","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","now","Date","setTimeoutContext","context","bindFn","invokeArrayArg","arg","Array","isArray","obj","iterator","forEach","deprecate","method","message","deprecationMessage","Error","stack","replace","log","apply","this","TypeError","output","index","source","nextKey","extend","dest","src","merge","inherit","child","base","properties","childP","baseP","create","constructor","_super","boolOrFn","val","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","hasParent","node","parent","parentNode","inStr","str","find","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","a","b","prefixed","property","prefix","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","self","inputTarget","domHandler","ev","init","inputHandler","eventType","input","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","timeStamp","deltaTime","angle","getAngle","getDistance","offsetDelta","prevDelta","prevInput","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","end","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","computeIntervalInputData","computeInputData","emit","recognize","p2","props","atan2","PI","evEl","evTarget","evWin","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","value","compute","actions","touchAction","recognizers","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Recognizer","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","oldCssProps","toggleCssProps","item","force","stopped","curRecognizer","existing","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","Tap","Pan","Swipe","Pinch","Rotate","Press","define","SetCache","require","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","module","exports","array","iteratee","comparator","includes","isCommon","result","valuesLength","outer","computed","valuesIndex","baseFlatten","map","collection","baseAssignValue","keyBy","createAggregator","baseIteratee","basePickBy","getAllKeysIn","object","predicate","path","baseDifference","baseRest","isArrayLikeObject","without"],"sourceRoot":""}
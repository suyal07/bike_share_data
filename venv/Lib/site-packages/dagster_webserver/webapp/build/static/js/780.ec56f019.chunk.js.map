{"version":3,"file":"static/js/780.ec56f019.chunk.js","mappings":"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","sources":["../../core/src/app/GraphQueryImpl.ts","../../core/src/gantt/Constants.ts","../../core/src/gantt/DynamicStepSupport.tsx","../../core/src/gantt/GanttChart.tsx","../../core/src/gantt/GanttChartModeControl.tsx","../../core/src/gantt/GanttChartTimescale.tsx","../../core/src/gantt/ZoomSlider.tsx","../../core/src/gantt/useGanttChartMode.tsx","../../core/src/gantt/GanttChartLayout.ts","../../core/src/gantt/RunGroupPanel.tsx","../../core/src/gantt/GanttStatusPanel.tsx","../../core/src/gantt/VizComponents.tsx","../../core/src/gantt/toGraphQueryItems.tsx","../../core/src/pipelines/SidebarComponents.tsx","../../core/src/runs/LogLevel.ts","../../core/src/runs/LogsRowComponents.tsx","../../core/src/runs/CellTruncationProvider.tsx","../../core/src/runs/LogsRowStructuredContent.tsx","../../core/src/runs/LogsRow.tsx","../../core/src/runs/LogsScrollingTable.tsx","../../core/src/runs/LogsScrollingTableHeader.tsx","../../core/src/runs/RunActionButtons.tsx","../../core/src/runs/RunContext.tsx","../../core/src/runs/RunDetails.tsx","../../core/src/runs/RunFragments.tsx","../../core/src/runs/RunMetadataProvider.tsx","../../core/src/runs/getRunFilterProviders.ts","../../core/src/runs/logNodeLevel.tsx","../../core/src/schedules/TimestampDisplay.tsx","../../core/src/ui/ClearButton.tsx","../../core/src/ui/GraphQueryInput.tsx","../../core/src/ui/formatters.tsx","../../ui/src/components/ButtonGroup.tsx","../../ui/src/components/CursorControls.tsx","../../ui/src/components/Slider.tsx","../../ui/src/components/SplitPanelContainer.tsx","../../ui/src/components/useViewport.tsx"],"sourcesContent":["import {isPlannedDynamicStep, dynamicKeyWithoutIndex} from '../gantt/DynamicStepSupport';\n\nconst MAX_RENDERED_FOR_EMPTY_QUERY = 100;\n\nexport interface GraphQueryItem {\n  name: string;\n  inputs: {\n    dependsOn: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  outputs: {\n    dependedBy: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\ntype TraverseStepFunction<T> = (item: T, callback: (nextItem: T) => void) => void;\n\nclass GraphTraverser<T extends GraphQueryItem> {\n  itemNameMap: {[name: string]: T} = {};\n\n  // TODO: One reason doing DFS on the client side is sub optimal.\n  // javascript is tail end recursive tho so we could go for ever without worrying about\n  // stack overflow problems?\n\n  constructor(items: T[]) {\n    items.forEach((item) => (this.itemNameMap[item.name] = item));\n  }\n\n  itemNamed(name: string): T | undefined {\n    return this.itemNameMap[name];\n  }\n\n  traverse(\n    item: T,\n    step: TraverseStepFunction<T>,\n    depth: number,\n    results: {[key: string]: T} = {},\n  ) {\n    results[item.name] = item;\n\n    if (depth > 0) {\n      step(item, (next) => {\n        if (!(next.name in results)) {\n          this.traverse(next, step, depth - 1, results);\n        }\n      });\n    }\n    return Object.values(results);\n  }\n\n  fetchUpstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.inputs.forEach((input) =>\n        input.dependsOn.forEach((d) => {\n          const item = this.itemNamed(d.solid.name);\n          item && callback(item);\n        }),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n\n  fetchDownstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.outputs.forEach((output) =>\n        output.dependedBy.forEach((d) => {\n          const item = this.itemNamed(d.solid.name);\n          item && callback(item);\n        }),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n}\n\nfunction expansionDepthForClause(clause: string) {\n  return clause.includes('*') ? Number.MAX_SAFE_INTEGER : clause.length;\n}\n\nexport function filterByQuery<T extends GraphQueryItem>(items: T[], query: string) {\n  if (query === '*') {\n    return {all: items, applyingEmptyDefault: false, focus: []};\n  }\n  if (query === '') {\n    return {\n      all: items.length >= MAX_RENDERED_FOR_EMPTY_QUERY ? [] : items,\n      applyingEmptyDefault: items.length >= MAX_RENDERED_FOR_EMPTY_QUERY,\n      focus: [],\n    };\n  }\n\n  const traverser = new GraphTraverser<T>(items);\n  const results = new Set<T>();\n  const clauses = query.split(/(,| AND | and | )/g);\n  const focus = new Set<T>();\n\n  for (const clause of clauses) {\n    const parts = /(\\*?\\+*)([.\\w\\d>\\[\\?\\]\\\"_\\/-]+)(\\+*\\*?)/.exec(clause.trim());\n    if (!parts) {\n      continue;\n    }\n    const [, parentsClause = '', itemName = '', descendentsClause = ''] = parts;\n\n    const itemsMatching = items.filter((s) => {\n      if (isPlannedDynamicStep(itemName.replace(/\\\"/g, ''))) {\n        // When unresolved dynamic step (i.e ends with `[?]`) is selected, match all dynamic steps\n        return s.name.startsWith(dynamicKeyWithoutIndex(itemName.replace(/\\\"/g, '')));\n      } else {\n        return /\\\".*\\\"/.test(itemName)\n          ? s.name === itemName.replace(/\\\"/g, '')\n          : s.name.includes(itemName);\n      }\n    });\n\n    for (const item of itemsMatching) {\n      const upDepth = expansionDepthForClause(parentsClause);\n      const downDepth = expansionDepthForClause(descendentsClause);\n\n      focus.add(item);\n      results.add(item);\n      traverser.fetchUpstream(item, upDepth).forEach((other) => results.add(other));\n      traverser.fetchDownstream(item, downDepth).forEach((other) => results.add(other));\n    }\n  }\n\n  return {\n    all: Array.from(results),\n    focus: Array.from(focus),\n    applyingEmptyDefault: false,\n  };\n}\n","import {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {IStepState} from '../runs/RunMetadataProvider';\n\nexport type IGanttNode = GraphQueryItem;\n\nexport interface GanttViewport {\n  left: number; // Note: pixel values\n  top: number;\n  width: number;\n  height: number;\n}\n\nexport interface GanttChartPlacement {\n  key: string; // A React-friendly unique key like `step:retry-1`\n  width: number;\n  x: number; // Note: This is a pixel value\n  y: number; // Note: This is a \"row number\" not a pixel value\n}\n\nexport interface GanttChartBox extends GanttChartPlacement {\n  state: IStepState | undefined;\n  children: GanttChartBox[];\n  node: IGanttNode;\n  root: boolean;\n}\n\nexport interface GanttChartMarker extends GanttChartPlacement {}\n\nexport interface GanttChartLayout {\n  boxes: GanttChartBox[];\n\n  // only present in timescaled layout\n  markers: GanttChartMarker[];\n}\n\nexport interface GanttChartLayoutOptions {\n  mode: GanttChartMode;\n  zoom: number; // 1 => 100\n  hideWaiting: boolean;\n  hideTimedMode: boolean;\n  hideUnselectedSteps: boolean;\n}\n\nexport enum GanttChartMode {\n  FLAT = 'flat',\n  WATERFALL = 'waterfall',\n  WATERFALL_TIMED = 'waterfall-timed',\n}\n\nexport const MIN_SCALE = 0.0002;\nexport const MAX_SCALE = 0.5;\nexport const LEFT_INSET = 16;\nexport const TOP_INSET = 16;\nexport const BOTTOM_INSET = 16;\nexport const FLAT_INSET_FROM_PARENT = 16;\nexport const BOX_HEIGHT = 34;\nexport const BOX_MARGIN_Y = 5;\nexport const BOX_SPACING_X = 20;\nexport const BOX_WIDTH = 100;\nexport const BOX_DOT_WIDTH_CUTOFF = 8;\nexport const BOX_SHOW_LABEL_WIDTH_CUTOFF = 30;\nexport const BOX_DOT_SIZE = 6;\nexport const BOX_DOT_MARGIN_Y = (BOX_HEIGHT - BOX_DOT_SIZE) / 2;\n\nexport const LINE_SIZE = 2;\nexport const CSS_DURATION = 100;\n\nexport const DEFAULT_OPTIONS: GanttChartLayoutOptions = {\n  mode: GanttChartMode.WATERFALL,\n  hideWaiting: false,\n  hideTimedMode: false,\n  zoom: 1,\n  hideUnselectedSteps: false,\n};\n","/**\n * Ops with dynamic outputs yield execution plans like step_a => step_b[?] => step_c[?],\n * where the index syntax indicates that step_b and step_c may be invoked an arbitrary number\n * of times. At runtime, Dagit replaces and duplicates these \"planned dynamic steps\" as it\n * observes invocations in the logs.\n *\n * Dagit currently parses step keys to implement this behavior and assumes that:\n *  - [?] Indicates a planned dynamic step\n *  - [ and ] are only used in dynamic steps\n *  - Index values are arbitrary (eg: step[1] or step[A] or step[US-East-1])\n *  - Index values are propagated through the entire subgraph after a dynamic invocation\n */\nexport function isDynamicStep(stepKey: string) {\n  return stepKey.endsWith(']');\n}\n\nexport function isPlannedDynamicStep(stepKey: string) {\n  return stepKey.endsWith('[?]');\n}\n\nexport function invocationsOfPlannedDynamicStep(plannedStepKey: string, runtimeStepKeys: string[]) {\n  return runtimeStepKeys.filter((k) => k.startsWith(plannedStepKey.replace('?]', '')));\n}\n\nexport function dynamicKeyWithoutIndex(stepKey: string) {\n  return stepKey.split('[')[0]!;\n}\n\nexport function replacePlannedIndex(stepKey: string, stepKeyWithIndex: string) {\n  return stepKey.replace('[?]', stepKeyWithIndex.match(/(\\[.*\\])/)![1]!);\n}\n","import {\n  Box,\n  Checkbox,\n  Colors,\n  FontFamily,\n  Group,\n  Icon,\n  NonIdealState,\n  Spinner,\n  SpinnerWrapper,\n  SplitPanelContainer,\n  useViewport,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {withMiddleTruncation} from '../app/Util';\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {CancelRunButton} from '../runs/RunActionButtons';\nimport {\n  EMPTY_RUN_METADATA,\n  IRunMetadataDict,\n  IStepMetadata,\n  IStepState,\n} from '../runs/RunMetadataProvider';\nimport {runsPathWithFilters} from '../runs/RunsFilterInput';\nimport {StepSelection} from '../runs/StepSelection';\nimport {RunFragment} from '../runs/types/RunFragments.types';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\n\nimport {\n  BOTTOM_INSET,\n  BOX_DOT_MARGIN_Y,\n  BOX_DOT_SIZE,\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_HEIGHT,\n  BOX_MARGIN_Y,\n  BOX_SHOW_LABEL_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  CSS_DURATION,\n  DEFAULT_OPTIONS,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMode,\n  GanttChartPlacement,\n  GanttViewport,\n  LINE_SIZE,\n  MAX_SCALE,\n  MIN_SCALE,\n  TOP_INSET,\n} from './Constants';\nimport {isDynamicStep} from './DynamicStepSupport';\nimport {\n  adjustLayoutWithRunMetadata,\n  boxStyleFor,\n  buildLayout,\n  BuildLayoutParams,\n  interestingQueriesFor,\n} from './GanttChartLayout';\nimport {GanttChartModeControl} from './GanttChartModeControl';\nimport {GanttChartTimescale} from './GanttChartTimescale';\nimport {GanttStatusPanel} from './GanttStatusPanel';\nimport {OptionsContainer, OptionsSpacer} from './VizComponents';\nimport {ZoomSlider} from './ZoomSlider';\nimport {useGanttChartMode} from './useGanttChartMode';\n\nexport {GanttChartMode} from './Constants';\n\nconst HIGHLIGHT_TIME_EVENT = 'gantt-highlight-time';\n\nlet highlightTimer: NodeJS.Timeout;\n\n/**\n * Set or clear the highlighted time on the Gantt chart. Goal of this convenience\n * method is to make the implementation (via event dispatch) private to this file.\n */\nexport function setHighlightedGanttChartTime(timestamp: null | string, debounced = true) {\n  clearTimeout(highlightTimer);\n\n  if (debounced) {\n    highlightTimer = setTimeout(() => setHighlightedGanttChartTime(timestamp, false), 100);\n  } else {\n    document.dispatchEvent(new CustomEvent(HIGHLIGHT_TIME_EVENT, {detail: timestamp}));\n  }\n}\n\ninterface GanttChartProps {\n  selection: StepSelection;\n  focusedTime: number | null;\n  runId: string;\n  graph: GraphQueryItem[];\n  options?: Partial<GanttChartLayoutOptions>;\n  metadata?: IRunMetadataDict;\n  toolbarActions?: React.ReactChild;\n\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n  onSetSelection: (query: string) => void;\n\n  // for storybooks\n  overrideNowTime?: number;\n}\n\ninterface GanttChartState {\n  options: GanttChartLayoutOptions;\n}\n\nexport const GanttChart: React.FC<GanttChartProps> = (props) => {\n  const {graph, onSetSelection, options, selection, toolbarActions} = props;\n  const [mode, setMode] = useGanttChartMode();\n  const [state, setState] = React.useState(() => ({\n    ...DEFAULT_OPTIONS,\n    ...options,\n    mode,\n  }));\n\n  const cachedLayout = React.useRef<GanttChartLayout | null>(null);\n  const cachedLayoutParams = React.useRef<BuildLayoutParams | null>(null);\n  const graphFiltered = filterByQuery(graph, selection.query);\n  const layoutParams = React.useMemo(\n    () => ({\n      nodes: state.hideUnselectedSteps ? graphFiltered.all : graph,\n      mode: state.mode,\n    }),\n    [graph, graphFiltered.all, state.hideUnselectedSteps, state.mode],\n  );\n\n  const layout = React.useMemo(() => {\n    const names = (ns: GraphQueryItem[]) => ns.map((n) => n.name).join(',');\n    if (\n      !cachedLayoutParams.current ||\n      names(cachedLayoutParams.current.nodes) !== names(layoutParams.nodes) ||\n      cachedLayoutParams.current.mode !== layoutParams.mode\n    ) {\n      cachedLayout.current = buildLayout(layoutParams);\n      cachedLayoutParams.current = layoutParams;\n    }\n    return cachedLayout.current!;\n  }, [layoutParams]);\n\n  const updateOptions = React.useCallback((changes: Partial<GanttChartLayoutOptions>) => {\n    setState((current) => ({...current, ...changes}));\n  }, []);\n\n  const onChangeMode = React.useCallback(\n    (mode: GanttChartMode) => {\n      updateOptions({mode});\n      setMode(mode);\n    },\n    [setMode, updateOptions],\n  );\n\n  const onUpdateQuery = React.useCallback(\n    (query: string) => {\n      onSetSelection(query || '*');\n    },\n    [onSetSelection],\n  );\n\n  const onDoubleClickStep = React.useCallback(\n    (stepKey: string) => {\n      const query = `*${stepKey}*`;\n      onUpdateQuery(selection.query !== query ? query : '*');\n    },\n    [onUpdateQuery, selection.query],\n  );\n\n  return (\n    <GanttChartContainer>\n      <OptionsContainer>\n        <GanttChartModeControl\n          value={state.mode}\n          onChange={onChangeMode}\n          hideTimedMode={state.hideTimedMode}\n        />\n        {state.mode === GanttChartMode.WATERFALL_TIMED && (\n          <>\n            <OptionsSpacer />\n            <div style={{width: 200}}>\n              <ZoomSlider value={state.zoom} onChange={(v) => updateOptions({zoom: v})} />\n            </div>\n            <OptionsSpacer />\n            <Checkbox\n              style={{marginBottom: 0}}\n              label=\"Hide not started steps\"\n              checked={state.hideWaiting}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                updateOptions({hideWaiting: e.target.checked})\n              }\n            />\n          </>\n        )}\n        <div style={{flex: 1}} />\n        {toolbarActions}\n      </OptionsContainer>\n      <GanttChartInner\n        {...props}\n        options={{...state}}\n        layout={layout}\n        graph={graph}\n        onUpdateQuery={onUpdateQuery}\n        onDoubleClickStep={onDoubleClickStep}\n        onChange={() =>\n          updateOptions({\n            hideUnselectedSteps: !state.hideUnselectedSteps,\n          })\n        }\n      />\n    </GanttChartContainer>\n  );\n};\n\ntype GanttChartInnerProps = GanttChartProps &\n  GanttChartState & {\n    graph: GraphQueryItem[];\n    layout: GanttChartLayout;\n    onUpdateQuery: (value: string) => void;\n    onDoubleClickStep: (stepName: string) => void;\n    onChange: () => void;\n  };\n\nconst GanttChartInner = (props: GanttChartInnerProps) => {\n  const {viewport, containerProps, onMoveToViewport} = useViewport();\n  const [hoveredStep, setHoveredNodeName] = React.useState<string | null>(null);\n  const [hoveredTime, setHoveredTime] = React.useState<number | null>(null);\n  const [nowMs, setNowMs] = React.useState<number>(() => props.overrideNowTime || Date.now());\n  const {options, metadata, selection} = props;\n  const animationRequest = React.useRef<number | null>(null);\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const {availability, disabled, status} = React.useContext(WebSocketContext);\n  const lostWebsocket = !disabled && availability === 'available' && status === WebSocket.CLOSED;\n\n  // The slider in the UI updates `options.zoom` from 1-100. We convert that value\n  // into a px-per-ms \"scale\", where the minimum is the value required to zoom-to-fit.\n  // To make the slider feel more linear, we convert the input from log10 to logE.\n  let minScale = MIN_SCALE;\n  if (viewport.width && metadata && metadata.startedPipelineAt) {\n    const zoomToFitWidthPx = Math.max(1, viewport.width - 150);\n    const elapsedMs = Math.max(1, nowMs - metadata.startedPipelineAt);\n    minScale = zoomToFitWidthPx / elapsedMs;\n  }\n\n  const scale = Math.exp(\n    Math.log(minScale) + ((Math.log(MAX_SCALE) - Math.log(minScale)) / 100) * options.zoom,\n  );\n\n  const animate = React.useCallback(() => {\n    setNowMs(props.overrideNowTime || Date.now());\n    animationRequest.current = requestAnimationFrame(animate);\n  }, [props.overrideNowTime]);\n\n  const exitedAt = metadata?.exitedAt;\n\n  // When the run is complete, stop the animation. We also do this when the WebSocket is lost,\n  // since we would just be animating endlessly with no new logs.\n  React.useEffect(() => {\n    if (scale === 0 || lostWebsocket || exitedAt) {\n      animationRequest.current && cancelAnimationFrame(animationRequest.current);\n    }\n\n    // Set the final timestamp.\n    if (exitedAt) {\n      setNowMs(exitedAt);\n    }\n  }, [scale, lostWebsocket, exitedAt]);\n\n  // Kick off the Gantt animation. This will continue until the effect above determines that\n  // the run is complete or that the connection is lost.\n  React.useEffect(() => {\n    animationRequest.current = requestAnimationFrame(animate);\n    return () => {\n      animationRequest.current && cancelAnimationFrame(animationRequest.current);\n    };\n  }, [animate]);\n\n  // Listen for events specifying hover time (eg: a marker at a particular timestamp)\n  // and sync them to our React state for display.\n  React.useEffect(() => {\n    const listener = (e: CustomEvent) => setHoveredTime(e.detail);\n    document.addEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n    return () => document.removeEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n  });\n\n  // The `layout` we receive has been laid out and the rows / \"waterfall\" are final,\n  // but it doesn't incorporate the display scale or run metadata. We stretch and\n  // shift the layout boxes using this data to create the final layout for display.\n  const layout = adjustLayoutWithRunMetadata(\n    props.layout,\n    options,\n    metadata || EMPTY_RUN_METADATA,\n    scale,\n    nowMs,\n  );\n  const layoutSize = {\n    width: Math.max(0, ...layout.boxes.map((b) => b.x + b.width + BOX_SPACING_X)),\n    height: Math.max(0, ...layout.boxes.map((b) => TOP_INSET + b.y * BOX_HEIGHT + BOTTOM_INSET)),\n  };\n\n  React.useEffect(() => {\n    const node = layout.boxes.find((b) => selection.keys.includes(b.node.name));\n    if (!node) {\n      return;\n    }\n    const bounds = boundsForBox(node);\n    const x = (bounds.maxX + bounds.minX) / 2 - viewport.width / 2;\n    const y = (bounds.maxY + bounds.minY) / 2 - viewport.height / 2;\n    onMoveToViewport({left: x, top: y}, true);\n  }, [selection]); // eslint-disable-line\n\n  const highlightedMs: number[] = [];\n  if (props.focusedTime) {\n    highlightedMs.push(props.focusedTime);\n  }\n\n  if (hoveredTime) {\n    highlightedMs.push(hoveredTime);\n  } else if (selection.keys.length > 0) {\n    const selectedMeta = selection.keys\n      .map((stepKey) => metadata?.steps[stepKey])\n      .filter((x): x is IStepMetadata => x !== undefined);\n    const sortedSelectedSteps = selectedMeta.sort((a, b) =>\n      a.start && b.start ? a.start - b.start : 0,\n    );\n    const firstMeta = sortedSelectedSteps[0];\n    const lastMeta = sortedSelectedSteps[sortedSelectedSteps.length - 1];\n    if (firstMeta?.start) {\n      highlightedMs.push(firstMeta.start);\n    }\n    if (lastMeta?.end) {\n      highlightedMs.push(lastMeta.end);\n    }\n  }\n\n  const measurementComplete = viewport.width > 0;\n\n  const content = (\n    <>\n      {options.mode === GanttChartMode.WATERFALL_TIMED && measurementComplete && (\n        <GanttChartTimescale\n          scale={scale}\n          viewport={viewport}\n          layoutSize={layoutSize}\n          startMs={metadata?.startedPipelineAt || 0}\n          highlightedMs={highlightedMs}\n          nowMs={nowMs}\n        />\n      )}\n      <div style={{overflow: 'scroll', flex: 1}} {...containerProps}>\n        <div style={{position: 'relative', marginBottom: 70, ...layoutSize}}>\n          {measurementComplete && (\n            <GanttChartViewportContents\n              options={options}\n              metadata={metadata || EMPTY_RUN_METADATA}\n              layout={layout}\n              hoveredStep={hoveredStep}\n              focusedSteps={selection.keys}\n              viewport={viewport}\n              setHoveredNodeName={setHoveredNodeName}\n              onClickStep={props.onClickStep}\n              onDoubleClickStep={props.onDoubleClickStep}\n            />\n          )}\n        </div>\n      </div>\n\n      <GraphQueryInputContainer>\n        {lostWebsocket ? (\n          <WebsocketWarning>\n            <Box flex={{justifyContent: 'space-around'}} margin={{bottom: 12}}>\n              <Group\n                direction=\"row\"\n                spacing={8}\n                background={`${Colors.Yellow500}26`}\n                padding={{vertical: 8, horizontal: 12}}\n                alignItems=\"flex-start\"\n              >\n                <Icon name=\"warning\" color={Colors.Yellow700} />\n                <div style={{maxWidth: '400px', whiteSpace: 'normal', overflow: 'hidden'}}>\n                  <strong>Lost connection to Dagit server.</strong>\n                  <span>\n                    {` Verify that your instance is responding to requests at ${rootServerURI} and reload the page.`}\n                  </span>\n                </div>\n              </Group>\n            </Box>\n          </WebsocketWarning>\n        ) : null}\n        <FilterInputsBackgroundBox flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          <GraphQueryInput\n            items={props.graph}\n            value={props.selection.query}\n            placeholder=\"Type a step subset\"\n            onChange={props.onUpdateQuery}\n            presets={metadata ? interestingQueriesFor(metadata, layout) : undefined}\n            className={selection.keys.length > 0 ? 'has-step' : ''}\n          />\n          <Checkbox\n            checked={options.hideUnselectedSteps}\n            label=\"Hide unselected steps\"\n            onChange={props.onChange}\n          />\n        </FilterInputsBackgroundBox>\n      </GraphQueryInputContainer>\n    </>\n  );\n\n  return metadata ? (\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={content}\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          {...props}\n          nowMs={nowMs}\n          metadata={metadata}\n          onHighlightStep={(name) => setHoveredNodeName(name)}\n        />\n      }\n    />\n  ) : (\n    content\n  );\n};\n\ninterface GanttChartViewportContentsProps {\n  options: GanttChartLayoutOptions;\n  metadata: IRunMetadataDict;\n  layout: GanttChartLayout;\n  hoveredStep: string | null;\n  focusedSteps: string[];\n  viewport: GanttViewport;\n  setHoveredNodeName: (name: string | null) => void;\n  onDoubleClickStep: (step: string) => void;\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n}\n\nconst GanttChartViewportContents: React.FC<GanttChartViewportContentsProps> = (props) => {\n  const {viewport, layout, hoveredStep, focusedSteps, metadata, options} = props;\n  const items: React.ReactChild[] = [];\n\n  // To avoid drawing zillions of DOM nodes, we render only the boxes + lines that\n  // intersect with the current viewport.\n  const intersectsViewport = (bounds: Bounds) =>\n    bounds.minX < viewport.left + viewport.width &&\n    bounds.maxX > viewport.left &&\n    bounds.minY < viewport.top + viewport.height &&\n    bounds.maxY > viewport.top;\n\n  // We track the number of lines that end at each X value (they go over and then down,\n  // so this tracks where the vertical lines are). We shift lines by {count}px if there\n  // are others at the same X so wide \"tracks\" show you where data is being collected.\n  const verticalLinesAtXCoord: {[x: string]: number} = {};\n\n  if (options.mode !== GanttChartMode.FLAT) {\n    layout.boxes.forEach((box) => {\n      box.children.forEach((child, childIdx) => {\n        const bounds = boundsForLine(box, child);\n        if (!intersectsViewport(bounds)) {\n          return;\n        }\n        const childNotDrawn = !layout.boxes.includes(child);\n        const childWaiting = metadata ? !metadata.steps[child.node.name]?.state : false;\n\n        const overlapAtXCoord = verticalLinesAtXCoord[bounds.maxX] || 0;\n        verticalLinesAtXCoord[bounds.maxX] = overlapAtXCoord + 1;\n\n        items.push(\n          <GanttLine\n            darkened={\n              (focusedSteps?.includes(box.node.name) || hoveredStep) === box.node.name ||\n              (focusedSteps?.includes(child.node.name) || hoveredStep) === child.node.name\n            }\n            dotted={childNotDrawn || childWaiting}\n            key={`${box.key}-${child.key}-${childIdx}`}\n            depNotDrawn={childNotDrawn}\n            depIdx={overlapAtXCoord}\n            {...bounds}\n          />,\n        );\n      });\n    });\n  }\n\n  layout.boxes.forEach((box) => {\n    const bounds = boundsForBox(box);\n    const useDot = box.width === BOX_DOT_WIDTH_CUTOFF;\n    if (!intersectsViewport(bounds)) {\n      return;\n    }\n\n    items.push(\n      <div\n        key={box.key}\n        data-tooltip={box.node.name}\n        onClick={(evt: React.MouseEvent<any>) => props.onClickStep(box.node.name, evt)}\n        onDoubleClick={() => props.onDoubleClickStep(box.node.name)}\n        onMouseEnter={() => props.setHoveredNodeName(box.node.name)}\n        onMouseLeave={() => props.setHoveredNodeName(null)}\n        className={`\n            chart-element\n            ${useDot ? 'dot' : 'box'}\n            ${focusedSteps.includes(box.node.name) && 'focused'}\n            ${hoveredStep === box.node.name && 'hovered'}\n            ${isDynamicStep(box.node.name) && 'dynamic'}`}\n        style={{\n          left: bounds.minX,\n          top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n          width: useDot ? BOX_DOT_SIZE : box.width,\n          ...boxStyleFor(box.state, {metadata, options}),\n        }}\n      >\n        {box.state === IStepState.RUNNING ? <Spinner purpose=\"body-text\" /> : undefined}\n        {truncatedBoxLabel(box)}\n      </div>,\n    );\n  });\n\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    // Note: We sort the markers from left to right so that they're added to the DOM in that\n    // order and a long one doesn't make ones \"behind it\" unclickable.\n    layout.markers\n      .map((marker, idx) => ({marker, idx, bounds: boundsForBox(marker)}))\n      .filter(({bounds}) => intersectsViewport(bounds))\n      .sort((a, b) => a.bounds.minX - b.bounds.minX)\n      .forEach(({marker, bounds, idx}) => {\n        const useDot = marker.width === BOX_DOT_WIDTH_CUTOFF;\n\n        items.push(\n          <div\n            key={idx}\n            data-tooltip={marker.key}\n            className={`\n            chart-element\n            ${useDot ? 'marker-dot' : 'marker-whiskers'}`}\n            style={{\n              left: bounds.minX,\n              top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n              width: useDot ? BOX_DOT_SIZE : marker.width,\n            }}\n          >\n            <div />\n          </div>,\n        );\n      });\n  }\n\n  return <>{items}</>;\n};\n\ninterface Bounds {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\n/**\n * Returns the top left + bottom right bounds for the provided Gantt chart box\n * so that the box can be drawn and tested for intersection with the viewport.\n */\nconst boundsForBox = (a: GanttChartPlacement): Bounds => {\n  return {\n    minX: a.x,\n    minY: TOP_INSET + a.y * BOX_HEIGHT,\n    maxX: a.x + a.width,\n    maxY: TOP_INSET + a.y * BOX_HEIGHT + BOX_HEIGHT,\n  };\n};\n\n/**\n * Returns the top left + bottom right bounds for the line between two Gantt\n * chart boxes. The boxes do not need to be provided in left -> right order.\n * @param a: GanttChartBox\n */\nconst boundsForLine = (a: GanttChartBox, b: GanttChartBox): Bounds => {\n  if (b.y < a.y) {\n    [a, b] = [b, a];\n  }\n\n  const aIsDot = a.width === BOX_DOT_WIDTH_CUTOFF;\n  const aCenterY = aIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const bIsDot = b.width === BOX_DOT_WIDTH_CUTOFF;\n  const bCenterY = bIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const straight = b.y === a.y;\n\n  // Line comes out of the center of the right side of the box\n  const minX = Math.min(a.x + a.width, b.x + b.width);\n  const minY = TOP_INSET + (straight ? a.y * BOX_HEIGHT + aCenterY : a.y * BOX_HEIGHT + aCenterY);\n\n  // Line ends on the center left edge of the box if it is on the\n  // same line, or drops into the top center of the box if it's below.\n  const maxX = straight\n    ? Math.max(a.x, b.x)\n    : Math.max(a.x + a.width / 2, b.x + (bIsDot ? BOX_DOT_SIZE : b.width) / 2);\n  const maxY = straight\n    ? TOP_INSET + b.y * BOX_HEIGHT + bCenterY\n    : TOP_INSET + b.y * BOX_HEIGHT + (bIsDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y);\n\n  return {minX, minY, maxX, maxY};\n};\n\n/**\n * Renders a line on the Gantt visualization using a thin horizontal <div> and\n * a thin vertical <div> as necessary.\n */\nconst GanttLine = React.memo(\n  ({\n    minX,\n    minY,\n    maxX,\n    maxY,\n    dotted,\n    darkened,\n    depIdx,\n    depNotDrawn,\n  }: {\n    dotted: boolean;\n    darkened: boolean;\n    depIdx: number;\n    depNotDrawn: boolean;\n  } & Bounds) => {\n    const border = `${LINE_SIZE}px ${dotted ? 'dotted' : 'solid'} ${\n      darkened ? Colors.Gray700 : Colors.Gray300\n    }`;\n\n    const maxXAvoidingOverlap = maxX + (depIdx % 10) * LINE_SIZE;\n\n    return (\n      <>\n        <div\n          className=\"line\"\n          style={{\n            height: 1,\n            left: minX,\n            width: depNotDrawn ? 50 : maxXAvoidingOverlap - minX,\n            top: minY - 1,\n            borderTop: border,\n            zIndex: darkened ? 100 : 1,\n          }}\n        />\n        {minY !== maxY && !depNotDrawn && (\n          <div\n            className=\"line\"\n            style={{\n              width: 1,\n              left: maxXAvoidingOverlap,\n              top: minY - LINE_SIZE / 2,\n              height: maxY - minY,\n              borderRight: border,\n              zIndex: darkened ? 100 : 1,\n            }}\n          />\n        )}\n      </>\n    );\n  },\n  isEqual,\n);\n\nfunction truncatedBoxLabel(box: GanttChartBox) {\n  if (box.width <= BOX_SHOW_LABEL_WIDTH_CUTOFF) {\n    return undefined;\n  }\n\n  // Note: The constants here must be in sync with the CSS immediately below\n  const totalPadding = 7 + (box.state === IStepState.RUNNING ? 16 : 0);\n  const maxLength = (box.width - totalPadding) / 6.2;\n\n  return withMiddleTruncation(box.node.name, {maxLength});\n}\n\n// Note: It is much faster to use standard CSS class selectors here than make\n// each box and line a styled-component because all styled components register\n// listeners for the \"theme\" React context.\nconst GanttChartContainer = styled.div`\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n  user-select: none;\n  background: ${Colors.White};\n\n  .line {\n    position: absolute;\n    user-select: none;\n    pointer-events: none;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n  }\n\n  .chart-element {\n    font-size: 12px;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear;\n    display: inline-block;\n    position: absolute;\n    color: white;\n    overflow: hidden;\n    user-select: text;\n    z-index: 2;\n\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n  }\n\n  .dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid transparent;\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n\n  .box {\n    /* Note: padding + font changes may also impact truncatedBoxLabel */\n\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    padding: 3px;\n    padding-right: 1px;\n    border: 1px solid transparent;\n    border-radius: 2px;\n    white-space: nowrap;\n    font-family: ${FontFamily.monospace};\n    font-size: 12.5px;\n    font-weight: 700;\n    line-height: 15px;\n\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n\n    &.focused {\n      border: 1px solid ${Colors.Gray900};\n      box-shadow: 0 0 0 2px ${Colors.Yellow500};\n    }\n    &.hovered {\n      border: 1px solid ${Colors.Gray800};\n    }\n    &.dynamic {\n      filter: brightness(115%);\n    }\n\n    ${SpinnerWrapper} {\n      display: inline-block;\n      vertical-align: text-bottom;\n      padding-right: 4px;\n    }\n  }\n\n  .marker-dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid rgb(27, 164, 206);\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n  .marker-whiskers {\n    display: inline-block;\n    position: absolute;\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    background: rgba(27, 164, 206, 0.09);\n    border-left: 1px solid rgba(27, 164, 206, 0.6);\n    border-right: 1px solid rgba(27, 164, 206, 0.6);\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear;\n\n    & > div {\n      border-bottom: 1px dashed rgba(27, 164, 206, 0.6);\n      height: ${(BOX_HEIGHT - BOX_MARGIN_Y * 2) / 2}px;\n    }\n  }\n`;\n\nconst WebsocketWarning = styled.div`\n  position: absolute;\n  bottom: 100%;\n  color: ${Colors.Yellow700};\n  width: 100%;\n`;\n\nconst GraphQueryInputContainer = styled.div`\n  z-index: 2;\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  white-space: nowrap;\n`;\n\nconst FilterInputsBackgroundBox = styled(Box)`\n  background: radial-gradient(${Colors.Gray50} 0%, rgba(255, 255, 255, 0) 100%);\n  padding: 15px 15px 0px 15px;\n`;\n\nexport const GanttChartLoadingState = ({runId}: {runId: string}) => (\n  <GanttChartContainer>\n    <OptionsContainer />\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={\n        <div style={{margin: 'auto', marginTop: 100}}>\n          <Spinner purpose=\"section\" />\n        </div>\n      }\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          graph={[]}\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={runId}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n\nexport const QueuedState = ({run}: {run: RunFragment}) => (\n  <GanttChartContainer>\n    <OptionsContainer style={{justifyContent: 'flex-end'}}>\n      <CancelRunButton run={run} />\n    </OptionsContainer>\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={\n        <NonIdealState\n          icon=\"arrow_forward\"\n          title=\"Run queued\"\n          description=\"This run is queued for execution and will start soon.\"\n          action={\n            <Link to={runsPathWithFilters([{token: 'status', value: 'QUEUED'}])}>\n              View queued runs\n            </Link>\n          }\n        />\n      }\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          graph={[]}\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={run.id}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n","import {ButtonGroup, ButtonGroupItem} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {GanttChartMode} from './Constants';\n\nexport const GanttChartModeControl: React.FC<{\n  value: GanttChartMode;\n  hideTimedMode: boolean;\n  onChange: (mode: GanttChartMode) => void;\n}> = React.memo(({value, onChange, hideTimedMode}) => {\n  const buttons: ButtonGroupItem<GanttChartMode>[] = [\n    {id: GanttChartMode.FLAT, icon: 'gantt_flat', tooltip: 'Flat view'},\n    {id: GanttChartMode.WATERFALL, icon: 'gantt_waterfall', tooltip: 'Waterfall view'},\n  ];\n\n  if (!hideTimedMode) {\n    buttons.push({\n      id: GanttChartMode.WATERFALL_TIMED,\n      icon: 'timer',\n      tooltip: 'Timed view',\n    });\n  }\n\n  const activeItems = React.useMemo(() => new Set([value]), [value]);\n  const onClick = React.useCallback((id: GanttChartMode) => onChange(id), [onChange]);\n\n  return <ButtonGroup activeItems={activeItems} buttons={buttons} onClick={onClick} />;\n});\n","import {Colors, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTime} from '../app/Util';\n\nimport {CSS_DURATION, GanttViewport, LEFT_INSET} from './Constants';\n\nconst ONE_MIN = 60 * 1000;\nconst ONE_HOUR = 60 * 60 * 1000;\n\n// If we're zoomed in to second or minute resolution but showing large values,\n// switch to the \"1:00:05\" format used elsewhere in Dagit.\nconst subsecondResolutionLabel = (ms: number) =>\n  ms > 5 * ONE_MIN ? formatElapsedTime(ms) : `${(ms / 1000).toFixed(1)}s`;\nconst secondResolutionLabel = (ms: number) =>\n  ms > 5 * ONE_MIN ? formatElapsedTime(ms) : `${(ms / 1000).toFixed(0)}s`;\nconst minuteResolutionLabel = (ms: number) =>\n  ms > 59 * ONE_MIN ? formatElapsedTime(ms) : `${Math.round(ms / ONE_MIN)}m`;\nconst hourResolutionLabel = (ms: number) => `${Math.round(ms / ONE_HOUR)}h`;\n\n// We want to gracefully transition the tick marks shown as you zoom, but it's\n// nontrivial to programatically pick good intervals. (500ms => 1s => 5s, etc.)\n// This lookup table defines the available tick mark intervals and the labeling\n// that should be used for each one(\"2:00\" or \"2m\" or \"2s\" or \"0.05s\", etc.).\n//\n// We use the first configuration that places ticks at least 80 pixels apart\n// at the rendered scale.\n//\nconst TICK_CONFIG = [\n  {\n    tickIntervalMs: 0.5 * 1000,\n    tickLabels: subsecondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 1 * 1000,\n    tickLabels: secondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 5 * 1000,\n    tickLabels: secondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 10 * 1000,\n    tickLabels: secondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 30 * 1000,\n    tickLabels: secondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 60 * 1000,\n    tickLabels: secondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 2 * 60 * 1000,\n    tickLabels: minuteResolutionLabel,\n  },\n  {\n    tickIntervalMs: 5 * 60 * 1000,\n    tickLabels: minuteResolutionLabel,\n  },\n  {\n    tickIntervalMs: 10 * 60 * 1000,\n    tickLabels: minuteResolutionLabel,\n  },\n  {\n    tickIntervalMs: 20 * 60 * 1000,\n    tickLabels: minuteResolutionLabel,\n  },\n  {\n    tickIntervalMs: 60 * 60 * 1000,\n    tickLabels: hourResolutionLabel,\n  },\n  {\n    tickIntervalMs: 3 * 60 * 60 * 1000,\n    tickLabels: hourResolutionLabel,\n  },\n  {\n    tickIntervalMs: 6 * 60 * 60 * 1000,\n    tickLabels: hourResolutionLabel,\n  },\n  {\n    tickIntervalMs: 12 * 60 * 60 * 1000,\n    tickLabels: hourResolutionLabel,\n  },\n];\n\ninterface GanttChartTimescaleProps {\n  scale: number;\n  viewport: GanttViewport;\n  layoutSize: {width: number; height: number};\n  nowMs: number;\n  startMs: number;\n  highlightedMs: number[];\n}\n\nconst TICKS_ROW_HEIGHT = 32;\nconst TICK_LABEL_WIDTH = 56;\nconst MIN_PX_BETWEEN_TICKS = 80;\n\nexport const GanttChartTimescale = ({\n  scale,\n  viewport,\n  nowMs,\n  startMs,\n  highlightedMs,\n  layoutSize,\n}: GanttChartTimescaleProps) => {\n  const transform = `translate(${LEFT_INSET - viewport.left}px)`;\n  const ticks: React.ReactNode[] = [];\n  const lines: React.ReactNode[] = [];\n\n  const pxPerMs = scale;\n  const tickConfig = TICK_CONFIG.find((t) => t.tickIntervalMs * pxPerMs > MIN_PX_BETWEEN_TICKS);\n  if (tickConfig) {\n    const {tickIntervalMs, tickLabels} = tickConfig;\n    const pxPerTick = tickIntervalMs * pxPerMs;\n\n    let tickMs = Math.floor(viewport.left / pxPerTick) * tickIntervalMs;\n    let tickX = tickMs * pxPerMs;\n\n    while (tickX < viewport.left + viewport.width) {\n      tickMs += tickIntervalMs;\n      tickX += pxPerTick;\n      if (tickX - viewport.left < 10) {\n        continue;\n      }\n      const key = `${tickMs.toFixed(2)}`;\n      const label = tickLabels(tickMs);\n      lines.push(<div className=\"line\" key={key} style={{left: tickX, transform}} />);\n      ticks.push(\n        <div className=\"tick\" key={key} style={{left: tickX - TICK_LABEL_WIDTH / 2, transform}}>\n          {label}\n        </div>,\n      );\n    }\n  }\n\n  return (\n    <TimescaleContainer>\n      <TimescaleTicksContainer>\n        {ticks}\n        {highlightedMs.length === 2 && (\n          <div\n            key=\"highlight-duration\"\n            className=\"tick duration\"\n            style={{\n              left: (highlightedMs[0]! - startMs) * pxPerMs + 2,\n              width: (highlightedMs[1]! - highlightedMs[0]!) * pxPerMs - 2,\n              transform,\n            }}\n          >\n            {formatElapsedTime(highlightedMs[1]! - highlightedMs[0]!)}\n          </div>\n        )}\n        {highlightedMs.map((ms, idx) => {\n          const timeX = (ms - startMs) * pxPerMs;\n          const labelOffset =\n            idx === 0 && timeX > TICK_LABEL_WIDTH + viewport.left ? -(TICK_LABEL_WIDTH - 1) : 0;\n\n          return (\n            <div\n              key={`highlight-${idx}`}\n              className=\"tick highlight\"\n              style={{left: timeX + labelOffset, transform}}\n            >\n              {subsecondResolutionLabel(ms - startMs)}\n            </div>\n          );\n        })}\n      </TimescaleTicksContainer>\n      <TimescaleLinesContainer style={{width: viewport.width, height: viewport.height}}>\n        {lines}\n        {highlightedMs.map((ms, idx) => (\n          <div\n            className=\"line highlight\"\n            key={`highlight-${idx}`}\n            style={{left: (ms - startMs) * pxPerMs + (idx === 0 ? -1 : 0), transform}}\n          />\n        ))}\n        {nowMs > startMs && (\n          <div\n            className=\"fog-of-war\"\n            style={{\n              left: (nowMs - startMs) * pxPerMs,\n              width: Math.max(layoutSize.width, viewport.width) - (nowMs - startMs) * pxPerMs + 100,\n              transform,\n            }}\n          ></div>\n        )}\n      </TimescaleLinesContainer>\n    </TimescaleContainer>\n  );\n};\n\nconst TimescaleContainer = styled.div`\n  width: 100%;\n\n  & .tick {\n    position: absolute;\n    padding-top: 7px;\n    width: ${TICK_LABEL_WIDTH}px;\n    height: ${TICKS_ROW_HEIGHT}px;\n    box-sizing: border-box;\n    transition: left ${CSS_DURATION}ms linear, width ${CSS_DURATION}ms linear;\n    text-align: center;\n  }\n  & .tick.duration {\n    color: ${Colors.Gray500};\n    background: ${Colors.Gray100};\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n  }\n  & .tick.highlight {\n    color: white;\n    height: ${TICKS_ROW_HEIGHT + 2}px;\n    background: ${Colors.Gray900};\n  }\n  & .line {\n    position: absolute;\n    border-left: 1px solid #f0f0f0;\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n  }\n  & .line.highlight {\n    border-left: 2px solid ${Colors.Gray900};\n    z-index: 1111;\n    top: -1px;\n  }\n\n  & .fog-of-war {\n    position: absolute;\n    background: ${Colors.Gray50};\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n    width: 100%;\n  }\n`;\n\nconst TimescaleTicksContainer = styled.div`\n  height: ${TICKS_ROW_HEIGHT}px;\n  z-index: 4;\n  position: relative;\n  background: ${Colors.White};\n  display: flex;\n  color: ${Colors.Gray500};\n  font-size: 13px;\n  font-family: ${FontFamily.monospace};\n  box-shadow: inset 0 -1px ${Colors.KeylineGray};\n  overflow: hidden;\n`;\n\nconst TimescaleLinesContainer = styled.div`\n  z-index: 0;\n  top: ${TICKS_ROW_HEIGHT}px;\n  left: 0;\n  position: absolute;\n  pointer-events: none;\n  overflow: hidden;\n`;\n","import {Colors, SliderStyles} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\n/**\n * Renders a horizontal slider that lets you adjust the graph's relative zoom from 1-100.\n * It uses Blueprint CSS but not the Slider component, because that renders twice and\n * forces a DOM layout to determine it's size (I think for tick marks, which we aren't using)\n */\nexport const ZoomSlider: React.FC<{\n  value: number;\n  onChange: (v: number) => void;\n}> = React.memo((props) => {\n  return (\n    <ZoomSliderContainer\n      $fillColor={Colors.Gray600}\n      className=\"bp4-slider bp4-slider-unlabeled\"\n      onMouseDown={(e: React.MouseEvent) => {\n        const rect = e.currentTarget.closest('.bp4-slider')!.getBoundingClientRect();\n\n        let initialX: number;\n        if (e.target instanceof HTMLElement && e.target.classList.contains('bp4-slider-handle')) {\n          initialX = e.pageX;\n        } else {\n          initialX = rect.left + (props.value / 100) * rect.width;\n        }\n\n        const onUpdate = (e: MouseEvent) => {\n          const nextValue = props.value + (e.pageX - initialX) * (100 / rect.width);\n          props.onChange(Math.max(0, Math.min(100, nextValue)));\n        };\n        const onRelease = (e: MouseEvent) => {\n          onUpdate(e);\n          document.removeEventListener('mousemove', onUpdate);\n          document.removeEventListener('mouseup', onRelease);\n        };\n        document.addEventListener('mousemove', onUpdate);\n        document.addEventListener('mouseup', onRelease);\n      }}\n    >\n      <div className=\"bp4-slider-track\">\n        <div className=\"bp4-slider-progress\" style={{left: 0, right: 0, top: 0}} />\n        <div\n          className=\"bp4-slider-progress bp4-intent-primary\"\n          style={{left: 0, right: `${100 - props.value}%`, top: 0}}\n        />\n      </div>\n      <div className=\"bp4-slider-axis\" />\n      <span\n        className=\"bp4-slider-handle\"\n        style={{left: `calc(${props.value}% - 8px)`}}\n        tabIndex={0}\n      />\n    </ZoomSliderContainer>\n  );\n});\n\nconst ZoomSliderContainer = styled.div`\n  ${SliderStyles}\n`;\n","import {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {GanttChartMode} from './Constants';\n\nconst GANTT_CHART_MODE_KEY = 'GanttChartModePreference';\n\nconst validateSavedMode = (storedValue: string) =>\n  storedValue === GanttChartMode.FLAT ||\n  storedValue === GanttChartMode.WATERFALL ||\n  storedValue === GanttChartMode.WATERFALL_TIMED\n    ? storedValue\n    : GanttChartMode.WATERFALL_TIMED;\n\nexport const useGanttChartMode = () => {\n  return useStateWithStorage(GANTT_CHART_MODE_KEY, validateSavedMode);\n};\n","import {Colors} from '@dagster-io/ui';\n\nimport {IRunMetadataDict, IStepAttempt, IStepState} from '../runs/RunMetadataProvider';\n\nimport {\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  BOX_WIDTH,\n  FLAT_INSET_FROM_PARENT,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMarker,\n  GanttChartMode,\n  IGanttNode,\n  LEFT_INSET,\n} from './Constants';\nimport {isDynamicStep, isPlannedDynamicStep, dynamicKeyWithoutIndex} from './DynamicStepSupport';\n\nexport interface BuildLayoutParams {\n  nodes: IGanttNode[];\n  mode: GanttChartMode;\n}\n\nexport const buildLayout = (params: BuildLayoutParams) => {\n  const {nodes, mode} = params;\n\n  // Step 1: Place the nodes that have no dependencies into the layout.\n  const hasNoDependencies = (g: IGanttNode) =>\n    !g.inputs.some((i) => i.dependsOn.some((s) => nodes.find((o) => o.name === s.solid.name)));\n\n  const boxes: GanttChartBox[] = nodes.filter(hasNoDependencies).map((node) => ({\n    node,\n    key: node.name,\n    state: undefined,\n    children: [],\n    x: -1,\n    y: -1,\n    root: true,\n    width: BOX_WIDTH,\n  }));\n\n  // Step 2: Recursively iterate through the graph and insert child nodes\n  // into the `boxes` array, ensuring that their positions in the array are\n  // always greater than their parent(s) position (which requires correction\n  // because boxes can have multiple dependencies.)\n  const roots = [...boxes];\n  roots.forEach((box) => addChildren(boxes, box, params));\n\n  // Step 3: Assign X values (pixels) to each box by traversing the graph from the\n  // roots onward and pushing things to the right as we go.\n  const deepen = (box: GanttChartBox, x: number) => {\n    if (box.x >= x) {\n      // If this box is already further to the right than required by it's parent,\n      // we can safely stop traversing this branch of the graph.\n      return;\n    }\n    box.x = x;\n    box.children.forEach((child) => {\n      if (child.key !== box.key) {\n        deepen(child, box.x + box.width + BOX_SPACING_X);\n      }\n    });\n  };\n  roots.forEach((box) => deepen(box, LEFT_INSET));\n\n  const parents: {[name: string]: GanttChartBox[]} = {};\n  const boxesByY: {[y: string]: GanttChartBox[]} = {};\n\n  // Step 4: Assign Y values (row numbers not pixel values)\n  // First put each box on it's own line. We know this will generate a fine gantt viz\n  // because we sorted the boxes array as we built it.\n  boxes.forEach((box, idx) => {\n    box.y = idx;\n    box.children.forEach((child) => {\n      const target = parents[child.node.name] || [];\n      target.push(box);\n      parents[child.node.name] = target;\n    });\n  });\n\n  boxes.forEach((box) => {\n    const target = boxesByY[`${box.y}`] || [];\n    target.push(box);\n    boxesByY[`${box.y}`] = target;\n  });\n\n  // Next, start at the bottom of the viz and \"collapse\" boxes up on to the previous line\n  // as long as that does not result in them being higher than their parents AND does\n  // not cause them to sit on top of an existing on-the-same-line A ---> B arrow.\n\n  // This makes basic box series (A -> B -> C -> D) one row instead of four rows.\n\n  let changed = true;\n  while (changed) {\n    changed = false;\n    const boxesReversed = [...boxes].reverse();\n    for (const box of boxesReversed) {\n      const boxParents = parents[box.node.name] || [];\n      const highestYParent = boxParents.sort((a, b) => b.y - a.y)[0];\n      if (!highestYParent) {\n        continue;\n      }\n      // Don't re-order the first row of nodes that \"fan out\" from a dynamic output. this\n      // ensures that these nodes are always \"waterfall\" visually by ascending index.\n      if (isDynamicStep(box.node.name) && !isDynamicStep(highestYParent.node.name)) {\n        continue;\n      }\n      const onTargetY = boxesByY[`${highestYParent.y}`]!;\n      const taken = onTargetY.find((r) => r.x === box.x);\n      if (taken) {\n        continue;\n      }\n\n      const parentX = highestYParent.x;\n      const willCross = onTargetY.some((r) => r.x > parentX && r.x < box.x);\n      const willCauseCrossing = onTargetY.some(\n        (r) => r.x < box.x && r.children.some((c) => c.y >= highestYParent.y && c.x > box.x),\n      );\n      if (willCross || willCauseCrossing) {\n        continue;\n      }\n\n      boxesByY[`${box.y}`] = boxesByY[`${box.y}`]!.filter((b) => b !== box);\n      box.y = highestYParent.y;\n      boxesByY[`${box.y}`]!.push(box);\n\n      changed = true;\n      break;\n    }\n  }\n\n  if (mode === GanttChartMode.FLAT) {\n    // Now that we've inlined chains of boxes where possible, flatten everything back out onto the\n    // Y axis. Doing this after inlining ensures that children are close to their parents in the\n    // resulting tree rather than placed randomly before their mutual dependents.\n    let bottomY = 0;\n    for (const y of Object.keys(boxesByY)) {\n      const row = boxesByY[y]!;\n      if (!row.length) {\n        continue;\n      }\n      let x = row[0]!.root\n        ? LEFT_INSET\n        : parents[row[0]!.node.name]![0]!.x + FLAT_INSET_FROM_PARENT;\n      for (const box of row) {\n        box.x = x;\n        box.y = bottomY;\n        bottomY += 1;\n        x += FLAT_INSET_FROM_PARENT;\n      }\n    }\n    boxes.sort((a, b) => a.y - b.y || a.x - b.x);\n  } else {\n    // Since we've inlined boxes, shift rows up and fill empty space until every Y value has a box.\n    changed = true;\n    while (changed) {\n      changed = false;\n      const maxY = boxes.reduce((m, r) => Math.max(m, r.y), 0);\n      for (let y = 0; y < maxY; y++) {\n        const empty = !boxes.some((r) => r.y === y);\n        if (empty) {\n          boxes.filter((r) => r.y > y).forEach((r) => (r.y -= 1));\n          changed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  return {boxes, markers: []} as GanttChartLayout;\n};\n\nconst ensureSubtreeAfterParentInArray = (\n  boxes: GanttChartBox[],\n  parent: GanttChartBox,\n  box: GanttChartBox,\n) => {\n  const parentIdx = boxes.indexOf(parent);\n  const boxIdx = boxes.indexOf(box);\n  if (parentIdx <= boxIdx) {\n    return;\n  }\n  boxes.splice(boxIdx, 1);\n  boxes.splice(parentIdx, 0, box);\n\n  // Note: It's important that we don't cache or pass indexes during this recursion.\n  // Visiting a child below could cause boxes earlier in the array to be pulled to the\n  // end. Our `parentIdx` above is not stable within the box.children loop below.\n\n  for (const child of box.children) {\n    ensureSubtreeAfterParentInArray(boxes, box, child);\n  }\n};\n\nconst addChildren = (boxes: GanttChartBox[], box: GanttChartBox, params: BuildLayoutParams) => {\n  const seen: string[] = [];\n  const added: GanttChartBox[] = [];\n\n  for (const out of box.node.outputs) {\n    for (const dep of out.dependedBy) {\n      const depNode = params.nodes.find((n) => dep.solid.name === n.name);\n      if (!depNode) {\n        continue;\n      }\n\n      if (seen.includes(depNode.name)) {\n        continue;\n      }\n\n      // Hide the unresolved node if any its resolved node exists\n      if (\n        isPlannedDynamicStep(depNode.name) &&\n        seen\n          .filter((n) => isDynamicStep(n))\n          .some((n) => dynamicKeyWithoutIndex(n) === dynamicKeyWithoutIndex(depNode.name))\n      ) {\n        continue;\n      }\n\n      seen.push(depNode.name);\n\n      const depBoxIdx = boxes.findIndex((r) => r.node === depNode);\n      let depBox: GanttChartBox;\n\n      if (depBoxIdx === -1) {\n        depBox = {\n          children: [],\n          key: depNode.name,\n          node: depNode,\n          state: undefined,\n          width: BOX_WIDTH,\n          root: false,\n          x: 0,\n          y: -1,\n        };\n        boxes.push(depBox);\n        added.push(depBox);\n      } else {\n        depBox = boxes[depBoxIdx]!;\n        ensureSubtreeAfterParentInArray(boxes, box, depBox);\n      }\n\n      box.children.push(depBox);\n    }\n  }\n\n  // Note: To limit the amount of time we spend shifting elements of our `boxes` array to keep it\n  // ordered (knowing that parents appear before children gives us more opportunities for early\n  // returns, etc. elsewhere), we add all of our immediate children and THEN proceed in to the next layer.\n  for (const depBox of added) {\n    addChildren(boxes, depBox, params);\n  }\n};\n\nconst TextColorForStates = {\n  [IStepState.RUNNING]: Colors.Blue700,\n  [IStepState.RETRY_REQUESTED]: Colors.White,\n  [IStepState.SUCCEEDED]: Colors.White,\n  [IStepState.FAILED]: Colors.White,\n  [IStepState.SKIPPED]: Colors.White,\n  [IStepState.UNKNOWN]: Colors.White,\n};\n\nconst BackgroundColorForStates = {\n  [IStepState.RUNNING]: Colors.Blue100,\n  [IStepState.RETRY_REQUESTED]: Colors.Yellow500,\n  [IStepState.SUCCEEDED]: Colors.Green500,\n  [IStepState.FAILED]: Colors.Red500,\n  [IStepState.SKIPPED]: Colors.Gray500,\n  [IStepState.UNKNOWN]: Colors.Gray400,\n};\n\nexport const boxStyleFor = (\n  state: IStepState | undefined,\n  context: {\n    metadata: IRunMetadataDict;\n    options: {mode: GanttChartMode};\n  },\n) => {\n  // Not running and not viewing waterfall? We always use a nice blue\n  if (\n    !context.metadata.startedPipelineAt &&\n    context.options.mode !== GanttChartMode.WATERFALL_TIMED\n  ) {\n    return {background: `#2491eb`};\n  }\n\n  // Step has started and has state? Return state color.\n  if (state && state !== IStepState.PREPARING) {\n    return {\n      color: TextColorForStates[state] || Colors.White,\n      background: BackgroundColorForStates[state] || Colors.Gray400,\n    };\n  }\n\n  // Step has not started, use \"hypothetical dotted box\".\n  return {\n    color: Colors.Gray600,\n    background: Colors.White,\n    border: `1.5px dotted ${Colors.Gray500}`,\n  };\n};\n\n// Does a shallow clone of the boxes so attributes (`width`, `x`, etc) can be mutated.\n// This requires special logic because (for easy graph travesal), boxes.children references\n// other elements of the boxes array. A basic deepClone would replicate these into\n// copies rather than references.\nconst cloneLayout = ({boxes, markers}: GanttChartLayout): GanttChartLayout => {\n  const map = new WeakMap();\n  const nextMarkers = markers.map((m) => ({...m}));\n  const nextBoxes: GanttChartBox[] = [];\n  for (const box of boxes) {\n    const next = {...box};\n    nextBoxes.push(next);\n    map.set(box, next);\n  }\n\n  boxes.forEach((box, ii) => {\n    nextBoxes[ii]!.children = box.children.map((c) => map.get(c));\n  });\n\n  return {boxes: nextBoxes, markers: nextMarkers};\n};\n\nconst positionAndSplitBoxes = (\n  boxes: GanttChartBox[],\n  metadata: IRunMetadataDict,\n  positionFor: (\n    box: GanttChartBox,\n    run?: IStepAttempt | null,\n    runIdx?: number,\n  ) => {width: number; x: number},\n) => {\n  // Apply X values + widths to boxes, and break apart retries into their own boxes by looking\n  // at the transitions recorded for each step.\n  for (let ii = boxes.length - 1; ii >= 0; ii--) {\n    const box = boxes[ii]!;\n    const meta = metadata.steps[box.node.name];\n    if (!meta) {\n      Object.assign(box, positionFor(box));\n      continue;\n    }\n    if (meta.attempts.length === 0) {\n      Object.assign(box, positionFor(box));\n      box.state = meta.state;\n      continue;\n    }\n\n    const runBoxes: GanttChartBox[] = [];\n    meta.attempts.forEach((run, runIdx) => {\n      runBoxes.push({\n        ...box,\n        ...positionFor(box, run, runIdx),\n        key: `${box.key}-${runBoxes.length}`,\n        state: run.exitState || IStepState.RUNNING,\n      });\n    });\n\n    // Move the children (used to draw outbound lines) to the last box\n    for (let jj = 0; jj < runBoxes.length - 1; jj++) {\n      runBoxes[jj]!.children = [runBoxes[jj + 1]!];\n    }\n    runBoxes[runBoxes.length - 1]!.children = box.children;\n\n    Object.assign(box, runBoxes[0]);\n    // Add additional boxes we created for retries\n    if (runBoxes.length > 1) {\n      boxes.splice(ii, 0, ...runBoxes.slice(1));\n    }\n  }\n};\n\n/** Traverse the graph from the root and place boxes that still have x=0 locations.\n(Unstarted or skipped boxes) so that they appear downstream of running boxes\nwe have position / time data for. */\nconst positionUntimedBoxes = (boxes: GanttChartBox[], earliestAllowedX: number) => {\n  const unstarted = boxes.filter((box) => box.x === 0);\n\n  const visit = (box: GanttChartBox, parentX: number) => {\n    if (box.x === 0) {\n      // If we are visiting the box for the first time (by traversing the tree from\n      // another starting box), starting another pass using it as the root is unnecessary.\n      const idx = unstarted.indexOf(box);\n      if (idx !== -1) {\n        unstarted.splice(idx, 1);\n      }\n    }\n\n    box.x = Math.max(box.x, earliestAllowedX, parentX);\n\n    const minXForUnstartedChildren = box.x + box.width + BOX_SPACING_X;\n    for (const child of box.children) {\n      if (child.x < minXForUnstartedChildren) {\n        visit(child, minXForUnstartedChildren);\n      }\n    }\n  };\n\n  let box: GanttChartBox | undefined;\n  while ((box = unstarted.shift())) {\n    visit(box, earliestAllowedX);\n  }\n};\n\nexport const adjustLayoutWithRunMetadata = (\n  layout: GanttChartLayout,\n  options: GanttChartLayoutOptions,\n  metadata: IRunMetadataDict,\n  scale: number,\n  nowMs: number,\n): GanttChartLayout => {\n  // Clone the layout into a new set of JS objects so that React components can do shallow\n  // comparison between the old set and the new set and code below can traverse + mutate\n  // in place.\n  let {boxes} = cloneLayout(layout);\n  const markers: GanttChartMarker[] = [];\n\n  // Move and size boxes based on the run metadata. Note that we don't totally invalidate\n  // the pre-computed layout for the execution plan, (and shouldn't have to since the run's\n  // step ordering, etc. should obey the constraints we already planned for). We just push\n  // boxes around on their existing rows.\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    const startedPipelineAt = metadata.startedPipelineAt || nowMs;\n    const xForMs = (time: number) => LEFT_INSET + (time - startedPipelineAt) * scale;\n    const widthForMs = ({start, end}: {start: number; end?: number}) =>\n      Math.max(BOX_DOT_WIDTH_CUTOFF, ((end || nowMs) - start) * scale);\n\n    positionAndSplitBoxes(boxes, metadata, (_box, attempt) => ({\n      x: attempt ? xForMs(attempt.start) : 0,\n      width: attempt ? widthForMs(attempt) : BOX_WIDTH,\n    }));\n\n    positionUntimedBoxes(boxes, xForMs(nowMs) + BOX_SPACING_X);\n\n    // Add markers to the layout using the run metadata\n    metadata.globalMarkers.forEach((m) => {\n      if (m.start === undefined) {\n        return;\n      }\n      markers.push({\n        key: `global:${m.key}`,\n        y: 0,\n        x: xForMs(m.start),\n        width: widthForMs({start: m.start, end: m.end}),\n      });\n    });\n    Object.entries(metadata.steps).forEach(([name, step]) => {\n      for (const m of step.markers) {\n        if (m.start === undefined) {\n          continue;\n        }\n        const stepBox = layout.boxes.find((b) => b.node.name === name);\n        if (!stepBox) {\n          continue;\n        }\n\n        markers.push({\n          key: `${name}:${m.key}`,\n          y: stepBox.y,\n          x: xForMs(m.start),\n          width: widthForMs({start: m.start, end: m.end}),\n        });\n      }\n    });\n\n    // Apply display options / filtering\n    if (options.hideWaiting) {\n      boxes = boxes.filter((b) => !!metadata.steps[b.node.name]?.state);\n    }\n  } else if (options.mode === GanttChartMode.WATERFALL) {\n    positionAndSplitBoxes(boxes, metadata, (box, _run, runIdx) => ({\n      x: box.x + (runIdx ? (BOX_SPACING_X + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else if (options.mode === GanttChartMode.FLAT) {\n    positionAndSplitBoxes(boxes, metadata, (box, _run, runIdx) => ({\n      x: box.x + (runIdx ? (2 + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else {\n    throw new Error('Invalid mdoe ');\n  }\n\n  return {boxes, markers};\n};\n\n/**\n * Returns a set of query presets that highlight interesting slices of the visualization.\n */\nexport const interestingQueriesFor = (metadata: IRunMetadataDict, layout: GanttChartLayout) => {\n  if (layout.boxes.length === 0) {\n    return;\n  }\n  const results: {name: string; value: string}[] = [];\n\n  const errorsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k]!.state === IStepState.FAILED)\n    .map((k) => `+${k}`)\n    .join(', ');\n  if (errorsQuery) {\n    results.push({name: 'Errors', value: errorsQuery});\n  }\n\n  const slowStepsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k]?.end && metadata.steps[k]?.start)\n    .sort(\n      (a, b) =>\n        metadata.steps[b]!.end! -\n        metadata.steps[b]!.start! -\n        (metadata.steps[a]!.end! - metadata.steps[a]!.start!),\n    )\n    .slice(0, 5)\n    .map((k) => `\"${k}\"`)\n    .join(', ');\n  if (slowStepsQuery) {\n    results.push({name: 'Slowest Individual Steps', value: slowStepsQuery});\n  }\n\n  const rightmostCompletedBox = [...layout.boxes]\n    .filter((b) => metadata.steps[b.node.name]?.end)\n    .sort((a, b) => b.x + b.width - (a.x + a.width))[0];\n\n  if (rightmostCompletedBox) {\n    results.push({\n      name: 'Slowest Path',\n      value: `*${rightmostCompletedBox.node.name}`,\n    });\n  }\n\n  return results;\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, ButtonLink, Colors, Group, Icon, FontFamily} from '@dagster-io/ui';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunStateSummary, RunTime, RUN_TIME_FRAGMENT} from '../runs/RunUtils';\n\nimport {\n  RunGroupPanelQuery,\n  RunGroupPanelQueryVariables,\n  RunGroupPanelRunFragment,\n} from './types/RunGroupPanel.types';\n\ntype Run = RunGroupPanelRunFragment;\n\nfunction subsetTitleForRun(run: {tags: {key: string; value: string}[]}) {\n  const stepsTag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  return stepsTag ? stepsTag.value : '*';\n}\n\nexport const RunGroupPanel: React.FC<{runId: string; runStatusLastChangedAt: number}> = ({\n  runId,\n  runStatusLastChangedAt,\n}) => {\n  const queryResult = useQuery<RunGroupPanelQuery, RunGroupPanelQueryVariables>(\n    RUN_GROUP_PANEL_QUERY,\n    {\n      variables: {runId},\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const {data, refetch} = queryResult;\n  useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  // Because the RunGroupPanel makes it's own query for the runs and their statuses,\n  // the log + gantt chart UI can show that the run is \"completed\" for up to 15s before\n  // it's reflected in the sidebar. Observing this single timestamp from our parent\n  // allows us to refetch data immediately when the run's exitedAt / startedAt, etc. is set.\n  React.useEffect(() => {\n    if (runStatusLastChangedAt) {\n      refetch();\n    }\n  }, [refetch, runStatusLastChangedAt]);\n\n  const group = data?.runGroupOrError;\n\n  if (!group || group.__typename === 'RunGroupNotFoundError') {\n    return null;\n  }\n\n  if (group.__typename === 'PythonError') {\n    return (\n      <Group direction=\"row\" spacing={8} padding={8}>\n        <Icon name=\"warning\" color={Colors.Yellow500} />\n        <div style={{fontSize: '13px'}}>\n          The run group for this run could not be loaded.{' '}\n          <ButtonLink\n            color={Colors.Blue500}\n            underline=\"always\"\n            onClick={() => {\n              showCustomAlert({\n                title: 'Python error',\n                body: group.message,\n              });\n            }}\n          >\n            View error\n          </ButtonLink>\n        </div>\n      </Group>\n    );\n  }\n\n  if (group.runs?.length === 1) {\n    return null;\n  }\n\n  const unsorted: Run[] = [];\n  (group.runs || []).forEach((run: Run | null) => {\n    if (run && typeof run.startTime === 'number') {\n      unsorted.push(run);\n    }\n  });\n  const runs: Run[] = unsorted.sort((a: Run, b: Run) => {\n    return (a.startTime || 0) - (b.startTime || 0);\n  });\n\n  return (\n    <SidebarSection title={runs[0] ? `${runs[0].pipelineName} (${runs.length})` : ''}>\n      <>\n        {runs.map((g, idx) =>\n          g ? (\n            <RunGroupRun key={g.id} to={`/runs/${g.id}`} selected={g.id === runId}>\n              {idx < runs.length - 1 && <ThinLine style={{height: 36}} />}\n              <Box padding={{top: 4}}>\n                <RunStatusIndicator status={g.status} />\n              </Box>\n              <div\n                style={{\n                  flex: 1,\n                  marginLeft: 5,\n                  minWidth: 0,\n                  color: Colors.Gray700,\n                }}\n              >\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                  <RunTitle>\n                    {g.id.split('-')[0]}\n                    {idx === 0 && RootTag}\n                  </RunTitle>\n                  <RunTime run={g} />\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    color: Colors.Gray700,\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  {subsetTitleForRun(g)}\n                  <RunStateSummary run={g} />\n                </div>\n              </div>\n            </RunGroupRun>\n          ) : null,\n        )}\n      </>\n    </SidebarSection>\n  );\n};\n\nexport const RUN_GROUP_PANEL_QUERY = gql`\n  query RunGroupPanelQuery($runId: ID!) {\n    runGroupOrError(runId: $runId) {\n      ... on RunGroup {\n        rootRunId\n        runs {\n          id\n          ...RunGroupPanelRun\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment RunGroupPanelRun on Run {\n    id\n    parentRunId\n    status\n    stepKeysToExecute\n    pipelineName\n    tags {\n      key\n      value\n    }\n    ...RunTimeFragment\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${RUN_TIME_FRAGMENT}\n`;\n\nconst RunGroupRun = styled(Link)<{selected: boolean}>`\n  align-items: flex-start;\n  background: ${({selected}) => (selected ? Colors.Gray100 : Colors.White)};\n  padding: 4px 6px 4px 24px;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  line-height: 20px;\n  display: flex;\n  position: relative;\n  &:hover {\n    text-decoration: none;\n    background: ${({selected}) => (selected ? Colors.Gray100 : Colors.Gray50)};\n  }\n`;\n\nconst ThinLine = styled.div`\n  position: absolute;\n  top: 20px;\n  width: 1px;\n  background: ${Colors.Gray200};\n  left: 29px;\n  z-index: 2;\n`;\n\nconst RunTitle = styled.span`\n  color: ${Colors.Dark};\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  user-select: text;\n  flex: 1;\n`;\n\nconst RootTag = (\n  <span\n    style={{\n      borderRadius: 2,\n      fontSize: 12,\n      lineHeight: '14px',\n      background: Colors.Gray300,\n      color: Colors.White,\n      padding: '0 4px',\n      fontWeight: 400,\n      userSelect: 'none',\n      marginLeft: 12,\n    }}\n  >\n    ROOT\n  </span>\n);\n","import {Colors, Spinner, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {formatElapsedTime} from '../app/Util';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {IRunMetadataDict, IStepState} from '../runs/RunMetadataProvider';\nimport {StepSelection} from '../runs/StepSelection';\n\nimport {GanttChartMode} from './Constants';\nimport {isPlannedDynamicStep} from './DynamicStepSupport';\nimport {boxStyleFor} from './GanttChartLayout';\nimport {RunGroupPanel} from './RunGroupPanel';\n\ninterface GanttStatusPanelProps {\n  graph: GraphQueryItem[];\n  metadata: IRunMetadataDict;\n  selection: StepSelection;\n  runId: string;\n  nowMs: number;\n\n  onClickStep?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHighlightStep?: (step: string | null) => void;\n  onDoubleClickStep?: (step: string) => void;\n}\n\nexport const GanttStatusPanel: React.FC<GanttStatusPanelProps> = ({\n  runId,\n  nowMs,\n  graph,\n  metadata,\n  selection,\n  onClickStep,\n  onDoubleClickStep,\n  onHighlightStep,\n}) => {\n  const {preparing, executing, errored, succeeded, notExecuted} = React.useMemo(() => {\n    const keys = Object.keys(metadata.steps);\n    const preparing = [];\n    const executing = [];\n    const errored = [];\n    const succeeded = [];\n    const notExecuted = [];\n    for (const key of keys) {\n      const state = metadata.steps[key]!.state;\n      switch (state) {\n        case IStepState.PREPARING:\n          preparing.push(key);\n          break;\n        case IStepState.RUNNING:\n        case IStepState.UNKNOWN:\n          executing.push(key);\n          break;\n        case IStepState.FAILED:\n          errored.push(key);\n          break;\n        case IStepState.SUCCEEDED:\n          succeeded.push(key);\n          break;\n      }\n    }\n\n    for (const node of graph) {\n      const name = node.name;\n      // Leave out [?] steps since they don't receive event log entries or have states\n      if (!isPlannedDynamicStep(name) && !metadata.steps[name]?.state) {\n        notExecuted.push(name);\n      }\n    }\n    return {preparing, executing, errored, succeeded, notExecuted};\n  }, [metadata, graph]);\n\n  const renderStepItem = (stepName: string) => (\n    <StepItem\n      nowMs={nowMs}\n      name={stepName}\n      key={stepName}\n      metadata={metadata}\n      selected={selection.keys.includes(stepName)}\n      onClick={onClickStep}\n      onDoubleClick={onDoubleClickStep}\n      onHover={onHighlightStep}\n    />\n  );\n\n  return (\n    <div style={{overflowY: 'auto'}}>\n      <RunGroupPanel\n        runId={runId}\n        runStatusLastChangedAt={\n          metadata.exitedAt || metadata.startedProcessAt || metadata.startedPipelineAt || 0\n        }\n      />\n      <SidebarSection title={`Preparing (${preparing.length})`}>\n        <div>\n          {preparing.length === 0 ? (\n            <EmptyNotice>No steps are waiting to execute</EmptyNotice>\n          ) : (\n            preparing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Executing (${executing.length})`}>\n        <div>\n          {executing.length === 0 ? (\n            <EmptyNotice>No steps are executing</EmptyNotice>\n          ) : (\n            executing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Errored (${errored.length})`}>\n        <div>\n          {errored.length === 0 ? (\n            <EmptyNotice>No steps have errored</EmptyNotice>\n          ) : (\n            errored.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection collapsedByDefault title={`Succeeded (${succeeded.length})`}>\n        <div>\n          {succeeded.length === 0 ? (\n            <EmptyNotice>No steps have succeeded</EmptyNotice>\n          ) : (\n            succeeded.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      {notExecuted.length > 0 ? (\n        <SidebarSection collapsedByDefault title={`Not executed (${notExecuted.length})`}>\n          <div>{notExecuted.map(renderStepItem)}</div>\n        </SidebarSection>\n      ) : null}\n    </div>\n  );\n};\n\nconst StepItem: React.FC<{\n  name: string;\n  selected: boolean;\n  metadata: IRunMetadataDict;\n  nowMs: number;\n  onClick?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHover?: (name: string | null) => void;\n  onDoubleClick?: (name: string) => void;\n}> = ({nowMs, name, selected, metadata, onClick, onHover, onDoubleClick}) => {\n  const step = metadata.steps[name];\n  const end = (step && step.end) ?? nowMs;\n  return (\n    <StepItemContainer\n      key={name}\n      selected={selected}\n      onClick={(evt: React.MouseEvent<any>) => onClick?.(name, evt)}\n      onDoubleClick={() => onDoubleClick?.(name)}\n      onMouseEnter={() => onHover?.(name)}\n      onMouseLeave={() => onHover?.(null)}\n    >\n      {step?.state === IStepState.RUNNING ? (\n        <Spinner purpose=\"body-text\" />\n      ) : step?.state === IStepState.UNKNOWN ? (\n        <Tooltip\n          // Modifiers are to prevent flickering: https://github.com/palantir/blueprint/issues/4019\n          modifiers={{\n            preventOverflow: {enabled: false},\n            flip: {enabled: false},\n          }}\n          position=\"bottom\"\n          content=\"Unknown step state. Run completed without step execution completion.\"\n        >\n          <StepStatusDot>?</StepStatusDot>\n        </Tooltip>\n      ) : (\n        <StepStatusDot\n          style={{\n            ...boxStyleFor(step?.state, {\n              metadata,\n              options: {mode: GanttChartMode.WATERFALL_TIMED},\n            }),\n          }}\n        />\n      )}\n      <StepLabel>{name}</StepLabel>\n      {step?.start && <Elapsed>{formatElapsedTime(end - step.start)}</Elapsed>}\n    </StepItemContainer>\n  );\n};\n\nconst StepLabel = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex: 1;\n`;\n\nconst StepItemContainer = styled.div<{selected: boolean}>`\n  display: flex;\n  line-height: 32px;\n  height: 32px;\n  padding: 0 14px 0 6px;\n  gap: 6px;\n  align-items: center;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  font-size: 12px;\n  ${({selected}) => selected && `background: ${Colors.Gray100};`}\n\n  &:hover {\n    background: ${Colors.Gray100};\n  }\n`;\n\nexport const StepStatusDot = styled.div`\n  width: 12px;\n  height: 12px;\n  flex-shrink: 0;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 12px;\n`;\n\nconst Elapsed = styled.div`\n  color: ${Colors.Gray400};\n  font-variant-numeric: tabular-nums;\n`;\n\nconst EmptyNotice = styled.div`\n  min-height: 32px;\n  font-size: 12px;\n  padding: 8px 24px;\n  color: ${Colors.Gray400};\n`;\n","import {Colors, CursorControlsContainer} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nexport const OptionsContainer = styled.div`\n  min-height: 56px;\n  display: flex;\n  align-items: center;\n  padding: 5px 12px 5px 24px;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  background: ${Colors.White};\n  flex-shrink: 0;\n  flex-wrap: wrap;\n  z-index: 3;\n\n  ${CursorControlsContainer} {\n    margin-top: 0;\n    gap: 8px;\n\n    @media (max-width: 1100px) {\n      & .hideable-button-text {\n        display: none;\n      }\n      & div[role='img'] {\n        margin: 0;\n      }\n    }\n  }\n`;\n\nexport const OptionsDivider = styled.div`\n  width: 30px;\n  height: 25px;\n`;\n\nexport const OptionsSpacer = styled.div`\n  width: 30px;\n`;\n","import {gql} from '@apollo/client';\n\nimport {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {StepKind} from '../graphql/types';\nimport {IStepMetadata, IStepState} from '../runs/RunMetadataProvider';\n\nimport {invocationsOfPlannedDynamicStep, replacePlannedIndex} from './DynamicStepSupport';\nimport {ExecutionPlanToGraphFragment} from './types/toGraphQueryItems.types';\n\n/**\n * Converts a Run execution plan into a tree of `GraphQueryItem` items that\n * can be used as the input to the \"solid query\" filtering algorithm or rendered\n * into the Gannt visualization or the SVG DAG visualization. The idea\n * is that this data structure is generic, but it's really a fake solid tree.\n *\n * Pass runtimeStepKeys to duplicate dynamic step sub-trees for each occurrence of\n * the step key found at runtime.\n */\n\nexport const toGraphQueryItems = (\n  plan: ExecutionPlanToGraphFragment,\n  runtimeStepMetadata: {[key: string]: IStepMetadata},\n) => {\n  // Step 1: Find unresolved steps in the initial plan and build a mapping\n  // of their unresolved names to their resolved step keys, eg:\n  // \"multiply_input[*]\" => [\"multiply_input[1]\", \"multiply_input[2]\"]\n  const keyExpansionMap: {[key: string]: string[]} = {};\n  const runtimeStepKeys = Object.keys(runtimeStepMetadata);\n\n  for (const step of plan.steps) {\n    if (step.kind === StepKind.UNRESOLVED_MAPPED) {\n      const keys = invocationsOfPlannedDynamicStep(step.key, runtimeStepKeys);\n\n      // If the upstream steps have NOT succeeded, it's expected that there are zero runtime step keys\n      // matching the dynamic step. Until upstream steps run, we should show the [*] placeholder item\n      // in the runtime graph (rather than just showing nothing.)\n      const invocationsHappened = step.inputs.every((i) =>\n        i.dependsOn.every((s) => IStepState.SUCCEEDED === runtimeStepMetadata[s.key]?.state),\n      );\n      if (!invocationsHappened && keys.length === 0) {\n        keyExpansionMap[step.key] = [step.key];\n        continue;\n      }\n      // The order matters here: add the planned dynamic step at the end, so when displaying the gantt\n      // chart, we can ignore planned dynamic step if any of its invocation exists (i.e. hide the\n      // unresolved node if any resolved node exists).\n      keyExpansionMap[step.key] = [...keys, step.key];\n    }\n  }\n\n  // Step 2: Create a graph node for each resolved step without any inputs or outputs.\n  const nodeTable: {[key: string]: GraphQueryItem} = {};\n  for (const step of plan.steps) {\n    const stepRuntimeKeys = keyExpansionMap[step.key] || [step.key];\n    for (const key of stepRuntimeKeys) {\n      nodeTable[key] = {\n        name: key,\n        inputs: [],\n        outputs: [],\n      };\n    }\n  }\n\n  // Step 3: For each step in the original plan, visit each input and create inputs/outputs\n  // in our Gantt Node result set.\n  for (const step of plan.steps) {\n    const stepRuntimeKeys = keyExpansionMap[step.key] || [step.key];\n    for (const key of stepRuntimeKeys) {\n      for (const input of step.inputs) {\n        // Add the input to our node in the result set\n        const nodeInput: GraphQueryItem['inputs'][0] = {dependsOn: []};\n        nodeTable[key]!.inputs.push(nodeInput);\n\n        // For each upstream step in the plan, map it to upstream nodes in the runtime graph\n        // and attach inputs / outputs to our result graph.\n        for (const upstream of input.dependsOn) {\n          let upstreamKeys = [];\n          if (step.kind === StepKind.UNRESOLVED_COLLECT) {\n            // If we are a collect, there may be N runtime keys fanning in to this input,\n            // fetch the keys if they exist or fall back to the sigle upstream step case.\n            upstreamKeys = keyExpansionMap[upstream.key] || [upstream.key];\n          } else {\n            // If the input was coming from an unresolved mapped step and WE are not a collector,\n            // assume our own dynamic key index applies to the upstream mapped step as well.\n            upstreamKeys = [\n              upstream.kind === StepKind.UNRESOLVED_MAPPED\n                ? replacePlannedIndex(upstream.key, key)\n                : upstream.key,\n            ];\n          }\n\n          for (const upstreamKey of upstreamKeys) {\n            if (!nodeTable[upstreamKey]) {\n              continue;\n            }\n            nodeInput.dependsOn.push({solid: {name: upstreamKey}});\n            let upstreamOutput: GraphQueryItem['outputs'][0] = nodeTable[upstreamKey]!.outputs[0]!;\n            if (!upstreamOutput) {\n              upstreamOutput = {dependedBy: []};\n              nodeTable[upstreamKey]!.outputs.push(upstreamOutput);\n            }\n            upstreamOutput.dependedBy.push({\n              solid: {name: key},\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return Object.values(nodeTable);\n};\n\nexport const EXECUTION_PLAN_TO_GRAPH_FRAGMENT = gql`\n  fragment ExecutionPlanToGraphFragment on ExecutionPlan {\n    steps {\n      key\n      kind\n      inputs {\n        dependsOn {\n          key\n          kind\n        }\n      }\n    }\n  }\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {Collapse} from '@blueprintjs/core';\nimport {Colors, Icon, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\ninterface ISidebarSectionProps {\n  children: React.ReactNode;\n  title: string;\n  collapsedByDefault?: boolean;\n}\n\nexport const SidebarSection: React.FC<ISidebarSectionProps> = (props) => {\n  const {title, collapsedByDefault, children} = props;\n  const [open, setOpen] = useStateWithStorage<boolean>(`sidebar-${title}`, (storedValue) =>\n    storedValue === true || storedValue === false ? storedValue : !collapsedByDefault,\n  );\n\n  const onToggle = React.useCallback(() => {\n    setOpen((o) => !o);\n  }, [setOpen]);\n\n  return (\n    <>\n      <CollapsingHeaderBar onClick={onToggle}>\n        <SidebarTitleTextWrap>{title}</SidebarTitleTextWrap>\n        <Icon\n          size={24}\n          name=\"arrow_drop_down\"\n          style={{transform: open ? 'rotate(0)' : 'rotate(-90deg)'}}\n        />\n      </CollapsingHeaderBar>\n      <Collapse isOpen={open}>\n        <div>{children}</div>\n      </Collapse>\n    </>\n  );\n};\n\nconst SidebarTitleTextWrap = styled.div`\n  overflow: hidden;\n  min-width: 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const SidebarTitle = styled.h3`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  margin: 0 0 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :first-child:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const SectionHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  margin: 2px 0 0 0;\n`;\n\nexport const SectionSmallHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  margin: 2px 0;\n`;\n\nexport const SidebarSubhead = styled.div`\n  color: ${Colors.Gray400};\n  font-size: 0.7rem;\n`;\n\nexport const SectionItemContainer = styled.div`\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  margin-bottom: 12px;\n  padding-bottom: 12px;\n  font-size: 0.8rem;\n  &:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n`;\n\nconst CollapsingHeaderBar = styled.div`\n  height: 32px;\n  padding-left: 24px;\n  padding-right: 8px;\n  background: ${Colors.White};\n  border-top: 1px solid ${Colors.KeylineGray};\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  color: ${Colors.Gray900};\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 700;\n  user-select: none;\n`;\n","export enum LogLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARNING = 'WARNING',\n  ERROR = 'ERROR',\n  CRITICAL = 'CRITICAL',\n  EVENT = 'EVENT', // structured events\n}\n\nexport const DefaultLogLevels = ['INFO', 'WARNING', 'ERROR', 'CRITICAL', 'EVENT'];\n","import {Colors, FontFamily, MetadataTable, Tooltip} from '@dagster-io/ui';\nimport memoize from 'lodash/memoize';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTimeWithMsec} from '../app/Util';\nimport {TimeContext} from '../app/time/TimeContext';\nimport {browserTimezone} from '../app/time/browserTimezone';\n\nimport {LogLevel} from './LogLevel';\nimport {ColumnWidthsContext} from './LogsScrollingTableHeader';\n\nconst bgcolorForLevel = (level: LogLevel) =>\n  ({\n    [LogLevel.DEBUG]: Colors.White,\n    [LogLevel.INFO]: Colors.White,\n    [LogLevel.EVENT]: Colors.White,\n    [LogLevel.WARNING]: Colors.Yellow50,\n    [LogLevel.ERROR]: Colors.Red50,\n    [LogLevel.CRITICAL]: Colors.Red50,\n  }[level]);\n\nexport const Row = styled.div<{level: LogLevel; highlighted: boolean}>`\n  font-size: 0.9em;\n  width: 100%;\n  height: 100%;\n  max-height: 17em;\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  overflow: hidden;\n  border-top: 1px solid ${Colors.KeylineGray};\n  background: ${({highlighted, level}) => (highlighted ? '#ffe39f' : bgcolorForLevel(level))};\n  &:hover {\n    background: ${({highlighted}) => (highlighted ? '#ffe39f' : 'white')};\n  }\n  color: ${(props) =>\n    ({\n      [LogLevel.DEBUG]: Colors.Gray400,\n      [LogLevel.INFO]: Colors.Gray900,\n      [LogLevel.EVENT]: Colors.Gray900,\n      [LogLevel.WARNING]: Colors.Yellow700,\n      [LogLevel.ERROR]: Colors.Red500,\n      [LogLevel.CRITICAL]: Colors.Red500,\n    }[props.level])};\n`;\n\nexport const StructuredContent = styled.div`\n  background: rgba(255, 255, 255, 0.5);\n  color: ${Colors.Gray900};\n  box-sizing: border-box;\n  border-left: 1px solid ${Colors.KeylineGray};\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  flex: 1;\n  align-self: stretch;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n`;\n\n// Step Key Column\n//\n// Renders the left column with the step key broken into hierarchical components.\n// Manually implements middle text truncation since we can count on monospace font\n// rendering being fairly consistent.\n//\nexport const OpColumn = (props: {stepKey: string | false | null}) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  const parts = String(props.stepKey).split('.');\n  return (\n    <OpColumnContainer style={{width: widths.solid}}>\n      {props.stepKey\n        ? parts.map((p, idx) => (\n            <div\n              key={idx}\n              data-tooltip={p}\n              data-tooltip-style={OpColumnTooltipStyle}\n              style={{\n                marginLeft: Math.max(0, idx * 15 - 9),\n                fontWeight: idx === parts.length - 1 ? 600 : 300,\n              }}\n            >\n              {idx > 0 ? '↳' : ''}\n              {p.length > 30 - idx * 2\n                ? `${p.substr(0, 16 - idx * 2)}…${p.substr(p.length - 14)}`\n                : p}\n            </div>\n          ))\n        : '-'}\n    </OpColumnContainer>\n  );\n};\n\nexport const OpColumnContainer = styled.div`\n  width: 250px;\n  flex-shrink: 0;\n  padding: 4px 12px;\n`;\n\nconst OpColumnTooltipStyle = JSON.stringify({\n  fontSize: '0.9em',\n  fontFamily: FontFamily.monospace,\n  color: Colors.Dark,\n  background: Colors.White,\n  border: `1px solid ${Colors.Gray100}`,\n  top: -8,\n  left: 1,\n});\n\nconst timestampFormat = memoize((timezone: string) => {\n  return new Intl.DateTimeFormat(navigator.language, {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n    timeZone: timezone === 'Automatic' ? browserTimezone() : timezone,\n  });\n});\n\nconst fractionalSecondFormat = memoize((locale: string) => {\n  return new Intl.NumberFormat(locale, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  });\n});\n\n// Timestamp Column\n\nexport const TimestampColumn: React.FC<{\n  time: string | null;\n  runStartTime?: number;\n  stepStartTime?: number;\n}> = React.memo((props) => {\n  const {time, runStartTime, stepStartTime} = props;\n  const location = useLocation();\n  const widths = React.useContext(ColumnWidthsContext);\n  const {\n    timezone: [timezone],\n  } = React.useContext(TimeContext);\n  const canShowTooltip = typeof time === 'string' && typeof runStartTime === 'number';\n\n  const timeString = () => {\n    if (time) {\n      const timeNumber = Number(time);\n      const main = timestampFormat(timezone).format(new Date(timeNumber));\n      const fractionalSec = (timeNumber % 1000) / 1000;\n      return `${main}${fractionalSecondFormat(navigator.language).format(fractionalSec).slice(1)}`;\n    }\n    return '';\n  };\n\n  const href = `${location.pathname}?${qs.stringify({focusedTime: props.time})}`;\n  const runElapsedTime = formatElapsedTimeWithMsec(Number(time) - (runStartTime || 0));\n  const stepElapsedTime = formatElapsedTimeWithMsec(Number(time) - (stepStartTime || 0));\n\n  return (\n    <TimestampColumnContainer style={{width: widths.timestamp}}>\n      <Tooltip\n        canShow={canShowTooltip}\n        content={\n          <MetadataTable\n            spacing={0}\n            dark\n            rows={[\n              {\n                key: 'Since start of run',\n                value: (\n                  <span style={{fontFamily: FontFamily.monospace, fontSize: '13px'}}>\n                    {runElapsedTime}\n                  </span>\n                ),\n              },\n              stepStartTime\n                ? {\n                    key: 'Since start of step',\n                    value: (\n                      <span style={{fontFamily: FontFamily.monospace, fontSize: '13px'}}>\n                        {stepElapsedTime}\n                      </span>\n                    ),\n                  }\n                : null,\n            ]}\n          />\n        }\n        placement=\"left\"\n      >\n        <Link to={href}>{timeString()}</Link>\n      </Tooltip>\n    </TimestampColumnContainer>\n  );\n});\n\nconst TimestampColumnContainer = styled.div`\n  flex-shrink: 0;\n  padding: 4px 4px 4px 12px;\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${Colors.Gray400};\n  }\n\n  a:hover,\n  a:active {\n    text-decoration: underline;\n  }\n`;\n\nexport const EventTypeColumn = (props: {children: React.ReactNode}) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  return (\n    <EventTypeColumnContainer style={{width: widths.eventType}}>\n      {props.children}\n    </EventTypeColumnContainer>\n  );\n};\n\nconst EventTypeColumnContainer = styled.div`\n  flex-shrink: 0;\n  color: ${Colors.Gray400};\n  padding: 4px;\n`;\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\n\nconst OverflowFade = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n  user-select: none;\n  pointer-events: none;\n  background: linear-gradient(to bottom, rgba(245, 248, 250, 0) 0%, rgba(245, 248, 250, 255) 100%);\n`;\n\nconst OverflowButtonContainer = styled.div`\n  position: absolute;\n  bottom: 6px;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst OverflowButton = styled.button`\n  border: 0;\n  cursor: pointer;\n  user-select: none;\n  font-size: 12px;\n  font-weight: 500;\n  background: rgba(100, 100, 100, 0.7);\n  border-radius: 4px;\n  line-height: 32px;\n  padding: 0 12px;\n  color: ${Colors.White};\n  &:hover {\n    background: rgba(100, 100, 100, 0.85);\n  }\n\n  &:focus,\n  &:active {\n    outline: none;\n  }\n\n  &:active {\n    background: rgba(0, 0, 0, 0.7);\n  }\n`;\n\nexport class CellTruncationProvider extends React.Component<\n  {\n    children: React.ReactNode;\n    style: React.CSSProperties;\n    onExpand?: () => void;\n    forceExpandability?: boolean;\n  },\n  {isOverflowing: boolean}\n> {\n  state = {\n    isOverflowing: false,\n  };\n\n  private contentContainerRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  componentDidMount() {\n    this.detectOverflow();\n  }\n\n  componentDidUpdate() {\n    this.detectOverflow();\n  }\n\n  detectOverflow() {\n    const child =\n      this.contentContainerRef.current && this.contentContainerRef.current.firstElementChild;\n\n    if (!child) {\n      return;\n    }\n\n    const isOverflowing =\n      typeof this.props.style.height === 'number' && child.scrollHeight > this.props.style.height;\n    if (isOverflowing !== this.state.isOverflowing) {\n      this.setState({isOverflowing});\n    }\n  }\n\n  defaultExpand() {\n    const message =\n      this.contentContainerRef.current && this.contentContainerRef.current.textContent;\n    message &&\n      showCustomAlert({\n        body: <div style={{whiteSpace: 'pre-wrap'}}>{message}</div>,\n      });\n  }\n\n  onView = () => {\n    const {onExpand} = this.props;\n    onExpand ? onExpand() : this.defaultExpand();\n  };\n\n  render() {\n    const style = {...this.props.style, overflow: 'hidden'};\n\n    return (\n      <div style={style}>\n        <div ref={this.contentContainerRef}>{this.props.children}</div>\n        {(this.state.isOverflowing || this.props.forceExpandability) && (\n          <>\n            <OverflowFade />\n            <OverflowButtonContainer>\n              <OverflowButton onClick={this.onView}>View full message</OverflowButton>\n            </OverflowButtonContainer>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {Intent} from '@blueprintjs/core';\nimport {Box, Colors, Tag} from '@dagster-io/ui';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\n\nimport {assertUnreachable} from '../app/Util';\nimport {PythonErrorFragment} from '../app/types/PythonErrorFragment.types';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {AssetKey} from '../assets/types';\nimport {ErrorSource, DagsterEventType} from '../graphql/types';\nimport {\n  LogRowStructuredContentTable,\n  MetadataEntries,\n  MetadataEntryLink,\n} from '../metadata/MetadataEntry';\nimport {MetadataEntryFragment} from '../metadata/types/MetadataEntry.types';\n\nimport {EventTypeColumn} from './LogsRowComponents';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {eventTypeToDisplayType} from './getRunFilterProviders';\nimport {LogsRowStructuredFragment} from './types/LogsRow.types';\n\ninterface IStructuredContentProps {\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n}\n\nexport const LogsRowStructuredContent: React.FC<IStructuredContentProps> = ({node, metadata}) => {\n  const location = useLocation();\n  const eventType = node.eventType as string;\n  switch (node.__typename) {\n    case 'ExecutionStepFailureEvent':\n      return (\n        <FailureContent\n          eventType={eventType}\n          error={node.error}\n          metadataEntries={node?.failureMetadata?.metadataEntries}\n          errorSource={node.errorSource}\n          message={node.error ? undefined : node.message}\n        />\n      );\n\n    case 'ExecutionStepUpForRetryEvent':\n      return <StepUpForRetryContent error={node.error} message={node.message} />;\n\n    case 'ExecutionStepStartEvent':\n      if (!node.stepKey || metadata.logCaptureSteps) {\n        return <DefaultContent message={node.message} eventType={eventType} />;\n      } else {\n        const currentQuery = qs.parse(location.search);\n        const updatedQuery = {\n          ...currentQuery,\n          logType: 'stdout',\n          logs: `query:${node.stepKey}`,\n          selection: node.stepKey,\n        };\n        const href = `${location.pathname}?${qs.stringify(updatedQuery)}`;\n        return (\n          <DefaultContent message={node.message} eventType={eventType}>\n            <LogRowStructuredContentTable\n              rows={[\n                {\n                  label: 'step_logs',\n                  item: (\n                    <Link to={href} style={{color: 'inherit'}}>\n                      View Raw Step Output\n                    </Link>\n                  ),\n                },\n              ]}\n            />\n          </DefaultContent>\n        );\n      }\n    case 'ExecutionStepSkippedEvent':\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventColor=\"rgba(173, 185, 152, 0.3)\"\n        />\n      );\n\n    case 'ExecutionStepRestartEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n\n    case 'ExecutionStepSuccessEvent':\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"success\" />;\n    case 'ExecutionStepInputEvent':\n      return (\n        <DefaultContent\n          message={\n            node.message + (node.typeCheck.description ? ' ' + node.typeCheck.description : '')\n          }\n          eventType={eventType}\n          eventIntent={node.typeCheck.success ? 'success' : 'warning'}\n        >\n          <MetadataEntries entries={node.typeCheck.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'ExecutionStepOutputEvent':\n      return (\n        <DefaultContent\n          message={\n            node.message + (node.typeCheck.description ? ' ' + node.typeCheck.description : '')\n          }\n          eventType={eventType}\n          eventIntent={node.typeCheck.success ? 'success' : 'warning'}\n        >\n          <>\n            <MetadataEntries entries={node.typeCheck.metadataEntries} />\n            <MetadataEntries entries={node.metadataEntries} />\n          </>\n        </DefaultContent>\n      );\n    case 'StepExpectationResultEvent':\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventIntent={node.expectationResult.success ? 'success' : 'warning'}\n        >\n          <MetadataEntries entries={node.expectationResult.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'MaterializationEvent':\n      return (\n        <AssetMetadataContent\n          message={node.message}\n          assetKey={node.assetKey}\n          metadataEntries={node.metadataEntries}\n          eventType={eventType}\n          timestamp={node.timestamp}\n        />\n      );\n    case 'ObservationEvent':\n      return (\n        <AssetMetadataContent\n          message=\"\"\n          assetKey={node.assetKey}\n          metadataEntries={node.metadataEntries}\n          eventType={eventType}\n          timestamp={node.timestamp}\n        />\n      );\n    case 'AssetMaterializationPlannedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'ObjectStoreOperationEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.operationResult.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'HandledOutputEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'LoadedInputEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'HookCompletedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'HookSkippedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'HookErroredEvent':\n      return <FailureContent eventType={eventType} error={node.error} />;\n    case 'AlertStartEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'AlertSuccessEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'AlertFailureEvent':\n      return <DefaultContent eventType={eventType} message={node.message} eventIntent=\"warning\" />;\n    case 'ResourceInitFailureEvent':\n    case 'RunFailureEvent':\n      if (node.error) {\n        return <FailureContent message={node.message} error={node.error} eventType={eventType} />;\n      }\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"danger\" />;\n    case 'RunSuccessEvent':\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"success\" />;\n    case 'RunStartEvent':\n    case 'RunEnqueuedEvent':\n    case 'RunDequeuedEvent':\n    case 'RunStartingEvent':\n    case 'RunCancelingEvent':\n    case 'ResourceInitStartedEvent':\n    case 'ResourceInitSuccessEvent':\n    case 'StepWorkerStartedEvent':\n    case 'StepWorkerStartingEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n    case 'RunCanceledEvent':\n      return <FailureContent message={node.message} eventType={eventType} />;\n    case 'EngineEvent':\n      if (node.error) {\n        return <FailureContent message={node.message} error={node.error} eventType={eventType} />;\n      }\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventColor=\"rgba(27,164,206,0.2)\"\n        >\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'LogMessageEvent':\n      return <DefaultContent message={node.message} />;\n    case 'LogsCapturedEvent':\n      const currentQuery = qs.parse(location.search, {ignoreQueryPrefix: true});\n      const updatedQuery = {...currentQuery, logType: 'stdout', logFileKey: node.stepKey};\n      const rawLogsUrl = `${location.pathname}?${qs.stringify(updatedQuery)}`;\n      const rawLogsLink = (\n        <Link to={rawLogsUrl} style={{color: 'inherit'}}>\n          View stdout / stderr\n        </Link>\n      );\n      const rows = node.stepKey\n        ? [\n            {\n              label: 'captured_logs',\n              item: rawLogsLink,\n            },\n          ]\n        : [\n            {\n              label: 'step_keys',\n              item: <>{JSON.stringify(node.stepKeys)}</>,\n            },\n            {\n              label: 'captured_logs',\n              item: rawLogsLink,\n            },\n          ];\n      return (\n        <DefaultContent eventType={eventType} message={node.message}>\n          <LogRowStructuredContentTable rows={rows} />\n        </DefaultContent>\n      );\n    default:\n      // This allows us to check that the switch is exhaustive because the union type should\n      // have been narrowed following each successive case to `never` at this point.\n      return assertUnreachable(node);\n  }\n};\n\n// Structured Content Renderers\n\nconst DefaultContent: React.FC<{\n  message: string;\n  eventType?: string;\n  eventColor?: string;\n  eventIntent?: Intent;\n  metadataEntries?: MetadataEntryFragment[];\n  children?: React.ReactElement;\n}> = ({message, eventType, eventColor, eventIntent, children}) => {\n  return (\n    <>\n      <EventTypeColumn>\n        {eventType && (\n          <Tag\n            intent={eventIntent}\n            style={\n              eventColor\n                ? {\n                    fontSize: '0.9em',\n                    color: 'black',\n                    background: eventColor,\n                  }\n                : {\n                    fontSize: '0.9em',\n                  }\n            }\n          >\n            {eventTypeToDisplayType(eventType)}\n          </Tag>\n        )}\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {message}\n        {children}\n      </Box>\n    </>\n  );\n};\n\nconst FailureContent: React.FC<{\n  message?: string;\n  eventType: string;\n  error?: PythonErrorFragment | null;\n  errorSource?: ErrorSource | null;\n  metadataEntries?: MetadataEntryFragment[];\n}> = ({message, error, errorSource, eventType, metadataEntries}) => {\n  let contextMessage = null;\n  let errorMessage = null;\n  let errorStack = null;\n  let errorCause = null;\n\n  if (message) {\n    contextMessage = (\n      <>\n        <span>{message}</span>\n        <br />\n      </>\n    );\n  }\n\n  if (error) {\n    errorMessage = <span style={{color: Colors.Red500}}>{`${error.message}`}</span>;\n\n    // omit the outer stack for user code errors with a cause\n    // as the outer stack is just framework code\n    if (\n      error.stack.length &&\n      !(errorSource === ErrorSource.USER_CODE_ERROR && error.errorChain.length)\n    ) {\n      errorStack = <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${error.stack}`}</span>;\n    }\n\n    if (error.errorChain.length) {\n      errorCause = error.errorChain.map((chainLink, index) => (\n        <React.Fragment key={index}>\n          {chainLink.isExplicitLink\n            ? `The above exception was caused by the following exception:\\n`\n            : `The above exception occurred during handling of the following exception:\\n`}\n          <span style={{color: Colors.Red500}}>{`${chainLink.error.message}`}</span>\n          {chainLink.error.stack.length ? (\n            <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${chainLink.error.stack}`}</span>\n          ) : null}\n        </React.Fragment>\n      ));\n    }\n  }\n\n  return (\n    <>\n      <EventTypeColumn>\n        <Tag minimal intent=\"danger\">\n          {eventTypeToDisplayType(eventType)}\n        </Tag>\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {contextMessage}\n        {errorMessage}\n        <MetadataEntries entries={metadataEntries} />\n        {errorStack}\n        {errorCause}\n      </Box>\n    </>\n  );\n};\n\nconst StepUpForRetryContent: React.FC<{\n  message?: string;\n  error?: PythonErrorFragment | null;\n}> = ({message, error}) => {\n  let contextMessage = null;\n  let errorCause = null;\n  let errorMessage = null;\n  let errorStack = null;\n\n  if (message) {\n    contextMessage = (\n      <>\n        <span>{message}</span>\n        <br />\n      </>\n    );\n  }\n\n  if (error) {\n    // If no cause, this was a `raise RetryRequest` inside the op. Show the trace for the main error.\n    if (!error.errorChain.length) {\n      errorMessage = <span style={{color: Colors.Red500}}>{`${error.message}`}</span>;\n      errorStack = <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${error.stack}`}</span>;\n    } else {\n      // If there is a cause, this was a different exception. Show that instead.\n      errorCause = (\n        <>\n          {error.errorChain.map((chainLink, index) => (\n            <React.Fragment key={index}>\n              {index === 0\n                ? `The retry request was caused by the following exception:\\n`\n                : `The above exception was caused by the following exception:\\n`}\n              <span style={{color: Colors.Red500}}>{`${chainLink.error.message}`}</span>\n              <span\n                style={{color: Colors.Red500}}\n              >{`\\nStack Trace:\\n${chainLink.error.stack}`}</span>\n            </React.Fragment>\n          ))}\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <EventTypeColumn>\n        <Tag minimal intent=\"warning\">\n          {eventTypeToDisplayType(DagsterEventType.STEP_UP_FOR_RETRY)}\n        </Tag>\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {contextMessage}\n        {errorMessage}\n        {errorStack}\n        {errorCause}\n      </Box>\n    </>\n  );\n};\n\nconst AssetMetadataContent: React.FC<{\n  message: string;\n  assetKey: AssetKey | null;\n  metadataEntries: MetadataEntryFragment[];\n  eventType: string;\n  timestamp: string;\n}> = ({message, assetKey, metadataEntries, eventType, timestamp}) => {\n  if (!assetKey) {\n    return (\n      <DefaultContent message={message} eventType={eventType}>\n        <MetadataEntries entries={metadataEntries} />\n      </DefaultContent>\n    );\n  }\n\n  const to = assetDetailsPathForKey(assetKey, {asOf: timestamp});\n\n  const assetDashboardLink = (\n    <span style={{marginLeft: 10}}>\n      [<MetadataEntryLink to={to}>View Asset</MetadataEntryLink>]\n    </span>\n  );\n\n  return (\n    <DefaultContent message={message} eventType={eventType}>\n      <>\n        <LogRowStructuredContentTable\n          styles={metadataEntries?.length ? {paddingBottom: 0} : {}}\n          rows={[\n            {\n              label: 'asset_key',\n              item: (\n                <>\n                  {displayNameForAssetKey(assetKey)}\n                  {assetDashboardLink}\n                </>\n              ),\n            },\n          ]}\n        />\n        <MetadataEntries entries={metadataEntries} />\n      </>\n    </DefaultContent>\n  );\n};\n","import {gql} from '@apollo/client';\nimport {Box} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {setHighlightedGanttChartTime} from '../gantt/GanttChart';\nimport {LogLevel} from '../graphql/types';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\n\nimport {CellTruncationProvider} from './CellTruncationProvider';\nimport {\n  EventTypeColumn,\n  Row,\n  OpColumn,\n  StructuredContent,\n  TimestampColumn,\n} from './LogsRowComponents';\nimport {LogsRowStructuredContent} from './LogsRowStructuredContent';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {LogsRowStructuredFragment, LogsRowUnstructuredFragment} from './types/LogsRow.types';\n\ninterface StructuredProps {\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n  style: React.CSSProperties;\n  highlighted: boolean;\n}\n\ninterface StructuredState {\n  expanded: boolean;\n}\n\nexport class Structured extends React.Component<StructuredProps, StructuredState> {\n  onExpand = () => {\n    const {node, metadata} = this.props;\n\n    if (node.__typename === 'ExecutionStepFailureEvent') {\n      showCustomAlert({\n        title: 'Error',\n        body: (\n          <PythonErrorInfo\n            error={node.error ? node.error : node}\n            failureMetadata={node.failureMetadata}\n            errorSource={node.errorSource}\n          />\n        ),\n      });\n    } else if (node.__typename === 'ExecutionStepUpForRetryEvent') {\n      showCustomAlert({\n        title: 'Step Retry',\n        body: <PythonErrorInfo error={node.error ? node.error : node} />,\n      });\n    } else if (\n      (node.__typename === 'EngineEvent' && node.error) ||\n      (node.__typename === 'RunFailureEvent' && node.error) ||\n      node.__typename === 'HookErroredEvent' ||\n      node.__typename === 'ResourceInitFailureEvent'\n    ) {\n      showCustomAlert({\n        title: 'Error',\n        body: <PythonErrorInfo error={node.error ? node.error : node} />,\n      });\n    } else {\n      showCustomAlert({\n        title: node.stepKey || 'Info',\n        body: (\n          <StructuredContent>\n            <LogsRowStructuredContent node={node} metadata={metadata} />\n          </StructuredContent>\n        ),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CellTruncationProvider style={this.props.style} onExpand={this.onExpand}>\n        <StructuredMemoizedContent\n          node={this.props.node}\n          metadata={this.props.metadata}\n          highlighted={this.props.highlighted}\n        />\n      </CellTruncationProvider>\n    );\n  }\n}\n\nexport const LOGS_ROW_STRUCTURED_FRAGMENT = gql`\n  fragment LogsRowStructuredFragment on DagsterRunEvent {\n    ... on MessageEvent {\n      message\n      eventType\n      timestamp\n      level\n      stepKey\n    }\n    ... on DisplayableEvent {\n      label\n      description\n      metadataEntries {\n        ...MetadataEntryFragment\n      }\n    }\n    ... on MarkerEvent {\n      markerStart\n      markerEnd\n    }\n    ... on ErrorEvent {\n      error {\n        ...PythonErrorFragment\n      }\n    }\n    ... on MaterializationEvent {\n      assetKey {\n        path\n      }\n    }\n    ... on ObservationEvent {\n      assetKey {\n        path\n      }\n    }\n    ... on ExecutionStepFailureEvent {\n      errorSource\n      failureMetadata {\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ExecutionStepInputEvent {\n      inputName\n      typeCheck {\n        label\n        description\n        success\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ExecutionStepOutputEvent {\n      outputName\n      typeCheck {\n        label\n        description\n        success\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on StepExpectationResultEvent {\n      expectationResult {\n        success\n        label\n        description\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ObjectStoreOperationEvent {\n      operationResult {\n        op\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on HandledOutputEvent {\n      outputName\n      managerKey\n    }\n    ... on LoadedInputEvent {\n      inputName\n      managerKey\n      upstreamOutputName\n      upstreamStepKey\n    }\n    ... on LogsCapturedEvent {\n      fileKey\n      stepKeys\n      externalUrl\n      externalStdoutUrl\n      externalStderrUrl\n    }\n  }\n\n  ${METADATA_ENTRY_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst StructuredMemoizedContent: React.FC<{\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n  highlighted: boolean;\n}> = React.memo(({node, metadata, highlighted}) => {\n  const stepKey = node.stepKey;\n  const step = stepKey ? metadata.steps[stepKey] : null;\n  const stepStartTime = step?.start;\n\n  return (\n    <Row\n      level={LogLevel.INFO}\n      onMouseEnter={() => setHighlightedGanttChartTime(node.timestamp)}\n      onMouseLeave={() => setHighlightedGanttChartTime(null)}\n      highlighted={highlighted}\n    >\n      <TimestampColumn\n        time={'timestamp' in node ? node.timestamp : null}\n        runStartTime={metadata.startedPipelineAt}\n        stepStartTime={stepStartTime}\n      />\n      <OpColumn stepKey={'stepKey' in node && node.stepKey} />\n      <StructuredContent>\n        <LogsRowStructuredContent node={node} metadata={metadata} />\n      </StructuredContent>\n    </Row>\n  );\n});\n\nStructuredMemoizedContent.displayName = 'StructuredMemoizedContent';\n\ninterface UnstructuredProps {\n  node: LogsRowUnstructuredFragment;\n  style: React.CSSProperties;\n  highlighted: boolean;\n  metadata: IRunMetadataDict;\n}\n\nexport class Unstructured extends React.Component<UnstructuredProps> {\n  onExpand = () => {\n    showCustomAlert({\n      title: 'Log',\n      body: <div style={{whiteSpace: 'pre-wrap'}}>{this.props.node.message}</div>,\n    });\n  };\n\n  render() {\n    return (\n      <CellTruncationProvider style={this.props.style} onExpand={this.onExpand}>\n        <UnstructuredMemoizedContent\n          node={this.props.node}\n          highlighted={this.props.highlighted}\n          metadata={this.props.metadata}\n        />\n      </CellTruncationProvider>\n    );\n  }\n}\n\nexport const LOGS_ROW_UNSTRUCTURED_FRAGMENT = gql`\n  fragment LogsRowUnstructuredFragment on DagsterRunEvent {\n    ... on MessageEvent {\n      message\n      timestamp\n      level\n      stepKey\n    }\n  }\n`;\n\nconst UnstructuredMemoizedContent: React.FC<{\n  node: LogsRowUnstructuredFragment;\n  metadata: IRunMetadataDict;\n  highlighted: boolean;\n}> = React.memo(({node, highlighted, metadata}) => {\n  const stepKey = node.stepKey;\n  const step = stepKey ? metadata.steps[stepKey] : null;\n  const stepStartTime = step?.start;\n\n  return (\n    <Row\n      level={node.level}\n      onMouseEnter={() => setHighlightedGanttChartTime(node.timestamp)}\n      onMouseLeave={() => setHighlightedGanttChartTime(null)}\n      highlighted={highlighted}\n    >\n      <TimestampColumn\n        time={node.timestamp}\n        runStartTime={metadata.startedPipelineAt}\n        stepStartTime={stepStartTime}\n      />\n      <OpColumn stepKey={node.stepKey} />\n      <EventTypeColumn>\n        <span style={{marginLeft: 8}}>{node.level}</span>\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {node.message}\n      </Box>\n    </Row>\n  );\n});\n\nUnstructuredMemoizedContent.displayName = 'UnstructuredMemoizedContent';\n","import {gql} from '@apollo/client';\nimport {Colors, NonIdealState} from '@dagster-io/ui';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {\n  CellMeasurer as _CellMeasurer,\n  CellMeasurerCache,\n  List as _List,\n  ListRowProps,\n  ScrollParams,\n} from 'react-virtualized';\nimport styled from 'styled-components/macro';\n\nimport {LogFilter, LogsProviderLogs} from './LogsProvider';\nimport {\n  LOGS_ROW_STRUCTURED_FRAGMENT,\n  LOGS_ROW_UNSTRUCTURED_FRAGMENT,\n  Structured,\n  Unstructured,\n} from './LogsRow';\nimport {ColumnWidthsProvider, Headers} from './LogsScrollingTableHeader';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {eventTypeToDisplayType} from './getRunFilterProviders';\nimport {logNodeLevel} from './logNodeLevel';\nimport {RunDagsterRunEventFragment} from './types/RunFragments.types';\n\nconst LOGS_PADDING_BOTTOM = 50;\n\n// todo: react-virtualized needs updated types to work with React 18. For now lets any type.\nconst List: any = _List;\nconst CellMeasurer: any = _CellMeasurer;\n\ninterface ILogsScrollingTableProps {\n  logs: LogsProviderLogs;\n  filter: LogFilter;\n  filterStepKeys: string[];\n\n  // We use this string to know whether the changes to `nodes` require us to\n  // re-layout the entire table. Appending new rows can be done very fast, but\n  // removing some rows requires the whole list be \"reflowed\" again. Checking\n  // `nodes` for equality doesn't let us optimize for the append- case.\n  filterKey: string;\n  metadata: IRunMetadataDict;\n}\n\ninterface ILogsScrollingTableSizedProps {\n  width: number;\n  height: number;\n\n  filteredNodes: (RunDagsterRunEventFragment & {clientsideKey: string})[];\n  textMatchNodes: (RunDagsterRunEventFragment & {clientsideKey: string})[];\n\n  filterKey: string;\n  loading: boolean;\n  focusedTime: number;\n  metadata: IRunMetadataDict;\n}\n\nfunction filterLogs(logs: LogsProviderLogs, filter: LogFilter, filterStepKeys: string[]) {\n  const filteredNodes = logs.allNodes.filter((node) => {\n    // These events are used to determine which assets a run will materialize and are not intended\n    // to be displayed in Dagit. Pagination is offset based, so we remove these logs client-side.\n    if (node.__typename === 'AssetMaterializationPlannedEvent') {\n      return false;\n    }\n    const l = logNodeLevel(node);\n    if (!filter.levels[l]) {\n      return false;\n    }\n    if (filter.sinceTime && Number(node.timestamp) < filter.sinceTime) {\n      return false;\n    }\n    return true;\n  });\n\n  const hasTextFilter = !!(filter.logQuery[0] && filter.logQuery[0].value !== '');\n\n  const textMatchNodes = hasTextFilter\n    ? filteredNodes.filter((node) => {\n        return (\n          filter.logQuery.length > 0 &&\n          filter.logQuery.every((f) => {\n            if (f.token === 'query') {\n              return node.stepKey && filterStepKeys.includes(node.stepKey);\n            }\n            if (f.token === 'step') {\n              return node.stepKey && node.stepKey === f.value;\n            }\n            if (f.token === 'type') {\n              return node.eventType && f.value === eventTypeToDisplayType(node.eventType);\n            }\n            return node.message.toLowerCase().includes(f.value.toLowerCase());\n          })\n        );\n      })\n    : [];\n\n  return {\n    filteredNodes: hasTextFilter && filter.hideNonMatches ? textMatchNodes : filteredNodes,\n    textMatchNodes,\n  };\n}\n\nexport const LogsScrollingTable: React.FC<ILogsScrollingTableProps> = (props) => {\n  const {filterKey, filterStepKeys, metadata, filter, logs} = props;\n  const table = React.useRef<LogsScrollingTableSized>(null);\n\n  return (\n    <ColumnWidthsProvider onWidthsChanged={() => table.current && table.current.didResize()}>\n      <Headers />\n      <div style={{flex: 1, minHeight: 0, marginTop: -1, position: 'relative'}}>\n        <AutoSizer>\n          {({width, height}) => (\n            <LogsScrollingTableSized\n              width={width}\n              height={height}\n              ref={table}\n              filterKey={filterKey}\n              loading={logs.loading}\n              metadata={metadata}\n              focusedTime={filter.focusedTime}\n              {...filterLogs(logs, filter, filterStepKeys)}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </ColumnWidthsProvider>\n  );\n};\n\nexport const LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT = gql`\n  fragment LogsScrollingTableMessageFragment on DagsterRunEvent {\n    ...LogsRowStructuredFragment\n    ...LogsRowUnstructuredFragment\n  }\n\n  ${LOGS_ROW_STRUCTURED_FRAGMENT}\n  ${LOGS_ROW_UNSTRUCTURED_FRAGMENT}\n`;\n\nclass LogsScrollingTableSized extends React.Component<ILogsScrollingTableSizedProps> {\n  list = React.createRef<typeof List>();\n\n  get listEl() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = this.list.current && ReactDOM.findDOMNode(this.list.current);\n    if (!(el instanceof HTMLElement)) {\n      return null;\n    }\n    return el;\n  }\n\n  cache = new CellMeasurerCache({\n    defaultHeight: 30,\n    fixedWidth: true,\n    keyMapper: (rowIndex) =>\n      this.props.filteredNodes ? this.props.filteredNodes[rowIndex]!.clientsideKey : '',\n  });\n\n  isAtBottomOrZero = true;\n  scrollToBottomObserver: MutationObserver | null = null;\n\n  componentDidMount() {\n    this.attachScrollToBottomObserver();\n    if (this.props.focusedTime) {\n      window.requestAnimationFrame(() => {\n        this.scrollToTime(this.props.focusedTime);\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: ILogsScrollingTableSizedProps) {\n    if (!this.list.current) {\n      return;\n    }\n\n    if (this.props.width !== prevProps.width) {\n      this.didResize();\n    }\n    if (this.props.filterKey !== prevProps.filterKey) {\n      this.list.current.recomputeGridSize();\n    }\n\n    if (\n      this.props.focusedTime &&\n      (this.props.filteredNodes?.length !== prevProps.filteredNodes?.length ||\n        this.props.focusedTime !== prevProps.focusedTime)\n    ) {\n      window.requestAnimationFrame(() => {\n        this.scrollToTime(this.props.focusedTime);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.scrollToBottomObserver) {\n      this.scrollToBottomObserver.disconnect();\n    }\n  }\n\n  didResize() {\n    this.cache.clearAll();\n    this.forceUpdate();\n  }\n\n  attachScrollToBottomObserver() {\n    const el = this.listEl;\n    if (!el) {\n      console.warn(`No container, LogsScrollingTable must render listEl`);\n      return;\n    }\n\n    let lastHeight: string | null = null;\n\n    this.scrollToBottomObserver = new MutationObserver(() => {\n      const rowgroupEl = el.querySelector('[role=rowgroup]') as HTMLElement;\n      if (!rowgroupEl) {\n        lastHeight = null;\n        return;\n      }\n      if (rowgroupEl.style.height === lastHeight) {\n        return;\n      }\n      if (!this.isAtBottomOrZero) {\n        return;\n      }\n\n      lastHeight = rowgroupEl.style.height;\n      el.scrollTop = el.scrollHeight - el.clientHeight;\n    });\n\n    this.scrollToBottomObserver.observe(el, {\n      attributes: true,\n      subtree: true,\n    });\n  }\n\n  onScroll = ({scrollTop, scrollHeight, clientHeight}: ScrollParams) => {\n    const atTopAndStarting = scrollTop === 0 && scrollHeight <= clientHeight;\n\n    // Note: The distance to the bottom can go negative if you scroll into the padding at the bottom of the list.\n    // react-virtualized seems to be faking these numbers (they're different than what you get if you inspect the el)\n    const distanceToBottom = scrollHeight - clientHeight - scrollTop;\n    const atBottom = distanceToBottom < 5;\n\n    this.isAtBottomOrZero = atTopAndStarting || atBottom;\n  };\n\n  scrollToTime = (ms: number) => {\n    if (!this.props.filteredNodes || !this.list.current) {\n      return;\n    }\n\n    // Stop the table from attempting to return to the bottom-of-feed\n    // if more logs arrive.\n    this.isAtBottomOrZero = false;\n\n    // Find the row immediately at or after the provided timestamp\n    const target: {index: number; alignment: 'center'} = {\n      index: this.props.filteredNodes.findIndex((n) => Number(n.timestamp) >= ms),\n      alignment: 'center',\n    };\n    if (target.index === -1) {\n      target.index = this.props.filteredNodes.length - 1;\n    }\n\n    // Move to the offset. For some reason, this takes multiple iterations but not multiple renders.\n    // It seems react-virtualized may be using default row height for rows more than X rows away and\n    // the number gets more accurate as we scroll, which is very annoying.\n    let offset = 0;\n    let iterations = 0;\n    while (offset !== this.list.current.getOffsetForRow(target)) {\n      offset = this.list.current.getOffsetForRow(target);\n      this.list.current.scrollToPosition(offset);\n      iterations += 1;\n      if (iterations > 20) {\n        break;\n      }\n    }\n  };\n\n  rowRenderer = ({parent, index, style}: ListRowProps) => {\n    if (!this.props.filteredNodes.length) {\n      return;\n    }\n    const node = this.props.filteredNodes[index]!;\n    const focusedTimeMatch = Number(node.timestamp) === this.props.focusedTime;\n    const textMatch = !!this.props.textMatchNodes?.includes(node);\n\n    const metadata = this.props.metadata;\n    if (!node) {\n      return <span />;\n    }\n    const isLastRow = index === this.props.filteredNodes.length - 1;\n    const lastRowStyles = isLastRow\n      ? {\n          borderBottom: `1px solid ${Colors.Gray100}`,\n        }\n      : {};\n\n    return (\n      <CellMeasurer cache={this.cache} index={index} parent={parent} key={node.clientsideKey}>\n        {node.__typename === 'LogMessageEvent' ? (\n          <Unstructured\n            node={node}\n            metadata={metadata}\n            style={{...style, width: this.props.width, ...lastRowStyles}}\n            highlighted={textMatch || focusedTimeMatch}\n          />\n        ) : (\n          <Structured\n            node={node}\n            metadata={metadata}\n            style={{...style, width: this.props.width, ...lastRowStyles}}\n            highlighted={textMatch || focusedTimeMatch}\n          />\n        )}\n      </CellMeasurer>\n    );\n  };\n\n  noContentRenderer = () => {\n    if (this.props.filteredNodes) {\n      return <NonIdealState icon=\"no-results\" title=\"No logs to display\" />;\n    }\n    return <span />;\n  };\n\n  render() {\n    const {filteredNodes, height, loading, width} = this.props;\n    return (\n      <div>\n        {loading ? (\n          <ListEmptyState>\n            <NonIdealState icon=\"spinner\" title=\"Fetching logs...\" />\n          </ListEmptyState>\n        ) : null}\n        <List\n          ref={this.list}\n          deferredMeasurementCache={this.cache}\n          rowCount={filteredNodes?.length || 0}\n          noContentRenderer={this.noContentRenderer}\n          rowHeight={this.cache.rowHeight}\n          rowRenderer={this.rowRenderer}\n          width={width}\n          height={height}\n          overscanRowCount={10}\n          style={{paddingBottom: LOGS_PADDING_BOTTOM}}\n          onScroll={this.onScroll}\n        />\n      </div>\n    );\n  }\n}\n\nclass AutoSizer extends React.Component<{\n  children: (size: {width: number; height: number}) => React.ReactNode;\n}> {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  resizeObserver: any | undefined;\n\n  componentDidMount() {\n    this.measure();\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = ReactDOM.findDOMNode(this);\n    if (el && el instanceof HTMLElement && 'ResizeObserver' in window) {\n      const RO = window['ResizeObserver'] as any;\n      this.resizeObserver = new RO((entries: any) => {\n        this.setState({\n          width: entries[0].contentRect.width,\n          height: entries[0].contentRect.height,\n        });\n      });\n      this.resizeObserver.observe(el);\n    }\n  }\n\n  componentDidUpdate() {\n    this.measure();\n  }\n\n  componentWillUnmount() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  measure() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = ReactDOM.findDOMNode(this);\n    if (!el || !(el instanceof HTMLElement)) {\n      return;\n    }\n    if (el.clientWidth !== this.state.width || el.clientHeight !== this.state.height) {\n      this.setState({width: el.clientWidth, height: el.clientHeight});\n    }\n  }\n\n  render() {\n    return <div style={{width: '100%', height: '100%'}}>{this.props.children(this.state)}</div>;\n  }\n}\n\nconst ListEmptyState = styled.div`\n  background-color: rgba(255, 255, 255, 0.7);\n  z-index: 100;\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 50px);\n`;\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {getJSONForKey} from '../hooks/useStateWithStorage';\n\nconst ColumnWidthsStorageKey = 'ColumnWidths';\nconst ColumnWidths = Object.assign(\n  {\n    eventType: 140,\n    solid: 150,\n    timestamp: 117,\n  },\n  getJSONForKey(ColumnWidthsStorageKey),\n);\n\nconst MIN_COLUMN_WIDTH = 40;\n\nexport const ColumnWidthsContext = React.createContext({\n  ...ColumnWidths,\n  onChange: (_: typeof ColumnWidths) => {},\n});\n\nexport class ColumnWidthsProvider extends React.Component<\n  {children: React.ReactNode; onWidthsChanged: (widths: typeof ColumnWidths) => void},\n  typeof ColumnWidths\n> {\n  state = ColumnWidths;\n\n  onWidthsChangedFromContext = (columnWidths: typeof ColumnWidths) => {\n    window.localStorage.setItem(ColumnWidthsStorageKey, JSON.stringify(columnWidths));\n    this.props.onWidthsChanged(columnWidths);\n    this.setState(columnWidths);\n  };\n\n  render() {\n    return (\n      <ColumnWidthsContext.Provider\n        value={{\n          ...this.state,\n          onChange: this.onWidthsChangedFromContext,\n        }}\n      >\n        {this.props.children}\n      </ColumnWidthsContext.Provider>\n    );\n  }\n}\n\ninterface HeaderProps extends Omit<React.HTMLProps<HTMLDivElement>, 'onResize'> {\n  width: number;\n  handleSide?: 'left' | 'right';\n  onResize?: (width: number) => void;\n}\n\ninterface HeaderState {\n  isDragging: boolean;\n  width: number;\n  screenX: number;\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  state = {\n    isDragging: false,\n    width: 0,\n    screenX: 0,\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  onMouseDown = (m: React.MouseEvent<HTMLDivElement>) => {\n    const {width} = this.props;\n    this.setState({\n      isDragging: true,\n      screenX: m.screenX,\n      width,\n    });\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseMove = (evt: MouseEvent) => {\n    const {onResize, handleSide} = this.props;\n    const {isDragging, width, screenX} = this.state;\n    if (!evt.screenX || !isDragging || !onResize) {\n      return;\n    }\n    const dir = handleSide === 'left' ? -1 : 1;\n    onResize(Math.max(MIN_COLUMN_WIDTH, width + (evt.screenX - screenX) * dir));\n  };\n\n  onMouseUp = () => {\n    const {isDragging} = this.state;\n    isDragging && this.setState({isDragging: false});\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  };\n\n  render() {\n    const isDraggable = !!this.props.onResize;\n\n    return (\n      <HeaderContainer style={{width: this.props.width}}>\n        <HeaderDragHandle\n          onMouseDown={isDraggable ? this.onMouseDown : undefined}\n          isDraggable={isDraggable}\n          isDragging={this.state.isDragging}\n          side={this.props.handleSide || 'right'}\n        >\n          <div />\n        </HeaderDragHandle>\n        <HeaderLabel>{this.props.children}</HeaderLabel>\n      </HeaderContainer>\n    );\n  }\n}\n\nexport const Headers = () => {\n  const widths = React.useContext(ColumnWidthsContext);\n  return (\n    <HeadersContainer>\n      <Header\n        width={widths.timestamp}\n        onResize={(width) => widths.onChange({...widths, timestamp: width})}\n      >\n        Timestamp\n      </Header>\n      <Header width={widths.solid} onResize={(width) => widths.onChange({...widths, solid: width})}>\n        Op\n      </Header>\n      <Header\n        width={widths.eventType}\n        onResize={(width) => widths.onChange({...widths, eventType: width})}\n      >\n        Event Type\n      </Header>\n      <HeaderContainer style={{flex: 1}}>Info</HeaderContainer>\n    </HeadersContainer>\n  );\n};\n\nexport const HeadersContainer = styled.div`\n  display: flex;\n  color: ${Colors.Gray400};\n  text-transform: uppercase;\n  font-size: 12px;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  z-index: 2;\n`;\n\nexport const HeaderContainer = styled.div`\n  flex-shrink: 0;\n  position: relative;\n  user-select: none;\n  display: inline-block;\n  padding: 0 12px;\n  line-height: 32px;\n`;\n\n// eslint-disable-next-line no-unexpected-multiline\nconst HeaderDragHandle = styled.div<{\n  side: 'left' | 'right';\n  isDraggable: boolean;\n  isDragging: boolean;\n}>`\n  width: 1px;\n  height: 20000px;\n  position: absolute;\n  cursor: ${({isDraggable}) => (isDraggable ? 'ew-resize' : 'default')};\n  z-index: 2;\n  ${({side}) => (side === 'right' ? `right: -2px;` : `left: -2px;`)}\n  padding: 0 2px;\n  & > div {\n    width: 1px;\n    height: 100%;\n    background: ${({isDragging}) => (isDragging ? Colors.Gray400 : Colors.KeylineGray)};\n  }\n`;\n\nconst HeaderLabel = styled.div`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n","import {Box, Button, Group, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showSharedToaster} from '../app/DomUtils';\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {LaunchButtonConfiguration, LaunchButtonDropdown} from '../launchpad/LaunchButton';\n\nimport {IRunMetadataDict, IStepState} from './RunMetadataProvider';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {DagsterTag} from './RunTag';\nimport {ReExecutionStyle} from './RunUtils';\nimport {StepSelection} from './StepSelection';\nimport {TerminationDialog, TerminationState} from './TerminationDialog';\nimport {RunFragment, RunPageFragment} from './types/RunFragments.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\n\ninterface RunActionButtonsProps {\n  run: RunPageFragment;\n  selection: StepSelection;\n  graph: GraphQueryItem[];\n  metadata: IRunMetadataDict;\n  onLaunch: (style: ReExecutionStyle) => Promise<void>;\n}\n\nexport const CancelRunButton: React.FC<{run: RunFragment}> = ({run}) => {\n  const {id: runId, canTerminate} = run;\n  const [showDialog, setShowDialog] = React.useState<boolean>(false);\n  const closeDialog = React.useCallback(() => setShowDialog(false), []);\n\n  const onComplete = React.useCallback(\n    async (terminationState: TerminationState) => {\n      const {errors} = terminationState;\n      const error = runId && errors[runId];\n      if (error && 'message' in error) {\n        await showSharedToaster({\n          message: error.message,\n          icon: 'error',\n          intent: 'danger',\n        });\n      }\n    },\n    [runId],\n  );\n\n  if (!runId) {\n    return null;\n  }\n\n  return (\n    <>\n      <Button\n        icon={<Icon name=\"cancel\" />}\n        intent=\"danger\"\n        disabled={showDialog}\n        onClick={() => setShowDialog(true)}\n      >\n        Terminate\n      </Button>\n      <TerminationDialog\n        isOpen={showDialog}\n        onClose={closeDialog}\n        onComplete={onComplete}\n        selectedRuns={{[runId]: canTerminate}}\n      />\n    </>\n  );\n};\n\nfunction stepSelectionWithState(selection: StepSelection, metadata: IRunMetadataDict) {\n  const stepStates = selection.keys.map(\n    (key) => (key && metadata.steps[key]?.state) || IStepState.PREPARING,\n  );\n\n  return {\n    ...selection,\n    present: selection.keys.length > 0,\n    failed: selection.keys.length && stepStates.includes(IStepState.FAILED),\n    finished: stepStates.every((stepState) =>\n      [IStepState.FAILED, IStepState.SUCCEEDED].includes(stepState),\n    ),\n  };\n}\n\nfunction stepSelectionFromRunTags(\n  run: RunFragment,\n  graph: GraphQueryItem[],\n  metadata: IRunMetadataDict,\n) {\n  const tag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  if (!tag) {\n    return null;\n  }\n  return stepSelectionWithState(\n    {keys: filterByQuery(graph, tag.value).all.map((k) => k.name), query: tag.value},\n    metadata,\n  );\n}\n\nexport const canRunAllSteps = (run: RunFragment) => doneStatuses.has(run.status);\nexport const canRunFromFailure = (run: RunFragment) =>\n  run.executionPlan && failedStatuses.has(run.status);\n\nexport const RunActionButtons: React.FC<RunActionButtonsProps> = (props) => {\n  const {metadata, graph, onLaunch, run} = props;\n  const artifactsPersisted = run?.executionPlan?.artifactsPersisted;\n  const jobError = useJobAvailabilityErrorForRun(run);\n\n  const selection = stepSelectionWithState(props.selection, metadata);\n\n  const currentRunSelection = stepSelectionFromRunTags(run, graph, metadata);\n  const currentRunIsFromFailure = run.tags?.some(\n    (t) => t.key === DagsterTag.IsResumeRetry && t.value === 'true',\n  );\n\n  const full: LaunchButtonConfiguration = {\n    icon: 'cached',\n    scope: '*',\n    title: 'All steps in root run',\n    tooltip: 'Re-execute the pipeline run from scratch',\n    disabled: !canRunAllSteps(run),\n    onClick: () => onLaunch({type: 'all'}),\n  };\n\n  const same: LaunchButtonConfiguration = {\n    icon: 'linear_scale',\n    scope: currentRunSelection?.query || '*',\n    title: 'Same steps',\n    disabled: !currentRunSelection || !(currentRunSelection.finished || currentRunSelection.failed),\n    tooltip: (\n      <div>\n        {!currentRunSelection || !currentRunSelection.present\n          ? 'Re-executes the same step subset used for this run if one was present.'\n          : !currentRunSelection.finished\n          ? 'Wait for all of the steps to finish to re-execute the same subset.'\n          : 'Re-execute the same step subset used for this run:'}\n        <StepSelectionDescription selection={currentRunSelection} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection: currentRunSelection!}),\n  };\n\n  const selected: LaunchButtonConfiguration = {\n    icon: 'op',\n    scope: selection.query,\n    title: selection.keys.length > 1 ? 'Selected steps' : 'Selected step',\n    disabled: !selection.present || !(selection.finished || selection.failed),\n    tooltip: (\n      <div>\n        {!selection.present\n          ? 'Select a step or type a step subset to re-execute.'\n          : !selection.finished\n          ? 'Wait for the steps to finish to re-execute them.'\n          : 'Re-execute the selected steps with existing configuration:'}\n        <StepSelectionDescription selection={selection} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection}),\n  };\n\n  const fromSelected: LaunchButtonConfiguration = {\n    icon: 'arrow_forward',\n    title: 'From selected',\n    disabled: !canRunAllSteps(run) || selection.keys.length !== 1,\n    tooltip: 'Re-execute the pipeline downstream from the selected steps',\n    onClick: () => {\n      if (!run.executionPlan) {\n        console.warn('Run execution plan must be present to launch from-selected execution');\n        return Promise.resolve();\n      }\n      const selectionAndDownstreamQuery = selection.keys.map((k) => `${k}*`).join(',');\n      const selectionKeys = filterByQuery(graph, selectionAndDownstreamQuery).all.map(\n        (node) => node.name,\n      );\n\n      return onLaunch({\n        type: 'selection',\n        selection: {\n          keys: selectionKeys,\n          query: selectionAndDownstreamQuery,\n        },\n      });\n    },\n  };\n\n  const fromFailureEnabled = canRunFromFailure(run);\n\n  const fromFailure: LaunchButtonConfiguration = {\n    icon: 'arrow_forward',\n    title: 'From failure',\n    disabled: !fromFailureEnabled,\n    tooltip: !fromFailureEnabled\n      ? 'Retry is only enabled when the pipeline has failed.'\n      : 'Retry the pipeline run, skipping steps that completed successfully',\n    onClick: () => onLaunch({type: 'from-failure'}),\n  };\n\n  if (!artifactsPersisted) {\n    [selected, same, fromFailure, fromSelected].forEach((option) => {\n      option.disabled = true;\n      option.title =\n        'Retry and re-execute are only enabled on persistent storage. Try rerunning with a different storage configuration.';\n    });\n  }\n\n  const options = [full, same, selected, fromSelected, fromFailure];\n  const preferredRerun = selection.present\n    ? selected\n    : fromFailureEnabled && currentRunIsFromFailure\n    ? fromFailure\n    : currentRunSelection?.present\n    ? same\n    : null;\n\n  const primary = artifactsPersisted && preferredRerun ? preferredRerun : full;\n\n  const tooltip = () => {\n    if (jobError?.tooltip) {\n      return jobError?.tooltip;\n    }\n    return run.hasReExecutePermission ? undefined : DEFAULT_DISABLED_REASON;\n  };\n\n  return (\n    <Group direction=\"row\" spacing={8}>\n      <Box flex={{direction: 'row'}}>\n        <LaunchButtonDropdown\n          runCount={1}\n          primary={primary}\n          options={options}\n          title={\n            primary.scope === '*'\n              ? `Re-execute all (*)`\n              : primary.scope\n              ? `Re-execute (${primary.scope})`\n              : `Re-execute ${primary.title}`\n          }\n          tooltip={tooltip()}\n          icon={jobError?.icon}\n          disabled={jobError?.disabled || !run.hasReExecutePermission}\n        />\n      </Box>\n      {!doneStatuses.has(run.status) ? <CancelRunButton run={run} /> : null}\n    </Group>\n  );\n};\n\nconst StepSelectionDescription: React.FC<{selection: StepSelection | null}> = ({selection}) => (\n  <div style={{paddingLeft: '10px'}}>\n    {(selection?.keys || []).map((step) => (\n      <span key={step} style={{display: 'block'}}>{`* ${step}`}</span>\n    ))}\n  </div>\n);\n","import * as React from 'react';\n\nimport {RunFragment} from './types/RunFragments.types';\n\nconst initialContext = undefined;\nexport const RunContext = React.createContext<RunFragment | undefined>(initialContext);\n","import {gql} from '@apollo/client';\nimport {\n  Button,\n  Colors,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  MenuItem,\n  Menu,\n  MetadataTable,\n  Popover,\n  Tooltip,\n  Subheading,\n  Box,\n  StyledReadOnlyCodeMirror,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {RunStatus} from '../graphql/types';\nimport {NO_LAUNCH_PERMISSION_MESSAGE} from '../launchpad/LaunchRootExecutionButton';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {workspacePathFromRunDetails, workspacePipelinePath} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {RunTags} from './RunTags';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {TerminationDialog} from './TerminationDialog';\nimport {TimeElapsed} from './TimeElapsed';\nimport {RunDetailsFragment} from './types/RunDetails.types';\nimport {RunFragment} from './types/RunFragments.types';\n\nexport const timingStringForStatus = (status?: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    case RunStatus.CANCELING:\n      return 'Canceling…';\n    case RunStatus.FAILURE:\n      return 'Failed';\n    case RunStatus.NOT_STARTED:\n      return 'Waiting to start…';\n    case RunStatus.STARTED:\n      return 'Started…';\n    case RunStatus.STARTING:\n      return 'Starting…';\n    case RunStatus.SUCCESS:\n      return 'Succeeded';\n    default:\n      return 'None';\n  }\n};\n\nconst LoadingOrValue: React.FC<{\n  loading: boolean;\n  children: () => React.ReactNode;\n}> = ({loading, children}) =>\n  loading ? <div style={{color: Colors.Gray400}}>Loading…</div> : <div>{children()}</div>;\n\nconst TIME_FORMAT = {showSeconds: true, showTimezone: false};\n\nexport const RunDetails: React.FC<{\n  loading: boolean;\n  run: RunDetailsFragment | undefined;\n}> = ({loading, run}) => {\n  return (\n    <MetadataTable\n      spacing={0}\n      rows={[\n        {\n          key: 'Started',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.startTime) {\n                  return <TimestampDisplay timestamp={run.startTime} timeFormat={TIME_FORMAT} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n        {\n          key: 'Ended',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.endTime) {\n                  return <TimestampDisplay timestamp={run.endTime} timeFormat={TIME_FORMAT} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n        {\n          key: 'Duration',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.startTime) {\n                  return <TimeElapsed startUnix={run.startTime} endUnix={run.endTime} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n      ]}\n    />\n  );\n};\n\ntype VisibleDialog = 'config' | 'delete' | 'terminate' | null;\n\nexport const RunConfigDialog: React.FC<{run: RunFragment; isJob: boolean}> = ({run, isJob}) => {\n  const {runConfigYaml} = run;\n  const [visibleDialog, setVisibleDialog] = React.useState<VisibleDialog>(null);\n\n  const {rootServerURI} = React.useContext(AppContext);\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const copy = useCopyToClipboard();\n  const history = useHistory();\n\n  const copyConfig = async () => {\n    copy(runConfigYaml);\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'copy_to_clipboard_done',\n      message: 'Copied!',\n    });\n  };\n\n  const jobPath = workspacePathFromRunDetails({\n    id: run.id,\n    repositoryName: run.repositoryOrigin?.repositoryName,\n    repositoryLocationName: run.repositoryOrigin?.repositoryLocationName,\n    pipelineName: run.pipelineName,\n    isJob,\n  });\n\n  return (\n    <div>\n      <Group direction=\"row\" spacing={8}>\n        {run.hasReExecutePermission ? (\n          <AnchorButton icon={<Icon name=\"edit\" />} to={jobPath}>\n            Open in Launchpad\n          </AnchorButton>\n        ) : (\n          <Tooltip content={NO_LAUNCH_PERMISSION_MESSAGE} useDisabledButtonTooltipFix>\n            <Button icon={<Icon name=\"edit\" />} disabled>\n              Open in Launchpad\n            </Button>\n          </Tooltip>\n        )}\n        <Button icon={<Icon name=\"tag\" />} onClick={() => setVisibleDialog('config')}>\n          View tags and config\n        </Button>\n        <Popover\n          position=\"bottom-right\"\n          content={\n            <Menu>\n              <Tooltip content=\"Loadable in dagit-debug\" position=\"left\" targetTagName=\"div\">\n                <MenuItem\n                  text=\"Download debug file\"\n                  icon={<Icon name=\"download_for_offline\" />}\n                  onClick={() => window.open(`${rootServerURI}/download_debug/${run.id}`)}\n                />\n              </Tooltip>\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </Group>\n      <Dialog\n        isOpen={visibleDialog === 'config'}\n        onClose={() => setVisibleDialog(null)}\n        style={{\n          width: '90vw',\n          maxWidth: '1000px',\n          minWidth: '600px',\n          height: '90vh',\n          maxHeight: '1000px',\n          minHeight: '600px',\n        }}\n        title=\"Run configuration\"\n      >\n        <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n          <Box flex={{direction: 'column', gap: 20}} style={{flex: 1, overflow: 'hidden'}}>\n            <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n              <Subheading>Tags</Subheading>\n              <div>\n                <RunTags tags={run.tags} mode={isJob ? null : run.mode} />\n              </div>\n            </Box>\n            <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n              <Box\n                border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n                padding={{left: 24, bottom: 16}}\n              >\n                <Subheading>Config</Subheading>\n              </Box>\n              <CodeMirrorContainer>\n                <StyledReadOnlyCodeMirror\n                  value={runConfigYaml}\n                  options={{lineNumbers: true, mode: 'yaml'}}\n                  theme={['config-editor']}\n                />\n              </CodeMirrorContainer>\n            </Box>\n          </Box>\n          <DialogFooter topBorder>\n            <Button onClick={() => copyConfig()} intent=\"none\">\n              Copy config\n            </Button>\n            <Button onClick={() => setVisibleDialog(null)} intent=\"primary\">\n              OK\n            </Button>\n          </DialogFooter>\n        </Box>\n      </Dialog>\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={() => setVisibleDialog(null)}\n          onComplete={() => {\n            if (run.repositoryOrigin) {\n              history.push(\n                workspacePipelinePath({\n                  repoName: run.repositoryOrigin.repositoryName,\n                  repoLocation: run.repositoryOrigin.repositoryLocationName,\n                  pipelineName: run.pipelineName,\n                  isJob,\n                  path: '/runs',\n                }),\n              );\n            } else {\n              setVisibleDialog(null);\n            }\n          }}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={() => setVisibleDialog(null)}\n          onComplete={() => {\n            refetch();\n          }}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nconst CodeMirrorContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n\n  .react-codemirror2,\n  .CodeMirror {\n    height: 100%;\n  }\n`;\n\nexport const RUN_DETAILS_FRAGMENT = gql`\n  fragment RunDetailsFragment on Run {\n    id\n    startTime\n    endTime\n    status\n  }\n`;\n","import {gql} from '@apollo/client';\n\nimport {EXECUTION_PLAN_TO_GRAPH_FRAGMENT} from '../gantt/toGraphQueryItems';\n\nimport {LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT} from './LogsScrollingTable';\nimport {RUN_DETAILS_FRAGMENT} from './RunDetails';\nimport {RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT} from './RunMetadataProvider';\n\nexport const RUN_FRAGMENT = gql`\n  fragment RunFragment on Run {\n    id\n    runConfigYaml\n    canTerminate\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    status\n    mode\n    tags {\n      key\n      value\n    }\n    assets {\n      id\n      key {\n        path\n      }\n    }\n    rootRunId\n    parentRunId\n    pipelineName\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    pipelineSnapshotId\n    executionPlan {\n      artifactsPersisted\n      ...ExecutionPlanToGraphFragment\n    }\n    stepKeysToExecute\n    updateTime\n    stepStats {\n      stepKey\n      status\n      startTime\n      endTime\n      attempts {\n        startTime\n        endTime\n      }\n      markers {\n        startTime\n        endTime\n      }\n    }\n    ...RunDetailsFragment\n  }\n\n  ${EXECUTION_PLAN_TO_GRAPH_FRAGMENT}\n  ${RUN_DETAILS_FRAGMENT}\n`;\n\nexport const RUN_DAGSTER_RUN_EVENT_FRAGMENT = gql`\n  fragment RunDagsterRunEventFragment on DagsterRunEvent {\n    ... on MessageEvent {\n      message\n      timestamp\n      level\n      stepKey\n    }\n\n    ...LogsScrollingTableMessageFragment\n    ...RunMetadataProviderMessageFragment\n  }\n\n  ${LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT}\n  ${RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT}\n`;\n\nexport const RUN_PAGE_FRAGMENT = gql`\n  fragment RunPageFragment on Run {\n    id\n    parentPipelineSnapshotId\n    ...RunFragment\n  }\n\n  ${RUN_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\n\nimport {StepEventStatus} from '../graphql/types';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\n\nimport {LogsProviderLogs} from './LogsProvider';\nimport {RunContext} from './RunContext';\nimport {RunFragment} from './types/RunFragments.types';\nimport {RunMetadataProviderMessageFragment} from './types/RunMetadataProvider.types';\n\nexport enum IStepState {\n  PREPARING = 'preparing',\n  RETRY_REQUESTED = 'retry-requested',\n  RUNNING = 'running',\n  SUCCEEDED = 'succeeded',\n  SKIPPED = 'skipped',\n  FAILED = 'failed',\n  UNKNOWN = 'unknown', // run exited without step reaching a final state\n}\n\nconst BOX_EXIT_STATES = [\n  IStepState.RETRY_REQUESTED,\n  IStepState.SUCCEEDED,\n  IStepState.FAILED,\n  IStepState.UNKNOWN,\n];\n\ninterface IMarker {\n  key: string;\n  start?: number;\n  end?: number;\n}\n\nexport interface IStepAttempt {\n  start: number;\n  end?: number;\n  exitState?: IStepState;\n}\n\nexport interface IStepMetadata {\n  // current state\n  state?: IStepState;\n\n  // execution start and stop (user-code) inclusive of all retries\n  start?: number;\n  end?: number;\n\n  // current state + prev state transition times\n  transitions: {\n    state: IStepState;\n    time: number;\n  }[];\n\n  // transition times organized into start+stop+exit state pairs.\n  // This is the metadata used to render boxes on the realtime vi.z\n  attempts: IStepAttempt[];\n\n  // accumulated metadata\n  markers: IMarker[];\n}\n\nexport interface ILogCaptureInfo {\n  fileKey: string;\n  stepKeys: string[];\n  pid?: string;\n  externalStdoutUrl?: string;\n  externalStderrUrl?: string;\n}\n\nexport interface IRunMetadataDict {\n  firstLogAt: number;\n  mostRecentLogAt: number;\n  startingProcessAt?: number;\n  startedProcessAt?: number;\n  startedPipelineAt?: number;\n  exitedAt?: number;\n  processId?: number;\n  globalMarkers: IMarker[];\n  steps: {\n    [stepKey: string]: IStepMetadata;\n  };\n  logCaptureSteps?: {\n    [fileKey: string]: ILogCaptureInfo;\n  };\n}\n\nexport const EMPTY_RUN_METADATA: IRunMetadataDict = {\n  firstLogAt: 0,\n  mostRecentLogAt: 0,\n  globalMarkers: [],\n  steps: {},\n};\n\nexport const extractLogCaptureStepsFromLegacySteps = (stepKeys: string[]) => {\n  const logCaptureSteps = {};\n  stepKeys.forEach(\n    (stepKey) => ((logCaptureSteps as any)[stepKey] = {fileKey: stepKey, stepKeys: [stepKey]}),\n  );\n  return logCaptureSteps;\n};\n\nconst fromTimestamp = (ts: number | null) => (ts ? Math.floor(ts * 1000) : undefined);\nfunction extractMetadataFromRun(run?: RunFragment): IRunMetadataDict {\n  const metadata: IRunMetadataDict = {\n    firstLogAt: 0,\n    mostRecentLogAt: 0,\n    globalMarkers: [],\n    steps: {},\n  };\n  if (!run) {\n    return metadata;\n  }\n  if (run.startTime) {\n    metadata.startedPipelineAt = fromTimestamp(run.startTime);\n  }\n  if (run.endTime) {\n    metadata.exitedAt = fromTimestamp(run.endTime);\n  }\n\n  run.stepStats.forEach((stepStat) => {\n    metadata.steps[stepStat.stepKey] = {\n      // state:\n      // current state\n      state: stepStatusToStepState(stepStat.status),\n\n      // execution start and stop (user-code) inclusive of all retries\n      start: fromTimestamp(stepStat.startTime),\n      end: fromTimestamp(stepStat.endTime),\n\n      // current state + prev state transition times\n      transitions: [],\n\n      // transition times organized into start+stop+exit state pairs.\n      // This is the metadata used to render boxes on the realtime vi.z\n      attempts: stepStat.attempts.map(\n        (attempt, idx) =>\n          ({\n            start: fromTimestamp(attempt.startTime),\n            end: fromTimestamp(attempt.endTime),\n            exitState:\n              idx === stepStat.attempts.length - 1\n                ? stepStatusToStepState(stepStat.status)\n                : IStepState.RETRY_REQUESTED,\n          } as IStepAttempt),\n      ),\n\n      // accumulated metadata\n      markers: stepStat.markers.map((marker, idx) => ({\n        start: fromTimestamp(marker.startTime),\n        end: fromTimestamp(marker.endTime),\n        key: `marker_${idx}`,\n      })),\n    };\n  });\n\n  return metadata;\n}\n\nconst stepStatusToStepState = (status: StepEventStatus | null) => {\n  switch (status) {\n    case StepEventStatus.SUCCESS:\n      return IStepState.SUCCEEDED;\n    case StepEventStatus.FAILURE:\n      return IStepState.FAILED;\n    case StepEventStatus.SKIPPED:\n      return IStepState.SKIPPED;\n    default:\n      return IStepState.UNKNOWN;\n  }\n};\n\nconst refineMarkerEvent = (log: RunMetadataProviderMessageFragment) => {\n  if (\n    log.__typename === 'EngineEvent' ||\n    log.__typename === 'ResourceInitFailureEvent' ||\n    log.__typename === 'ResourceInitStartedEvent' ||\n    log.__typename === 'ResourceInitSuccessEvent' ||\n    log.__typename === 'StepWorkerStartedEvent' ||\n    log.__typename === 'StepWorkerStartingEvent'\n  ) {\n    return log;\n  }\n  return null;\n};\n\nexport function extractMetadataFromLogs(\n  logs: RunMetadataProviderMessageFragment[],\n): IRunMetadataDict {\n  const metadata: IRunMetadataDict = {\n    firstLogAt: 0,\n    mostRecentLogAt: 0,\n    globalMarkers: [],\n    steps: {},\n  };\n\n  // Returns the most recent marker with the given `key` without an end time\n  const upsertMarker = (set: IMarker[], key: string) => {\n    let marker = set.find((f) => f.key === key && !f.end);\n    if (!marker) {\n      marker = {key};\n      set.unshift(marker);\n    }\n    return marker;\n  };\n\n  const upsertState = (step: IStepMetadata, time: number, state: IStepState) => {\n    step.transitions.push({time, state});\n    step.state = state;\n    step.attempts = [];\n  };\n\n  logs.forEach((log) => {\n    const timestamp = Number.parseInt(log.timestamp, 10);\n\n    metadata.firstLogAt = metadata.firstLogAt\n      ? Math.min(metadata.firstLogAt, timestamp)\n      : timestamp;\n    metadata.mostRecentLogAt = Math.max(metadata.mostRecentLogAt, timestamp);\n\n    if (log.__typename === 'RunStartEvent') {\n      metadata.startedPipelineAt = timestamp;\n    }\n    if (\n      log.__typename === 'RunFailureEvent' ||\n      log.__typename === 'RunSuccessEvent' ||\n      log.__typename === 'RunCanceledEvent'\n    ) {\n      metadata.exitedAt = timestamp;\n      for (const step of Object.values(metadata.steps)) {\n        if (step.state === IStepState.RUNNING) {\n          upsertState(step, timestamp, IStepState.UNKNOWN);\n        }\n      }\n    }\n\n    if (!log.stepKey) {\n      const markerEvent = refineMarkerEvent(log);\n      if (markerEvent) {\n        if (markerEvent.markerStart) {\n          upsertMarker(metadata.globalMarkers, markerEvent.markerStart).start = timestamp;\n        }\n        if (markerEvent.markerEnd) {\n          upsertMarker(metadata.globalMarkers, markerEvent.markerEnd).end = timestamp;\n        }\n      }\n    }\n\n    if (log.__typename === 'LogsCapturedEvent') {\n      if (!metadata.logCaptureSteps) {\n        metadata.logCaptureSteps = {};\n      }\n      metadata.logCaptureSteps[log.fileKey] = {\n        fileKey: log.fileKey,\n        stepKeys: log.stepKeys || [],\n        pid: String(log.pid),\n        externalStdoutUrl: log.externalStdoutUrl || undefined,\n        externalStderrUrl: log.externalStderrUrl || undefined,\n      };\n    }\n\n    if (log.stepKey) {\n      const stepKey = log.stepKey;\n      const step =\n        metadata.steps[stepKey] ||\n        ({\n          state: undefined,\n          attempts: [],\n          transitions: [],\n          start: undefined,\n          end: undefined,\n          markers: [],\n        } as IStepMetadata);\n\n      const markerEvent = refineMarkerEvent(log);\n      if (markerEvent) {\n        if (markerEvent.markerStart) {\n          upsertMarker(step.markers, markerEvent.markerStart).start = timestamp;\n        }\n        if (markerEvent.markerEnd) {\n          upsertMarker(step.markers, markerEvent.markerEnd).end = timestamp;\n        }\n      }\n\n      if (log.__typename === 'StepWorkerStartingEvent') {\n        upsertState(step, timestamp, IStepState.PREPARING);\n      } else if (log.__typename === 'ExecutionStepStartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n        step.start = timestamp;\n      } else if (log.__typename === 'ExecutionStepSuccessEvent') {\n        upsertState(step, timestamp, IStepState.SUCCEEDED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepSkippedEvent') {\n        upsertState(step, timestamp, IStepState.SKIPPED);\n      } else if (log.__typename === 'ExecutionStepFailureEvent') {\n        upsertState(step, timestamp, IStepState.FAILED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepUpForRetryEvent') {\n        // We only get one event when the step fails/aborts and is queued for retry,\n        // but we create an \"exit\" state separate from the \"preparing for retry\" state\n        // so that the box representing the attempt doesn't have a final state = preparing.\n        // That'd be more confusing.\n        upsertState(step, timestamp, IStepState.RETRY_REQUESTED);\n        upsertState(step, timestamp + 1, IStepState.PREPARING);\n      } else if (log.__typename === 'ExecutionStepRestartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n      } else if (log.__typename === 'ObjectStoreOperationEvent') {\n        // this indicates the step was skipped and its previous intermediates were copied\n        // so we will drop the step because we didn't execute it\n        if (log.operationResult.op === 'CP_OBJECT') {\n          return;\n        }\n      }\n\n      metadata.steps[stepKey] = step;\n    }\n  });\n\n  // Post processing\n\n  for (const step of Object.values(metadata.steps)) {\n    // Sort step transitions because logs may not arrive in order\n    step.transitions = step.transitions.sort((a, b) => a.time - b.time);\n\n    // Build step \"attempts\" from transitions\n    // - Each time we see a \"RUNNING\" step transition, we create a new attempt box unless one is open already.\n    // - Each time we see a final step transition, we set it as the end state of the current attempt.\n\n    let attempt: IStepAttempt | null = null;\n    for (const t of step.transitions) {\n      if ((!attempt || attempt.end) && t.state === IStepState.RUNNING) {\n        attempt = {start: t.time};\n        step.attempts.push(attempt);\n      }\n      if (attempt && BOX_EXIT_STATES.includes(t.state)) {\n        attempt.end = t.time;\n        attempt.exitState = t.state;\n      }\n    }\n\n    // If a step is skipped, log an zero-second attempt so that the step is rendered\n    // as a tiny dot on the chart.\n    if (step.transitions.length === 1 && step.state === IStepState.SKIPPED) {\n      step.attempts.push({\n        start: step.transitions[0]!.time,\n        end: step.transitions[0]!.time,\n        exitState: IStepState.SKIPPED,\n      });\n    }\n  }\n\n  return metadata;\n}\n\ninterface IRunMetadataProviderProps {\n  logs: LogsProviderLogs;\n  children: (metadata: IRunMetadataDict) => React.ReactElement<any>;\n}\n\nexport const RunMetadataProvider: React.FC<IRunMetadataProviderProps> = ({logs, children}) => {\n  const run = React.useContext(RunContext);\n  const runMetadata = React.useMemo(() => extractMetadataFromRun(run), [run]);\n  const metadata = React.useMemo(\n    () => (logs.loading ? runMetadata : extractMetadataFromLogs(logs.allNodes)),\n    [logs, runMetadata],\n  );\n  return <>{children(metadata)}</>;\n};\n\nexport const RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT = gql`\n  fragment RunMetadataProviderMessageFragment on DagsterRunEvent {\n    ... on MessageEvent {\n      message\n      timestamp\n      stepKey\n    }\n    ... on MarkerEvent {\n      markerStart\n      markerEnd\n    }\n    ... on ObjectStoreOperationEvent {\n      operationResult {\n        op\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on LogsCapturedEvent {\n      fileKey\n      stepKeys\n      pid\n      externalStdoutUrl\n      externalStderrUrl\n    }\n  }\n\n  ${METADATA_ENTRY_FRAGMENT}\n`;\n","import memoize from 'lodash/memoize';\nimport uniq from 'lodash/uniq';\n\nimport {DagsterEventType} from '../graphql/types';\n\nconst typeValues = memoize(() =>\n  uniq(Object.values(DagsterEventType).map(eventTypeToDisplayType)).sort(),\n);\n\nexport const eventTypeToDisplayType = (eventType: string) => {\n  switch (eventType) {\n    case DagsterEventType.PIPELINE_STARTING:\n      return DagsterEventType.RUN_STARTING;\n    case DagsterEventType.PIPELINE_ENQUEUED:\n      return DagsterEventType.RUN_ENQUEUED;\n    case DagsterEventType.PIPELINE_DEQUEUED:\n      return DagsterEventType.RUN_DEQUEUED;\n    case DagsterEventType.PIPELINE_STARTING:\n      return DagsterEventType.RUN_STARTING;\n    case DagsterEventType.PIPELINE_START:\n      return DagsterEventType.RUN_START;\n    case DagsterEventType.PIPELINE_SUCCESS:\n      return DagsterEventType.RUN_SUCCESS;\n    case DagsterEventType.PIPELINE_FAILURE:\n      return DagsterEventType.RUN_FAILURE;\n    case DagsterEventType.PIPELINE_CANCELING:\n      return DagsterEventType.RUN_CANCELING;\n    case DagsterEventType.PIPELINE_CANCELED:\n      return DagsterEventType.RUN_CANCELED;\n\n    default:\n      return eventType;\n  }\n};\n\nexport const getRunFilterProviders = memoize(\n  (stepNames: string[] = []) => {\n    return [\n      {\n        token: 'step',\n        values: () => stepNames,\n      },\n      {\n        token: 'type',\n        values: typeValues,\n      },\n      {\n        token: 'query',\n        values: () => [],\n      },\n    ];\n  },\n  (stepNames: string[] = []) => JSON.stringify(stepNames),\n);\n","import {LogLevel} from './LogLevel';\nimport {LogNode} from './types';\n\nexport const logNodeLevel = (node: LogNode): LogLevel =>\n  node.__typename === 'LogMessageEvent' ? node.level : LogLevel.EVENT;\n","import {Colors, Icon, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {TimeContext} from '../app/time/TimeContext';\nimport {DEFAULT_TIME_FORMAT, TimeFormat} from '../app/time/TimestampFormat';\nimport {timestampToString} from '../app/time/timestampToString';\n\ninterface Props {\n  timestamp: number;\n  timezone?: string | null;\n  timeFormat?: TimeFormat;\n  tooltipTimeFormat?: TimeFormat;\n}\n\nexport const TimestampDisplay = (props: Props) => {\n  const {timestamp, timezone, timeFormat, tooltipTimeFormat} = props;\n  const {\n    timezone: [userTimezone],\n    hourCycle: [hourCycle],\n  } = React.useContext(TimeContext);\n\n  const locale = navigator.language;\n  const mainString = timestampToString({\n    timestamp: {unix: timestamp},\n    locale,\n    timezone: timezone || userTimezone,\n    timeFormat,\n    hourCycle,\n  });\n\n  return (\n    <span>\n      <TabularNums style={{minWidth: 0}} title={mainString}>\n        {mainString}\n      </TabularNums>\n      {timezone && timezone !== userTimezone ? (\n        <TimestampTooltip\n          placement=\"top\"\n          content={\n            <TabularNums>\n              {timestampToString({\n                timestamp: {unix: timestamp},\n                locale,\n                timezone: userTimezone,\n                timeFormat: tooltipTimeFormat,\n              })}\n            </TabularNums>\n          }\n        >\n          <Icon name=\"schedule\" color={Colors.Gray400} size={12} />\n        </TimestampTooltip>\n      ) : null}\n    </span>\n  );\n};\n\nTimestampDisplay.defaultProps = {\n  timeFormat: DEFAULT_TIME_FORMAT,\n  tooltipTimeFormat: {showSeconds: false, showTimezone: true},\n};\n\nconst TabularNums = styled.span`\n  font-variant-numeric: tabular-nums;\n`;\n\nconst TimestampTooltip = styled(Tooltip)`\n  cursor: pointer;\n  position: relative;\n  top: 2px;\n  margin-left: 4px;\n`;\n","import {Colors, IconWrapper} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nexport const ClearButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin: 0 -2px 0 0;\n  padding: 2px;\n\n  ${IconWrapper} {\n    background-color: ${Colors.Gray400};\n    transition: background-color 100ms linear;\n  }\n\n  :hover ${IconWrapper}, :focus ${IconWrapper} {\n    background-color: ${Colors.Gray700};\n  }\n\n  :active ${IconWrapper} {\n    background-color: ${Colors.Dark};\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {Intent, PopoverPosition} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  Icon,\n  MenuItem,\n  Menu,\n  Popover,\n  TextInput,\n  Tooltip,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport uniq from 'lodash/uniq';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {dynamicKeyWithoutIndex, isDynamicStep} from '../gantt/DynamicStepSupport';\nimport {GraphExplorerSolidFragment} from '../pipelines/types/GraphExplorer.types';\nimport {workspacePipelinePath} from '../workspace/workspacePath';\n\ninterface GraphQueryInputProps {\n  intent?: Intent;\n  items: GraphQueryItem[];\n  value: string;\n  placeholder: string;\n  autoFocus?: boolean;\n  presets?: {name: string; value: string}[];\n  width?: string | number;\n  popoverPosition?: PopoverPosition;\n  className?: string;\n  disabled?: boolean;\n\n  linkToPreview?: {\n    repoName: string;\n    repoLocation: string;\n    pipelineName: string;\n    isJob: boolean;\n  };\n\n  flattenGraphsEnabled?: boolean;\n  flattenGraphs?: boolean;\n  setFlattenGraphs?: () => void;\n  onChange: (value: string) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onFocus?: () => void;\n  onBlur?: (value: string) => void;\n  autoApplyChanges?: boolean;\n}\n\ninterface ActiveSuggestionInfo {\n  text: string;\n  idx: number;\n}\n\ninterface SuggestionItem {\n  name: string;\n  isGraph: boolean;\n}\n\n/** Generates placeholder text for the solid query box that includes a\n * practical example from the current DAG by finding the solid with the highest\n * number of immediate input or output connections and randomly highlighting\n * either the ++solid or solid++ or solid+* syntax.\n */\nconst placeholderTextForItems = (base: string, items: GraphQueryItem[]) => {\n  const seed = items.length % 3;\n\n  let placeholder = base;\n  if (items.length === 0) {\n    return placeholder;\n  }\n\n  const ranked = items.map<{\n    incount: number;\n    outcount: number;\n    name: string;\n  }>((s) => ({\n    incount: s.inputs.reduce((sum, o) => sum + o.dependsOn.length, 0),\n    outcount: s.outputs.reduce((sum, o) => sum + o.dependedBy.length, 0),\n    name: s.name,\n  }));\n\n  if (seed === 0) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+*)`;\n  } else if (seed === 1) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+)`;\n  } else if (seed === 2) {\n    const example = ranked.sort((a, b) => b.incount - a.incount)[0];\n    placeholder = `${placeholder} (ex: ++${example!.name})`;\n  }\n  return placeholder;\n};\n\nconst intentToStrokeColor = (intent: Intent | undefined) => {\n  switch (intent) {\n    case 'danger':\n      return Colors.Red500;\n    case 'success':\n      return Colors.Green500;\n    case 'warning':\n      return Colors.Yellow500;\n    case 'none':\n    case 'primary':\n    default:\n      return Colors.Gray300;\n  }\n};\n\nconst buildSuggestions = (\n  lastElementName: string,\n  items: GraphQueryItem[] | GraphExplorerSolidFragment[],\n  suffix: string,\n) => {\n  const available: SuggestionItem[] = items.map((item) => {\n    const solidItem = item as GraphExplorerSolidFragment;\n    const isGraph =\n      solidItem.definition && solidItem.definition.__typename === 'CompositeSolidDefinition';\n\n    return {name: item.name, isGraph};\n  });\n\n  for (const item of available) {\n    if (isDynamicStep(item.name)) {\n      available.push({name: dynamicKeyWithoutIndex(item.name), isGraph: item.isGraph});\n    }\n  }\n\n  const lastElementLower = lastElementName?.toLowerCase();\n  const matching =\n    lastElementLower && !suffix\n      ? uniq(available)\n          .sort()\n          .filter((n) => n.name.toLowerCase().startsWith(lastElementLower))\n      : [];\n\n  // No need to show a match if our string exactly matches the one suggestion.\n  if (matching.length === 1 && matching[0]!.name.toLowerCase() === lastElementLower) {\n    return [];\n  }\n\n  return matching;\n};\n\nexport const GraphQueryInput = React.memo(\n  React.forwardRef((props: GraphQueryInputProps, ref) => {\n    const [active, setActive] = React.useState<ActiveSuggestionInfo | null>(null);\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [pendingValue, setPendingValue] = React.useState<string>(props.value);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const flattenGraphsEnabled = props.flattenGraphsEnabled || false;\n\n    React.useEffect(() => {\n      // props.value is our source of truth, but we hold \"un-committed\" changes in\n      // pendingValue while the field is being edited. Ensure the pending value\n      // is synced whenever props.value changes.\n      setPendingValue(props.value);\n    }, [props.value]);\n\n    const lastClause = /(\\*?\\+*)([\\w\\d\\[\\]>_\\/-]+)(\\+*\\*?)$/.exec(pendingValue);\n\n    const [, prefix, lastElementName, suffix] = lastClause || [];\n    const suggestions = React.useMemo(\n      () => buildSuggestions(lastElementName!, props.items, suffix!),\n      [lastElementName, props.items, suffix],\n    );\n\n    const onConfirmSuggestion = (suggestion: string) => {\n      const preceding = lastClause ? pendingValue.substr(0, lastClause.index) : '';\n      setPendingValue(preceding + prefix + `\"${suggestion}\"` + suffix);\n    };\n\n    React.useEffect(() => {\n      if (!active) {\n        return;\n      }\n      // Relocate the currently active item in the latest suggestions list\n      const pos = suggestions.map((a) => a.name).findIndex((a) => a === active.text);\n\n      // The new index is the index of the active item, or whatever item\n      // is now at it's location if it's gone, bounded to the array.\n      let nextIdx = pos !== -1 ? pos : active.idx;\n      nextIdx = Math.max(0, Math.min(suggestions.length - 1, nextIdx));\n      if (!suggestions[nextIdx]) {\n        return;\n      }\n      const nextText = suggestions[nextIdx]!.name;\n\n      if (nextIdx !== active.idx || nextText !== active.text) {\n        setActive({text: nextText, idx: nextIdx});\n      }\n    }, [active, suggestions]);\n\n    React.useImperativeHandle(ref, () => ({\n      focus() {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      },\n    }));\n\n    const onKeyDown = (e: React.KeyboardEvent<any>) => {\n      if (e.key === 'Enter' || e.key === 'Return' || e.key === 'Tab') {\n        if (active && active.text) {\n          onConfirmSuggestion(active.text);\n          e.preventDefault();\n          e.stopPropagation();\n        } else {\n          e.currentTarget.blur();\n        }\n        setActive(null);\n      }\n\n      // The up/down arrow keys shift selection in the dropdown.\n      // Note: The first down arrow press activates the first item.\n      const shift = {ArrowDown: 1, ArrowUp: -1}[e.key];\n      if (shift && suggestions.length > 0) {\n        e.preventDefault();\n        let idx = (active ? active.idx : -1) + shift;\n        idx = Math.max(0, Math.min(idx, suggestions.length - 1));\n        setActive({text: suggestions[idx]!.name, idx});\n      }\n\n      props.onKeyDown?.(e);\n    };\n\n    const OpSelectionWrapperDivRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n      const clickListener = (event: MouseEvent) => {\n        const OpSelectionWrapperDivElement = OpSelectionWrapperDivRef.current;\n        const inputElement = inputRef.current;\n        const {target} = event;\n\n        if (!flattenGraphsEnabled) {\n          return;\n        }\n        // Make TypeScript happy\n        if (\n          OpSelectionWrapperDivElement == null ||\n          inputElement == null ||\n          !(target instanceof Node)\n        ) {\n          return;\n        }\n\n        // `true` if user clicked on either the `OpSelectionWrapperDivElement` itself, or its descendant\n        const shouldWrapperGetFocus = OpSelectionWrapperDivElement.contains(target);\n        setFocused(shouldWrapperGetFocus);\n\n        const shouldTextInputGetFocus = inputElement.contains(target);\n        if (shouldTextInputGetFocus) {\n          inputElement.focus();\n        }\n      };\n\n      document.addEventListener('click', clickListener);\n\n      return () => {\n        document.removeEventListener('click', clickListener);\n      };\n    }, [flattenGraphsEnabled]);\n\n    const uncomitted = (pendingValue || '*') !== (props.value || '*');\n    const flattenGraphsFlag = props.flattenGraphs ? '!' : '';\n\n    const opCountInfo = props.linkToPreview && (\n      <OpCountWrap $hasWrap={flattenGraphsEnabled}>\n        {`${filterByQuery(props.items, pendingValue).all.length} matching ops`}\n        <Link\n          target=\"_blank\"\n          style={{display: 'flex', alignItems: 'center', gap: 4}}\n          onMouseDown={(e) => e.currentTarget.click()}\n          to={workspacePipelinePath({\n            ...props.linkToPreview,\n            pipelineName: `${props.linkToPreview.pipelineName}~${flattenGraphsFlag}${pendingValue}`,\n          })}\n        >\n          Graph Preview <Icon color={Colors.Link} name=\"open_in_new\" />\n        </Link>\n      </OpCountWrap>\n    );\n\n    return (\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n        <Popover\n          enforceFocus={!flattenGraphsEnabled} // Defer focus to be manually managed\n          isOpen={focused}\n          position={props.popoverPosition || 'top-left'}\n          content={\n            suggestions.length ? (\n              <Menu style={{width: props.width || '24vw'}}>\n                {suggestions.slice(0, 15).map((suggestion) => (\n                  <MenuItem\n                    icon={suggestion.isGraph ? 'job' : 'op'}\n                    key={suggestion.name}\n                    text={suggestion.name}\n                    active={active ? active.text === suggestion.name : false}\n                    onMouseDown={(e: React.MouseEvent<any>) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      onConfirmSuggestion(suggestion.name);\n                    }}\n                  />\n                ))}\n              </Menu>\n            ) : (\n              <div />\n            )\n          }\n        >\n          <div style={{position: 'relative'}} ref={OpSelectionWrapperDivRef}>\n            <TextInput\n              disabled={props.disabled}\n              value={pendingValue}\n              icon=\"op_selector\"\n              strokeColor={intentToStrokeColor(props.intent)}\n              autoFocus={props.autoFocus}\n              placeholder={placeholderTextForItems(props.placeholder, props.items)}\n              onChange={(e: React.ChangeEvent<any>) => {\n                setPendingValue(e.target.value);\n                props.autoApplyChanges && props.onChange(e.target.value);\n              }}\n              onFocus={() => {\n                if (!flattenGraphsEnabled) {\n                  // Defer focus to be manually managed\n                  setFocused(true);\n                }\n                props.onFocus?.();\n              }}\n              onBlur={() => {\n                if (!flattenGraphsEnabled) {\n                  // Defer focus to be manually managed\n                  setFocused(false);\n                }\n                props.onChange(pendingValue);\n                props.onBlur?.(pendingValue);\n              }}\n              onKeyDown={onKeyDown}\n              style={{\n                width: props.width || '24vw',\n                paddingRight: focused && uncomitted ? 55 : '',\n              }}\n              className={props.className}\n              ref={inputRef}\n            />\n            {focused && uncomitted && <EnterHint>Enter</EnterHint>}\n            {focused &&\n              props.linkToPreview &&\n              (flattenGraphsEnabled ? (\n                <OpInfoWrap>\n                  <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n                    <Checkbox\n                      label=\"Flatten subgraphs\"\n                      checked={props.flattenGraphs ?? false}\n                      onChange={() => {\n                        props.setFlattenGraphs?.();\n                      }}\n                      format=\"switch\"\n                    />\n                    <Tooltip\n                      content=\"Flatten subgraphs to select ops within nested graphs\"\n                      placement=\"right\"\n                    >\n                      <Icon name=\"info\" color={Colors.Gray500} />\n                    </Tooltip>\n                  </Box>\n                  {opCountInfo}\n                </OpInfoWrap>\n              ) : (\n                opCountInfo\n              ))}\n          </div>\n        </Popover>\n        {props.presets &&\n          (props.presets.find((p) => p.value === pendingValue) ? (\n            <Button\n              icon={<Icon name=\"layers\" />}\n              rightIcon={<Icon name=\"cancel\" />}\n              onClick={() => props.onChange('*')}\n              intent=\"none\"\n            />\n          ) : (\n            <Popover\n              position=\"top\"\n              content={\n                <Menu>\n                  {props.presets.map((preset) => (\n                    <MenuItem\n                      key={preset.name}\n                      text={preset.name}\n                      onMouseDown={(e: React.MouseEvent<any>) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        props.onChange(preset.value);\n                      }}\n                    />\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                icon={<Icon name=\"layers\" />}\n                rightIcon={<Icon name=\"expand_less\" />}\n                intent=\"none\"\n              />\n            </Popover>\n          ))}\n      </Box>\n    );\n  }),\n\n  (prevProps, nextProps) =>\n    prevProps.items === nextProps.items &&\n    prevProps.width === nextProps.width &&\n    prevProps.value === nextProps.value &&\n    isEqual(prevProps.presets, nextProps.presets),\n);\n\nconst OpInfoWrap = styled.div`\n  width: 350px;\n  padding: 10px 16px 10px 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  position: absolute;\n  top: 100%;\n  margin-top: 2px;\n  font-size: 0.85rem;\n  background: ${Colors.White};\n  color: ${Colors.Gray600};\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);\n  z-index: 2;\n  left: 0;\n`;\n\nconst OpCountWrap = styled(OpInfoWrap)<{$hasWrap: boolean}>`\n  margin-top: ${(p) => (p.$hasWrap ? 0 : 2)}px;\n`;\n\nconst EnterHint = styled.div`\n  position: absolute;\n  right: 6px;\n  top: 5px;\n  border-radius: 5px;\n  border: 1px solid ${Colors.Gray500};\n  background: ${Colors.White};\n  font-weight: 500;\n  font-size: 12px;\n  color: ${Colors.Gray500};\n  padding: 2px 6px;\n`;\n","const compactFormatter = new Intl.NumberFormat(navigator.language, {\n  compactDisplay: 'short',\n  notation: 'compact',\n});\n\nexport const numberFormatter = new Intl.NumberFormat(navigator.language, {});\n\nexport const compactNumber = (num: number | bigint): string => compactFormatter.format(num);\n","import * as React from 'react';\n\nimport {BaseButton} from './BaseButton';\nimport {JoinedButtons} from './Button';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Tooltip} from './Tooltip';\n\nexport type ButtonGroupItem<T> = {\n  id: T;\n  label?: React.ReactNode;\n  icon?: IconName;\n  tooltip?: string;\n};\n\ninterface Props<T> {\n  activeItems?: Set<T>;\n  buttons: ButtonGroupItem<T>[];\n  onClick: (id: T, e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const ButtonGroup = <T extends string | number>(props: Props<T>) => {\n  const {activeItems, buttons, onClick} = props;\n  return (\n    <JoinedButtons>\n      {buttons.map((button) => {\n        const {id, icon, label, tooltip} = button;\n        const isActive = activeItems?.has(id);\n        const buttonElement = (\n          <BaseButton\n            key={id}\n            fillColor={isActive ? Colors.Gray200 : Colors.White}\n            textColor={isActive ? Colors.Gray900 : Colors.Gray700}\n            icon={\n              icon ? <Icon name={icon} color={isActive ? Colors.Gray900 : Colors.Gray700} /> : null\n            }\n            label={label}\n            onClick={(e) => onClick(id, e)}\n          />\n        );\n\n        if (tooltip) {\n          return (\n            <Tooltip content={tooltip} position=\"top\" key={id}>\n              {buttonElement}\n            </Tooltip>\n          );\n        }\n\n        return buttonElement;\n      })}\n    </JoinedButtons>\n  );\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Button} from './Button';\nimport {Icon} from './Icon';\n\nexport interface CursorPaginationProps {\n  hasPrevCursor: boolean;\n  hasNextCursor: boolean;\n  popCursor: () => void;\n  advanceCursor: () => void;\n  reset: () => void;\n}\n\nexport const CursorPaginationControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button disabled={!hasPrevCursor} icon={<Icon name=\"arrow_back\" />} onClick={popCursor}>\n        Previous\n      </Button>\n      <Button\n        disabled={!hasNextCursor}\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        onClick={advanceCursor}\n      >\n        Next\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorHistoryControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button icon={<Icon name=\"arrow_back\" />} disabled={!hasPrevCursor} onClick={popCursor}>\n        <span className=\"hideable-button-text\">Newer</span>\n      </Button>\n      <Button\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        disabled={!hasNextCursor}\n        onClick={advanceCursor}\n      >\n        <span className=\"hideable-button-text\">Older</span>\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorControlsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  margin-top: 16px;\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Slider as BlueprintSlider,\n  MultiSlider as BlueprintMultiSlider,\n  SliderProps,\n  MultiSliderProps,\n} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\n\nexport const Slider: React.FC<SliderProps & {fillColor?: string}> = ({\n  fillColor = Colors.Gray600,\n  ...rest\n}) => {\n  return <StyledSlider {...rest} intent=\"none\" $fillColor={fillColor} />;\n};\n\nexport const MultiSlider: React.FC<\n  MultiSliderProps & {fillColor?: string; children: React.ReactNode}\n> & {\n  Handle: typeof BlueprintMultiSlider.Handle;\n} = ({fillColor = Colors.Gray600, ...rest}) => {\n  return <StyledMultiSlider {...rest} intent=\"none\" $fillColor={fillColor} />;\n};\n\nMultiSlider.Handle = BlueprintMultiSlider.Handle;\n\nexport const SliderStyles = css<{$fillColor: string}>`\n  .bp4-slider-track {\n    height: 8px;\n    .bp4-slider-progress {\n      background-color: ${(p) => p.$fillColor};\n      opacity: 0.2;\n      height: 8px;\n    }\n    .bp4-slider-progress.bp4-intent-primary {\n      background-color: ${(p) => p.$fillColor};\n      opacity: 1;\n      height: 8px;\n    }\n  }\n  &.bp4-vertical {\n    width: 20px;\n    min-width: 20px;\n  }\n  &.bp4-vertical .bp4-slider-track,\n  &.bp4-vertical .bp4-slider-track .bp4-slider-progress {\n    height: initial;\n    width: 8px;\n  }\n  .bp4-slider-handle {\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    border: 2px solid ${Colors.Gray300};\n    background: ${Colors.White};\n    box-shadow: none;\n    &:hover {\n      border: 2px solid ${Colors.Gray400};\n      box-shadow: rgba(0, 0, 0, 0.12) 0px 2px 12px 0px;\n    }\n\n    .bp4-slider-label {\n      background: ${Colors.Gray900};\n      box-shadow: 0 1px 4px rgba(0,0,0,0.15)\n      padding: 4px 8px;\n    }\n  }\n`;\n\nconst StyledMultiSlider = styled(BlueprintMultiSlider)<{$fillColor: string}>`\n  ${SliderStyles}\n`;\nconst StyledSlider = styled(BlueprintSlider)<{$fillColor: string}>`\n  ${SliderStyles}\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Button} from './Button';\nimport {ButtonGroup} from './ButtonGroup';\nimport {Colors} from './Colors';\nimport {Icon} from './Icon';\n\nconst DIVIDER_THICKNESS = 2;\n\ninterface SplitPanelContainerProps {\n  axis?: 'horizontal' | 'vertical';\n  identifier: string;\n  first: React.ReactNode;\n  firstInitialPercent: number;\n  firstMinSize?: number;\n  second: React.ReactNode | null; // Note: pass null to hide / animate away the second panel\n}\n\ninterface SplitPanelContainerState {\n  size: number;\n  key: string;\n  resizing: boolean;\n}\n\nexport class SplitPanelContainer extends React.Component<\n  SplitPanelContainerProps,\n  SplitPanelContainerState\n> {\n  constructor(props: SplitPanelContainerProps) {\n    super(props);\n\n    const key = `dagit.panel-width.${this.props.identifier}`;\n    const value = window.localStorage.getItem(key);\n    let size = Number(value);\n    if (value === null || isNaN(size)) {\n      size = this.props.firstInitialPercent;\n    }\n\n    this.state = {size, key, resizing: false};\n  }\n\n  onChangeSize = (size: number) => {\n    this.setState({size});\n    window.localStorage.setItem(this.state.key, `${size}`);\n  };\n\n  render() {\n    const {firstMinSize, first, second} = this.props;\n    const {size: _size, resizing} = this.state;\n    const axis = this.props.axis || 'horizontal';\n\n    const firstPaneStyles: React.CSSProperties = {flexShrink: 0};\n    const firstSize = second ? _size : 100;\n\n    // Note: The divider appears after the first panel, so making the first panel 100% wide\n    // hides the divider offscreen. To prevent this, we subtract the divider depth.\n    if (axis === 'horizontal') {\n      firstPaneStyles.minWidth = firstMinSize;\n      firstPaneStyles.width = `calc(${firstSize}% - ${DIVIDER_THICKNESS}px)`;\n    } else {\n      firstPaneStyles.minHeight = firstMinSize;\n      firstPaneStyles.height = `calc(${firstSize}% - ${DIVIDER_THICKNESS}px)`;\n    }\n\n    return (\n      <Container axis={axis} id=\"split-panel-container\" resizing={resizing}>\n        <div className=\"split-panel\" style={firstPaneStyles}>\n          {first}\n        </div>\n        <PanelDivider\n          axis={axis}\n          resizing={resizing}\n          onSetResizing={(resizing) => this.setState({resizing})}\n          onMove={this.onChangeSize}\n        />\n        <div className=\"split-panel\" style={{flex: 1}}>\n          {second}\n        </div>\n      </Container>\n    );\n  }\n}\n\ninterface IDividerProps {\n  axis: 'horizontal' | 'vertical';\n  resizing: boolean;\n  onSetResizing: (resizing: boolean) => void;\n  onMove: (vw: number) => void;\n}\n\nclass PanelDivider extends React.Component<IDividerProps> {\n  ref = React.createRef<any>();\n\n  onMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    this.props.onSetResizing(true);\n\n    const onMouseMove = (event: MouseEvent) => {\n      const parent = this.ref.current?.closest('#split-panel-container');\n      if (!parent) {\n        return;\n      }\n      const parentRect = parent.getBoundingClientRect();\n\n      const firstPanelPercent =\n        this.props.axis === 'horizontal'\n          ? ((event.clientX - parentRect.left) * 100) / parentRect.width\n          : ((event.clientY - parentRect.top) * 100) / parentRect.height;\n\n      this.props.onMove(Math.min(100, Math.max(0, firstPanelPercent)));\n    };\n\n    const onMouseUp = () => {\n      this.props.onSetResizing(false);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  };\n\n  render() {\n    const Wrapper = DividerWrapper[this.props.axis];\n    const HitArea = DividerHitArea[this.props.axis];\n    return (\n      <Wrapper resizing={this.props.resizing} ref={this.ref}>\n        <HitArea onMouseDown={this.onMouseDown} />\n      </Wrapper>\n    );\n  }\n}\n\ninterface PanelToggleProps {\n  axis: 'horizontal' | 'vertical';\n  container: React.RefObject<SplitPanelContainer>;\n}\n\nexport const FirstOrSecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  const onClick = (id: string) => {\n    let size = 50;\n    if (id === 'first-pane') {\n      size = 100;\n    } else if (id === 'second-pane') {\n      size = 0;\n    }\n    container.current?.onChangeSize(size);\n  };\n\n  return (\n    <ButtonGroup\n      buttons={[\n        {\n          id: 'first-pane',\n          icon: axis === 'vertical' ? 'panel_show_top' : 'panel_show_left',\n          tooltip: axis === 'vertical' ? 'Show only top pane' : 'Show only left pane',\n        },\n        {\n          id: 'split',\n          icon: 'panel_show_both',\n          tooltip: 'Show both panes',\n        },\n        {\n          id: 'second-pane',\n          icon: axis === 'vertical' ? 'panel_show_bottom' : 'panel_show_right',\n          tooltip: axis === 'vertical' ? 'Show only bottom pane' : 'Show only right pane',\n        },\n      ]}\n      onClick={onClick}\n    />\n  );\n};\n\n// Todo: This component attempts to sync itself with the container, but it can't\n// observe the container's width without a React context or adding a listener, etc.\n// If we keep making components that manipulate panel state we may want to move it\n// all to a context consumed by both.\n//\nexport const SecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  const [prevSize, setPrevSize] = React.useState<number | 'unknown'>('unknown');\n  const initialIsOpen = (container.current?.state.size || 0) < 100;\n\n  const [open, setOpen] = React.useState<boolean>(initialIsOpen);\n  React.useEffect(() => setOpen(initialIsOpen), [initialIsOpen]);\n\n  return (\n    <Button\n      active={open}\n      title=\"Toggle second pane\"\n      icon={\n        <Icon\n          name={\n            axis === 'horizontal'\n              ? open\n                ? 'panel_hide_right'\n                : 'panel_show_right'\n              : 'panel_show_bottom'\n          }\n        />\n      }\n      onClick={() => {\n        if (!container.current) {\n          return;\n        }\n        const current = container.current.state.size;\n        if (current < 90) {\n          setPrevSize(current);\n          setOpen(false);\n          container.current.onChangeSize(100);\n        } else {\n          setOpen(true);\n          container.current.onChangeSize(\n            prevSize === 'unknown' ? container.current.props.firstInitialPercent : prevSize,\n          );\n        }\n      }}\n    />\n  );\n};\n\n// Note: -1px margins here let the divider cover the last 1px of the previous box, hiding\n// any scrollbar border it might have.\n\nconst DividerWrapper = {\n  horizontal: styled.div<{resizing: boolean}>`\n    width: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${(p) => (p.resizing ? Colors.Gray400 : Colors.KeylineGray)};\n    margin-left: -1px;\n    overflow: visible;\n    position: relative;\n  `,\n  vertical: styled.div<{resizing: boolean}>`\n    height: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${(p) => (p.resizing ? Colors.Gray400 : Colors.KeylineGray)};\n    margin-top: -1px;\n    overflow: visible;\n    position: relative;\n  `,\n};\n\nconst DividerHitArea = {\n  horizontal: styled.div`\n    width: 17px;\n    height: 100%;\n    z-index: 1;\n    cursor: ew-resize;\n    position: relative;\n    left: -8px;\n  `,\n  vertical: styled.div`\n    height: 17px;\n    width: 100%;\n    z-index: 1;\n    cursor: ns-resize;\n    position: relative;\n    top: -8px;\n  `,\n};\n\nconst Container = styled.div<{\n  axis?: 'horizontal' | 'vertical';\n  resizing: boolean;\n}>`\n  display: flex;\n  overflow: hidden;\n  flex-direction: ${({axis}) => (axis === 'vertical' ? 'column' : 'row')};\n  flex: 1 1;\n  width: 100%;\n  min-width: 0;\n  min-height: 0;\n\n  .split-panel {\n    position: relative;\n    transition: ${({axis, resizing}) =>\n      resizing ? 'none' : axis === 'horizontal' ? 'width' : 'height'}\n      200ms ease-out;\n    flex-direction: column;\n    display: flex;\n    min-${({axis}) => (axis === 'vertical' ? 'height' : 'width')}: 0;\n    z-index: 0;\n  }\n`;\n","import animate from 'amator';\nimport * as React from 'react';\n\nexport interface Viewport {\n  left: number; // Note: pixel values\n  top: number;\n  width: number;\n  height: number;\n}\n\ntype ContainerRef = {\n  element: HTMLDivElement;\n  __sized: boolean;\n};\n\n/**\n * useViewport is a React hook that exposes a viewport (top/left/width/height)\n * representing the currently visible region of a scrolling contaienr <div>.\n * It uses a ResizeObserver and an onScroll handler to monitor the viewport of the\n * container. To use, spread the returned `containerProps` onto the container div.\n */\nexport const useViewport = (\n  options: {\n    initialOffset?: (el: HTMLElement) => {left: number; top: number};\n  } = {},\n) => {\n  const ref = React.useRef<ContainerRef>();\n  const [offset, setOffset] = React.useState<{left: number; top: number}>({\n    left: 0,\n    top: 0,\n  });\n  const [size, setSize] = React.useState<{width: number; height: number}>({\n    width: 0,\n    height: 0,\n  });\n\n  const {initialOffset} = options;\n\n  // Monitor the container for size changes (if possible, otherwise fall back)\n  // to capturing the initial size only. (Only old FF).\n  const measureRef = React.useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const onApplySize = (next: {width: number; height: number}) => {\n      setSize({width: next.width, height: next.height});\n      const container = ref.current;\n      if (container) {\n        const {element, __sized} = container;\n        if (!__sized && next.width !== 0 && initialOffset) {\n          const targetOffset = initialOffset(element);\n          element.scrollTop = targetOffset.top;\n          element.scrollLeft = targetOffset.left;\n          setOffset(targetOffset);\n          container.__sized = true;\n        }\n      }\n    };\n\n    const container = ref.current;\n    const {element} = container;\n\n    let resizeObserver: any;\n    if (element instanceof HTMLElement) {\n      if ('ResizeObserver' in window) {\n        resizeObserver = new window['ResizeObserver']((entries: ResizeObserverEntry[]) => {\n          window.requestAnimationFrame(() => {\n            const target = entries[0]?.target;\n            if (target === element) {\n              onApplySize({width: element.clientWidth, height: element.clientHeight});\n            }\n          });\n        });\n        resizeObserver.observe(element);\n      } else {\n        if (process.env.NODE_ENV !== 'test') {\n          console.warn(`No ResizeObserver support, or useViewport is attached to a non-DOM node?`);\n        }\n        onApplySize({width: element.clientWidth, height: element.clientHeight});\n      }\n    }\n    return () => {\n      resizeObserver?.disconnect();\n    };\n  }, [initialOffset]);\n\n  React.useEffect(measureRef, [measureRef]);\n\n  // Monitor the container for scroll offset changes\n  const animation = React.useRef<any>(null);\n\n  const onScroll = (e: React.UIEvent) => {\n    if (\n      Math.floor(offset.left) === e.currentTarget.scrollLeft &&\n      Math.floor(offset.top) === e.currentTarget.scrollTop\n    ) {\n      return;\n    }\n    if (animation.current) {\n      animation.current.cancel();\n    }\n    setOffset({\n      left: e.currentTarget.scrollLeft,\n      top: e.currentTarget.scrollTop,\n    });\n  };\n\n  const onMoveToViewport = (targetOffset: {left: number; top: number}, animated: boolean) => {\n    const element = ref.current?.element;\n\n    if (!element) {\n      return;\n    }\n\n    const width = element.clientWidth;\n    const height = element.clientHeight;\n\n    if (animation.current) {\n      animation.current.cancel();\n      animation.current = null;\n    }\n\n    targetOffset.left = Math.min(element.scrollWidth - width, Math.max(0, targetOffset.left));\n    targetOffset.top = Math.min(element.scrollHeight - height, Math.max(0, targetOffset.top));\n\n    const onDone = () => {\n      element.scrollTop = targetOffset.top;\n      element.scrollLeft = targetOffset.left;\n      setOffset(targetOffset);\n      animation.current = null;\n    };\n    if (animated) {\n      animation.current = animate(offset, targetOffset, {\n        step: (v: any) => {\n          element.scrollTop = v.top;\n          element.scrollLeft = v.left;\n          setOffset({left: v.left, top: v.top});\n        },\n        done: onDone,\n      });\n    } else {\n      onDone();\n    }\n  };\n\n  // There are scenarios where the exported `container ref` isn't attached to a component immediately\n  // (eg the parent is showing a loading state). This means it may be undefined during our initial render\n  // and we need to measure it when it's actually assigned a value.\n  const setRef = React.useCallback(\n    (el: HTMLDivElement) => {\n      if (el === ref.current?.element) {\n        return;\n      }\n\n      ref.current = {\n        element: el,\n        __sized: false,\n      };\n      measureRef();\n    },\n    [measureRef],\n  );\n\n  return {\n    viewport: {...offset, ...size} as Viewport,\n    containerProps: {\n      ref: setRef,\n      onScroll,\n    },\n    onMoveToViewport,\n  };\n};\n"],"names":["MAX_RENDERED_FOR_EMPTY_QUERY","GraphTraverser","items","_this","_classCallCheck","itemNameMap","forEach","item","name","_createClass","key","value","this","step","depth","_this2","results","arguments","length","undefined","next","traverse","Object","values","_this3","callback","inputs","input","dependsOn","d","itemNamed","solid","_this4","outputs","output","dependedBy","expansionDepthForClause","clause","includes","Number","MAX_SAFE_INTEGER","filterByQuery","query","all","applyingEmptyDefault","focus","_step","traverser","Set","clauses","split","_iterator","_createForOfIteratorHelper","_loop","parts","exec","trim","_step2","_parts","_slicedToArray","_parts$","parentsClause","_parts$2","itemName","_parts$3","descendentsClause","itemsMatching","filter","s","isPlannedDynamicStep","replace","startsWith","dynamicKeyWithoutIndex","test","_iterator2","n","done","upDepth","downDepth","add","fetchUpstream","other","fetchDownstream","err","e","f","Array","from","GanttChartMode","MIN_SCALE","MAX_SCALE","LEFT_INSET","TOP_INSET","BOTTOM_INSET","FLAT_INSET_FROM_PARENT","BOX_HEIGHT","BOX_MARGIN_Y","BOX_SPACING_X","BOX_WIDTH","BOX_DOT_WIDTH_CUTOFF","BOX_SHOW_LABEL_WIDTH_CUTOFF","BOX_DOT_SIZE","BOX_DOT_MARGIN_Y","LINE_SIZE","CSS_DURATION","DEFAULT_OPTIONS","mode","WATERFALL","hideWaiting","hideTimedMode","zoom","hideUnselectedSteps","isDynamicStep","stepKey","endsWith","invocationsOfPlannedDynamicStep","plannedStepKey","runtimeStepKeys","k","replacePlannedIndex","stepKeyWithIndex","match","highlightTimer","GanttChartModeControl","React","_ref","onChange","buttons","id","icon","tooltip","push","activeItems","onClick","_jsx","ButtonGroup","ONE_MIN","subsecondResolutionLabel","ms","formatElapsedTime","concat","toFixed","secondResolutionLabel","minuteResolutionLabel","Math","round","hourResolutionLabel","TICK_CONFIG","tickIntervalMs","tickLabels","GanttChartTimescale","scale","viewport","nowMs","startMs","highlightedMs","layoutSize","transform","left","ticks","lines","pxPerMs","tickConfig","find","t","pxPerTick","tickMs","floor","tickX","width","label","className","style","TICK_LABEL_WIDTH","children","_jsxs","TimescaleContainer","TimescaleTicksContainer","map","idx","timeX","labelOffset","TimescaleLinesContainer","height","max","styled","displayName","componentId","Colors","TICKS_ROW_HEIGHT","FontFamily","ZoomSlider","props","ZoomSliderContainer","$fillColor","onMouseDown","initialX","rect","currentTarget","closest","getBoundingClientRect","target","HTMLElement","classList","contains","pageX","onUpdate","nextValue","min","document","addEventListener","onRelease","removeEventListener","right","top","tabIndex","SliderStyles","validateSavedMode","storedValue","HIGHLIGHT_TIME_EVENT","setHighlightedGanttChartTime","timestamp","debounced","clearTimeout","setTimeout","dispatchEvent","CustomEvent","detail","GanttChart","graph","onSetSelection","options","selection","toolbarActions","_useGanttChartMode","useStateWithStorage","_useGanttChartMode2","setMode","_React$useState","_objectSpread","_React$useState2","state","setState","cachedLayout","cachedLayoutParams","graphFiltered","layoutParams","nodes","layout","names","ns","join","current","buildLayout","updateOptions","changes","onChangeMode","onUpdateQuery","onDoubleClickStep","GanttChartContainer","OptionsContainer","_Fragment","OptionsSpacer","v","Checkbox","marginBottom","checked","flex","GanttChartInner","_useViewport","useViewport","containerProps","onMoveToViewport","_React$useState3","_React$useState4","hoveredStep","setHoveredNodeName","_React$useState5","_React$useState6","hoveredTime","setHoveredTime","_React$useState7","overrideNowTime","Date","now","_React$useState8","setNowMs","metadata","animationRequest","rootServerURI","AppContext","_React$useContext2","WebSocketContext","availability","disabled","status","lostWebsocket","WebSocket","CLOSED","minScale","startedPipelineAt","exp","log","animate","requestAnimationFrame","exitedAt","cancelAnimationFrame","listener","adjustLayoutWithRunMetadata","EMPTY_RUN_METADATA","apply","_toConsumableArray","boxes","b","x","y","node","keys","bounds","boundsForBox","maxX","minX","maxY","minY","focusedTime","sortedSelectedSteps","steps","sort","a","start","firstMeta","lastMeta","end","measurementComplete","content","overflow","position","GanttChartViewportContents","focusedSteps","onClickStep","GraphQueryInputContainer","WebsocketWarning","Box","justifyContent","margin","bottom","Group","direction","spacing","background","padding","vertical","horizontal","alignItems","Icon","color","maxWidth","whiteSpace","FilterInputsBackgroundBox","gap","GraphQueryInput","placeholder","presets","interestingQueriesFor","SplitPanelContainer","identifier","axis","first","firstInitialPercent","second","GanttStatusPanel","onHighlightStep","intersectsViewport","verticalLinesAtXCoord","box","child","childIdx","_metadata$steps$child","boundsForLine","childNotDrawn","childWaiting","overlapAtXCoord","GanttLine","darkened","dotted","depNotDrawn","depIdx","useDot","evt","onDoubleClick","onMouseEnter","onMouseLeave","boxStyleFor","IStepState","Spinner","purpose","truncatedBoxLabel","markers","marker","_ref2","_ref3","aCenterY","bIsDot","bCenterY","straight","_ref4","border","maxXAvoidingOverlap","borderTop","zIndex","borderRight","isEqual","totalPadding","maxLength","withMiddleTruncation","SpinnerWrapper","withConfig","GanttChartLoadingState","_ref5","runId","marginTop","QueuedState","_ref6","run","CancelRunButton","NonIdealState","title","description","action","Link","to","runsPathWithFilters","token","params","g","some","i","o","root","roots","addChildren","deepen","parents","boxesByY","changed","boxesReversed","reverse","highestYParent","onTargetY","r","parentX","willCross","willCauseCrossing","c","_ret","bottomY","_i","_Object$keys","row","reduce","m","_loop2","_y2","ensureSubtreeAfterParentInArray","parent","parentIdx","indexOf","boxIdx","splice","_step3","_iterator3","_step4","seen","added","_iterator4","_step5","out","_iterator5","_loop3","dep","depNode","depBox","depBoxIdx","findIndex","_i2","_added","TextColorForStates","_TextColorForStates","_defineProperty","BackgroundColorForStates","_BackgroundColorForSt","context","positionAndSplitBoxes","positionFor","_loop4","ii","meta","assign","attempts","runBoxes","runIdx","exitState","jj","slice","_cloneLayout","_step6","WeakMap","nextMarkers","nextBoxes","_iterator6","set","get","cloneLayout","xForMs","time","widthForMs","_box","attempt","earliestAllowedX","unstarted","visit","_step7","minXForUnstartedChildren","_iterator7","shift","positionUntimedBoxes","globalMarkers","entries","_step8","_iterator8","stepBox","_metadata$steps$b$nod","_run","Error","errorsQuery","slowStepsQuery","_metadata$steps$k","_metadata$steps$k2","rightmostCompletedBox","_metadata$steps$b$nod2","subsetTitleForRun","stepsTag","tags","DagsterTag","RunGroupPanel","_group$runs","runStatusLastChangedAt","queryResult","useQuery","RUN_GROUP_PANEL_QUERY","variables","notifyOnNetworkStatusChange","data","refetch","useQueryRefreshAtInterval","FIFTEEN_SECONDS","group","runGroupOrError","__typename","fontSize","ButtonLink","underline","showCustomAlert","body","message","runs","unsorted","startTime","SidebarSection","pipelineName","RunGroupRun","selected","ThinLine","RunStatusIndicator","marginLeft","minWidth","display","RunTitle","RootTag","RunTime","RunStateSummary","gql","_templateObject","_taggedTemplateLiteral","PYTHON_ERROR_FRAGMENT","RUN_TIME_FRAGMENT","borderRadius","lineHeight","fontWeight","userSelect","_React$useMemo","preparing","executing","errored","succeeded","notExecuted","_keys","_metadata$steps$_name","renderStepItem","stepName","StepItem","onHover","overflowY","startedProcessAt","EmptyNotice","collapsedByDefault","StepItemContainer","Tooltip","modifiers","preventOverflow","enabled","flip","StepStatusDot","StepLabel","Elapsed","CursorControlsContainer","OptionsDivider","toGraphQueryItems","plan","runtimeStepMetadata","keyExpansionMap","kind","StepKind","every","_runtimeStepMetadata$","nodeTable","stepRuntimeKeys","nodeInput","_step9","upstream","upstreamKeys","_step10","upstreamKey","upstreamOutput","EXECUTION_PLAN_TO_GRAPH_FRAGMENT","_useStateWithStorage","_useStateWithStorage2","open","setOpen","onToggle","CollapsingHeaderBar","SidebarTitleTextWrap","size","Collapse","isOpen","SidebarTitle","SectionHeader","SectionSmallHeader","SidebarSubhead","SectionItemContainer","LogLevel","DefaultLogLevels","Row","highlighted","level","_LogLevel$DEBUG$LogLe","bgcolorForLevel","_LogLevel$DEBUG$LogLe2","StructuredContent","OpColumn","widths","ColumnWidthsContext","String","OpColumnContainer","p","OpColumnTooltipStyle","substr","JSON","stringify","fontFamily","timestampFormat","memoize","timezone","Intl","DateTimeFormat","navigator","language","hour","minute","hourCycle","timeZone","browserTimezone","fractionalSecondFormat","locale","NumberFormat","minimumFractionDigits","maximumFractionDigits","TimestampColumn","runStartTime","stepStartTime","location","useLocation","_React$useContext","TimeContext","canShowTooltip","href","pathname","qs","runElapsedTime","formatElapsedTimeWithMsec","stepElapsedTime","TimestampColumnContainer","canShow","MetadataTable","dark","rows","placement","timeNumber","main","format","fractionalSec","timeString","EventTypeColumn","EventTypeColumnContainer","eventType","OverflowFade","OverflowButtonContainer","OverflowButton","CellTruncationProvider","_React$Component","_inherits","_super","_createSuper","_len","args","_key","call","isOverflowing","contentContainerRef","onView","onExpand","defaultExpand","detectOverflow","firstElementChild","scrollHeight","textContent","ref","forceExpandability","LogsRowStructuredContent","_node$failureMetadata","FailureContent","error","metadataEntries","failureMetadata","errorSource","StepUpForRetryContent","logCaptureSteps","DefaultContent","currentQuery","search","updatedQuery","logType","logs","LogRowStructuredContentTable","eventColor","eventIntent","typeCheck","success","MetadataEntries","expectationResult","AssetMetadataContent","assetKey","operationResult","ignoreQueryPrefix","logFileKey","rawLogsUrl","rawLogsLink","stepKeys","assertUnreachable","Tag","intent","eventTypeToDisplayType","contextMessage","errorMessage","errorStack","errorCause","stack","ErrorSource","errorChain","chainLink","index","isExplicitLink","minimal","DagsterEventType","assetDetailsPathForKey","asOf","assetDashboardLink","MetadataEntryLink","styles","paddingBottom","displayNameForAssetKey","Structured","_this$props","PythonErrorInfo","StructuredMemoizedContent","LOGS_ROW_STRUCTURED_FRAGMENT","METADATA_ENTRY_FRAGMENT","Unstructured","_React$Component2","_super2","_len2","_key2","UnstructuredMemoizedContent","LOGS_ROW_UNSTRUCTURED_FRAGMENT","_templateObject2","List","_List","CellMeasurer","_CellMeasurer","LogsScrollingTable","filterKey","filterStepKeys","table","ColumnWidthsProvider","onWidthsChanged","didResize","Headers","minHeight","AutoSizer","LogsScrollingTableSized","loading","filteredNodes","allNodes","l","logNodeLevel","levels","sinceTime","hasTextFilter","logQuery","textMatchNodes","toLowerCase","hideNonMatches","filterLogs","LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT","list","cache","CellMeasurerCache","defaultHeight","fixedWidth","keyMapper","rowIndex","clientsideKey","isAtBottomOrZero","scrollToBottomObserver","onScroll","scrollTop","clientHeight","atTopAndStarting","atBottom","scrollToTime","alignment","offset","iterations","getOffsetForRow","scrollToPosition","rowRenderer","_this$props$textMatch","focusedTimeMatch","textMatch","lastRowStyles","borderBottom","noContentRenderer","el","ReactDOM","attachScrollToBottomObserver","window","prevProps","_this$props$filteredN","_prevProps$filteredNo","recomputeGridSize","disconnect","clearAll","forceUpdate","listEl","lastHeight","MutationObserver","rowgroupEl","querySelector","observe","attributes","subtree","console","warn","ListEmptyState","deferredMeasurementCache","rowCount","rowHeight","overscanRowCount","_this5","resizeObserver","_this6","measure","RO","contentRect","clientWidth","ColumnWidthsStorageKey","ColumnWidths","getJSONForKey","_","onWidthsChangedFromContext","columnWidths","localStorage","setItem","Provider","Header","isDragging","screenX","onMouseMove","onMouseUp","_this2$props","onResize","handleSide","_this2$state","dir","isDraggable","HeaderContainer","HeaderDragHandle","side","HeaderLabel","HeadersContainer","canTerminate","showDialog","setShowDialog","closeDialog","onComplete","_asyncToGenerator","_regeneratorRuntime","mark","_callee","terminationState","errors","wrap","_context","prev","showSharedToaster","stop","_x","Button","TerminationDialog","onClose","selectedRuns","stepSelectionWithState","stepStates","_metadata$steps$key","present","failed","finished","stepState","canRunAllSteps","doneStatuses","canRunFromFailure","executionPlan","failedStatuses","RunActionButtons","_run$executionPlan","_run$tags","onLaunch","artifactsPersisted","jobError","useJobAvailabilityErrorForRun","currentRunSelection","tag","stepSelectionFromRunTags","currentRunIsFromFailure","full","scope","type","same","StepSelectionDescription","fromSelected","Promise","resolve","selectionAndDownstreamQuery","selectionKeys","fromFailureEnabled","fromFailure","option","preferredRerun","primary","LaunchButtonDropdown","runCount","hasReExecutePermission","DEFAULT_DISABLED_REASON","paddingLeft","RunContext","timingStringForStatus","RunStatus","LoadingOrValue","TIME_FORMAT","showSeconds","showTimezone","RunDetails","TimestampDisplay","timeFormat","endTime","TimeElapsed","startUnix","endUnix","RunConfigDialog","_run$repositoryOrigin","_run$repositoryOrigin2","isJob","runConfigYaml","visibleDialog","setVisibleDialog","RunsQueryRefetchContext","copy","useCopyToClipboard","history","useHistory","copyConfig","jobPath","workspacePathFromRunDetails","repositoryName","repositoryOrigin","repositoryLocationName","AnchorButton","NO_LAUNCH_PERMISSION_MESSAGE","useDisabledButtonTooltipFix","Popover","Menu","targetTagName","MenuItem","text","hasDeletePermission","Dialog","maxHeight","Subheading","RunTags","CodeMirrorContainer","StyledReadOnlyCodeMirror","lineNumbers","theme","DialogFooter","topBorder","DeletionDialog","workspacePipelinePath","repoName","repoLocation","path","onTerminateInstead","hasTerminatePermission","RUN_DETAILS_FRAGMENT","RUN_FRAGMENT","RUN_DAGSTER_RUN_EVENT_FRAGMENT","RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT","RUN_PAGE_FRAGMENT","_templateObject3","BOX_EXIT_STATES","RETRY_REQUESTED","SUCCEEDED","FAILED","UNKNOWN","firstLogAt","mostRecentLogAt","extractLogCaptureStepsFromLegacySteps","fileKey","fromTimestamp","ts","stepStatusToStepState","StepEventStatus","SKIPPED","refineMarkerEvent","RunMetadataProvider","runMetadata","stepStats","stepStat","transitions","extractMetadataFromRun","upsertMarker","unshift","upsertState","parseInt","_Object$values","RUNNING","markerEvent","markerStart","markerEnd","pid","externalStdoutUrl","externalStderrUrl","PREPARING","op","_Object$values2","extractMetadataFromLogs","typeValues","uniq","getRunFilterProviders","stepNames","tooltipTimeFormat","userTimezone","mainString","timestampToString","unix","TabularNums","TimestampTooltip","defaultProps","DEFAULT_TIME_FORMAT","ClearButton","IconWrapper","placeholderTextForItems","base","seed","ranked","incount","sum","outcount","example","intentToStrokeColor","_props$flattenGraphs","active","setActive","focused","setFocused","pendingValue","setPendingValue","inputRef","flattenGraphsEnabled","lastClause","prefix","lastElementName","suffix","suggestions","available","solidItem","isGraph","definition","lastElementLower","matching","buildSuggestions","onConfirmSuggestion","suggestion","preceding","pos","nextIdx","nextText","OpSelectionWrapperDivRef","clickListener","event","OpSelectionWrapperDivElement","inputElement","Node","shouldWrapperGetFocus","uncomitted","flattenGraphsFlag","flattenGraphs","opCountInfo","linkToPreview","OpCountWrap","$hasWrap","click","enforceFocus","popoverPosition","preventDefault","stopPropagation","TextInput","strokeColor","autoFocus","autoApplyChanges","onFocus","_props$onFocus","onBlur","_props$onBlur","onKeyDown","_props$onKeyDown","blur","ArrowDown","ArrowUp","paddingRight","EnterHint","OpInfoWrap","_props$setFlattenGrap","setFlattenGraphs","rightIcon","preset","nextProps","compactFormatter","compactDisplay","notation","numberFormatter","compactNumber","num","JoinedButtons","button","isActive","has","buttonElement","BaseButton","fillColor","textColor","CursorPaginationControls","hasPrevCursor","hasNextCursor","popCursor","advanceCursor","CursorHistoryControls","Slider","_ref$fillColor","rest","_objectWithoutProperties","_excluded","StyledSlider","BlueprintMultiSlider","css","BlueprintSlider","onChangeSize","getItem","isNaN","resizing","firstMinSize","_this$state","_size","firstPaneStyles","flexShrink","firstSize","Container","PanelDivider","onSetResizing","onMove","_this3$ref$current","parentRect","firstPanelPercent","clientX","clientY","Wrapper","DividerWrapper","HitArea","DividerHitArea","FirstOrSecondPanelToggle","container","_container$current","SecondPanelToggle","_container$current2","prevSize","setPrevSize","initialIsOpen","setOffset","setSize","initialOffset","measureRef","onApplySize","element","__sized","targetOffset","scrollLeft","_entries$","_resizeObserver","animation","setRef","_ref$current2","cancel","animated","_ref$current","scrollWidth","onDone"],"sourceRoot":""}
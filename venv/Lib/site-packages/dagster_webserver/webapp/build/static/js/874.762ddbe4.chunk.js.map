{"version":3,"file":"static/js/874.762ddbe4.chunk.js","mappings":"2MAOaA,EAA0B,WACrC,IAAOC,GAAQC,EAAAA,EAAAA,GAGbC,GAHKF,KAIP,QAAa,OAAJA,QAAI,IAAJA,IAAAA,EAAMG,SAASC,sBAC1B,EAEMF,GAAkCG,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oH,4PCc9BC,EAAwEC,EAAAA,MACnF,SAAAC,GAAiC,IAA/BC,EAAcD,EAAdC,eAAmBC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAClBC,EACJJ,IACyB,WAAxBC,EAAMI,cACHL,EAAeM,kBACfN,EAAeO,mBACrB,OAAIH,GAEAI,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,KAAM,CAACC,UAAW,MAAOC,WAAY,SAAUC,eAAgB,SAAUC,IAAK,GAC9EC,WAAYC,EAAAA,EAAAA,QACZC,MAAO,CAACC,MAAOF,EAAAA,EAAAA,MAAcN,KAAM,EAAGS,UAAW,GAAGC,SAAA,CACrD,gBAECC,EAAAA,EAAAA,KAAA,KACEC,KAAMlB,EACNmB,OAAO,SACPC,IAAI,aACJP,MAAO,CACLC,MAAOF,EAAAA,EAAAA,MACPS,eAAgB,YAChBC,WAAY,EACZC,YAAa,GACbP,SAEDhB,KAEHiB,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,KAAK,cAAcX,MAAOF,EAAAA,EAAAA,MAAcc,KAAM,GAAIb,MAAO,CAACc,UAAW,QAI1E9B,EAAM+B,OAAOC,QAASZ,EAAAA,EAAAA,KAACa,GAAgBC,EAAAA,EAAAA,GAAA,GAAKlC,IAAY,IACjE,IAGImC,EAA0B,QAE1BC,EAAQ,SAACC,GAAS,OACtBA,EAAEL,OAASG,EAA0BE,EAAIA,EAAED,OAAM,QAA0B,EAEvEE,EAAQ,SAACC,EAAmBC,GAChC,OAAKA,EAMEJ,EAHFG,EAGQA,EAAIC,EAFFA,GAHND,GAAK,IAMhB,EAkBME,EAAU,SAACC,EAAcC,GAA2B,IAADC,EAAAC,EAAAC,EACvD,OAAQH,EAAOI,MACb,IAAK,SACH,OAAAb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKQ,GAAK,IACRM,WAAW,EACXC,OAAsB,QAAhBL,EAAED,EAAOO,eAAO,IAAAN,OAAA,EAAdA,EAAgBK,OACxBE,OAAQb,EAAMI,EAAMS,OAAsB,QAAhBN,EAAEF,EAAOO,eAAO,IAAAL,OAAA,EAAdA,EAAgBM,QAC5CC,OAAQd,EAAMI,EAAMU,OAAsB,QAAhBN,EAAEH,EAAOO,eAAO,IAAAJ,OAAA,EAAdA,EAAgBM,UAEhD,IAAK,WACH,OAAAlB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKQ,GACAC,EAAOU,UAEd,IAAK,QACH,OAAAnB,EAAAA,EAAAA,GAAA,GACKoB,GAEP,QACE,OAAOZ,EAEb,EAEMY,EAAsB,CAC1BH,OAAQ,KACRC,OAAQ,KACRH,OAAQ,KACRD,WAAW,GAGPO,EAGD1D,EAAAA,MAAW,SAAA2D,GAA0B,IAAxBzB,EAAMyB,EAANzB,OAAQ0B,EAASD,EAATC,UAaxB,OAZAC,EAAAA,EAAAA,GACEC,EACA,CACEC,YAAa,WACbC,UAAW,CAAC9B,OAAAA,GACZ+B,mBAAoB,SAAAC,GAAyB,IAADC,EAAtBC,EAAgBF,EAAhBE,iBACK,QAAzBD,EAAIC,EAAiB7E,YAAI,IAAA4E,GAArBA,EAAuBE,cACzBT,EAAUQ,EAAiB7E,KAAK8E,aAEpC,IAGG,IACT,IAEMP,GAA6BlE,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wQAchCwE,GAA+B1E,EAAAA,EAAAA,IAAG2E,IAAAA,GAAAzE,EAAAA,EAAAA,GAAA,2NAclC0E,EAAmC,SAAHC,GAM/B,IALLvC,EAAMuC,EAANvC,OACAZ,EAAQmD,EAARnD,SAKAoD,EAA0B1E,EAAAA,WAAiB4C,EAASa,GAAakB,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAA1D7B,EAAK8B,EAAA,GAAEE,EAAQF,EAAA,GAChBG,EAAeC,KAAKC,UAAU9C,GACpClC,EAAAA,WAAgB,WACd6E,EAAS,CAAC3B,KAAM,SAClB,GAAG,CAAC4B,IAEJ,IAAMlB,EAAY5D,EAAAA,aAAkB,SAACqD,GACnCwB,EAAS,CAAC3B,KAAM,SAAUG,QAAAA,GAC5B,GAAG,IACH,OACE3C,EAAAA,EAAAA,MAAAuE,EAAAA,SAAA,CAAA3D,SAAA,EACEC,EAAAA,EAAAA,KAACmC,EAAuB,CAACxB,OAAQA,EAAQ0B,UAAWA,IACnDtC,EAASuB,KAGhB,EAEMqC,EAA4B,SAAHC,GAMxB,IALLjD,EAAMiD,EAANjD,OACAZ,EAAQ6D,EAAR7D,SAKA8D,EAA0BpF,EAAAA,WAAiB4C,EAASa,GAAa4B,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA1DvC,EAAKwC,EAAA,GAAER,EAAQQ,EAAA,GAChBP,EAAeC,KAAKC,UAAU9C,GACpClC,EAAAA,WAAgB,WACd6E,EAAS,CAAC3B,KAAM,SAClB,GAAG,CAAC4B,IACJ,IAAO1B,EAAUP,EAAVO,OAEPkC,GAAoC9F,EAAAA,EAAAA,GAClC+F,EACA,CACEC,6BAA6B,EAC7BxB,UAAW,CAAC9B,OAAAA,EAAQkB,OAAAA,EAAQqC,MA7CV,KA8ClBC,aA7CgB,IA8ChBC,YAAa,SAACpG,GAEZqG,IACAf,EAAS,CAAC3B,KAAM,SAAUG,QAAS9D,EAAK8E,eACxCwB,EAlDc,IAmDhB,IAXGD,EAAWN,EAAXM,YAAaC,EAAYP,EAAZO,aAepB,OAAOtE,EAAAA,EAAAA,KAAA0D,EAAAA,SAAA,CAAA3D,SAAGA,EAASuB,IACrB,EAEM0C,GAAsB3F,EAAAA,EAAAA,IAAGkG,IAAAA,GAAAhG,EAAAA,EAAAA,GAAA,qNAUzBsC,EAA+CpC,EAAAA,MACnD,SAAA+F,GAAgD,IAADC,EAAAC,EAA7C/D,EAAM6D,EAAN7D,OAAQ3B,EAAawF,EAAbxF,cAAe2F,EAAgBH,EAAhBG,iBAChBC,EAAiBnG,EAAAA,WAAiBoG,EAAAA,GAAlCD,cACPE,EAAiCrG,EAAAA,WAAiBsG,EAAAA,IAA3CC,EAAYF,EAAZE,aAAcC,EAAQH,EAARG,SACfC,GAAcjH,EAAAA,EAAAA,GAClB8E,EACA,CACEN,UAAW,CAAC9B,OAAAA,KAIhBlC,EAAAA,WAAgB,WACd,GAAKkG,GAAqBO,EAAYlH,KAAtC,CAGA,IAAMmH,EACc,WAAlBnG,EACIkG,EAAYlH,KAAKoH,qBAAqBC,kBACtCH,EAAYlH,KAAKoH,qBAAqBE,kBAEvCH,IAGDA,EAAmBI,WAAW,KAChCZ,EAAiBC,EAAgBO,GAEjCR,EAAiBQ,GAZnB,CAcF,GAAG,CAACR,EAAkB3F,EAAe4F,EAAeM,EAAYlH,OAEhE,IAAMwH,GAAiC,QAAhBf,EAAAS,EAAYlH,YAAI,IAAAyG,OAAA,EAAhBA,EAAkBW,qBAAqBI,sBAAkBC,EAC1EC,GAAiC,QAAhBhB,EAAAQ,EAAYlH,YAAI,IAAA0G,OAAA,EAAhBA,EAAkBU,qBAAqBM,sBAAkBD,EAE1EE,EAD0C,gBAAjBX,GAAkCC,EAE7DtB,EACAV,EACJ,OACEjD,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAACP,KAAM,EAAGS,UAAW,EAAG8F,QAAS,OAAQC,cAAe,UAAU9F,UAC5EC,EAAAA,EAAAA,KAAC2F,EAAS,CAAChF,OAAQA,EAAOZ,SACvB,SAAC+F,GAAa,OACb3G,EAAAA,EAAAA,MAAAuE,EAAAA,SAAA,CAAA3D,SAAA,EACEC,EAAAA,EAAAA,KAAC+F,EAAAA,EAAa,CACZjE,QAASgE,EAAO/D,OAChBH,UAAWkE,EAAOlE,UAClBoE,SAAUR,EACVS,UAA6B,WAAlBjH,KAEbgB,EAAAA,EAAAA,KAAC+F,EAAAA,EAAa,CACZjE,QAASgE,EAAO9D,OAChBJ,UAAWkE,EAAOlE,UAClBoE,SAAUN,EACVO,UAA6B,WAAlBjH,MAEZ,KAKb,G,uLC/RI+B,EAA0B,QAE1BC,EAAQ,SAACC,GAAS,OACtBA,EAAEL,OAASG,EAA0BE,EAAIA,EAAED,OAAM,QAA0B,EAEvEE,EAAQ,SACZC,EACAC,GAEA,IAAKA,EACH,OAAOD,EAET,IAAInD,EAAQ,OAADmD,QAAC,IAADA,OAAC,EAADA,EAAGnD,KAMd,OALK,OAADmD,QAAC,IAADA,GAAAA,EAAGnD,MAAS,OAADoD,QAAC,IAADA,GAAAA,EAAGpD,KAChBA,EAAOgD,EAAMG,EAAEnD,KAAOoD,EAAEpD,MACd,OAADoD,QAAC,IAADA,GAAAA,EAAGpD,OACZA,EAAOgD,EAAMI,EAAEpD,OAEV,CACLkI,WAAY9E,EAAE8E,WACdC,KAAM/E,EAAE+E,KACRC,YAAahF,EAAEgF,YACfpI,KAAsB,kBAATA,EAAoBA,EAAO,KACxC6D,OAAQT,EAAES,OAEd,EAaMR,EAAU,SAACC,EAAcC,GAC7B,OAAQA,EAAOI,MACb,IAAK,SACH,IAAMI,EACJR,EAAO8E,UAAY/E,EAAM+E,QAAUnF,EAAMI,EAAMS,OAAQR,EAAO+E,KAAO/E,EAAO+E,IAC9E,OAAAxF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWQ,GAAK,IAAEM,WAAW,EAAOG,OAAAA,IACtC,IAAK,SACH,IAAMC,EACJT,EAAO8E,UAAY/E,EAAM+E,QAAUnF,EAAMI,EAAMU,OAAQT,EAAO+E,KAAO/E,EAAO+E,IAC9E,OAAAxF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWQ,GAAK,IAAEM,WAAW,EAAOI,OAAAA,IACtC,QACE,OAAOV,EAEb,EAEMY,EAAsB,CAC1BmE,QAAS,GACTtE,OAAQ,KACRC,OAAQ,KACRJ,WAAW,GA+BP2E,GAA4BlI,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6Y,WCjFxBiI,EAA0D,SAAC5H,GACtE,IAAO6H,EAAsD7H,EAAtD6H,MAAOC,EAA+C9H,EAA/C8H,kBAAmBC,EAA4B/H,EAA5B+H,OAAQC,EAAoBhI,EAApBgI,iBAEzC,OAAKF,GAYH1G,EAAAA,EAAAA,KAAC6G,EAAuB,CACtBJ,MAAOA,EACPC,kBAAmBA,EACnBC,OAAQA,EACRC,iBAAkBA,KAdlB5G,EAAAA,EAAAA,KAACZ,EAAAA,EAAG,CACFC,KAAM,CAACG,eAAgB,SAAUD,WAAY,UAC7CK,MAAO,CAACP,KAAM,EAAGyH,OAAQ,QAAQ/G,UAEjCC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAO,CAACC,QAAQ,aAazB,EAMMC,EAAqB,SAACrC,EAAuBwB,GACjD,IAAKA,EACH,OAAO,KAET,IAAuBc,EACvB,OADuBA,EACFd,IADsBc,EAAE3B,WAAW,KACpBX,EAAgBwB,EAAcA,CACpE,EAEMS,EAAiEpI,EAAAA,MAAW,SAACG,GACjF,IAAO6H,EAAsD7H,EAAtD6H,MAAOC,EAA+C9H,EAA/C8H,kBAAmBC,EAA4B/H,EAA5B+H,OAAQC,EAAoBhI,EAApBgI,iBAClChC,EAAiBnG,EAAAA,WAAiBoG,EAAAA,GAAlCD,cAEPuC,EDa4B,SAACV,EAAeJ,GAC5C,IAAAlD,EAA0B1E,EAAAA,WAAiB4C,EAASa,GAAakB,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAA1D7B,EAAK8B,EAAA,GAAEE,EAAQF,EAAA,GAwBtB,OAtBAd,EAAAA,EAAAA,GACEiE,EACA,CACE/D,YAAa,WACbC,UAAW,CAACgE,MAAAA,EAAOJ,QAAAA,EAASM,OAAQS,EAAAA,IAAAA,OAAsBvF,OAAQ,MAClEa,mBAAoB,SAAAhE,GAAyB,IAADkE,EAAtBC,EAAgBnE,EAAhBmE,iBACpBS,EAAS,CAAC3B,KAAM,SAAU0E,QAAAA,EAASC,KAA0B,QAArB1D,EAAAC,EAAiB7E,YAAI,IAAA4E,OAAA,EAArBA,EAAuByE,cAAe,MAChF,KAIJ/E,EAAAA,EAAAA,GACEiE,EACA,CACE/D,YAAa,WACbC,UAAW,CAACgE,MAAAA,EAAOJ,QAAAA,EAASM,OAAQS,EAAAA,IAAAA,OAAsBvF,OAAQ,MAClEa,mBAAoB,SAAAN,GAAyB,IAADkF,EAAtBzE,EAAgBT,EAAhBS,iBACpBS,EAAS,CAAC3B,KAAM,SAAU0E,QAAAA,EAASC,KAA0B,QAArBgB,EAAAzE,EAAiB7E,YAAI,IAAAsJ,OAAA,EAArBA,EAAuBD,cAAe,MAChF,IAIG/F,CACT,CCvCsCiG,CAAed,EAAOC,GAAnD9E,EAASuF,EAATvF,UAAWG,EAAMoF,EAANpF,OAAQC,EAAMmF,EAANnF,OACpBqD,EAAoB4B,EAAmBrC,GAAqB,OAAN7C,QAAM,IAANA,OAAM,EAANA,EAAQqE,cAAe,MAC7Ed,EAAoB2B,EAAmBrC,GAAqB,OAAN5C,QAAM,IAANA,OAAM,EAANA,EAAQoE,cAAe,MAEnF,OACEjH,EAAAA,EAAAA,MAAA,OAAKS,MAAO,CAACP,KAAM,EAAGS,UAAW,EAAG8F,QAAS,OAAQC,cAAe,UAAU9F,SAAA,EAC5EC,EAAAA,EAAAA,KAACwH,EAAc,CACbC,QAAS1F,EAASA,EAAO/D,KAAO,KAChCmI,KAAMpE,EAASA,EAAOoE,UAAOV,EAC7BW,YAAaf,EACbzD,UAAWA,EACXqE,UAAsB,WAAXU,EACXC,iBAAkBA,KAEpB5G,EAAAA,EAAAA,KAACwH,EAAc,CACbC,QAASzF,EAASA,EAAOhE,KAAO,KAChCmI,KAAMnE,EAASA,EAAOmE,UAAOV,EAC7BW,YAAad,EACb1D,UAAWA,EACXqE,UAAsB,WAAXU,EACXC,iBAAkBA,MAI1B,IAEMY,EAAiB,SAAH9I,GAcb,IAbLkD,EAASlD,EAATkD,UACAqE,EAASvH,EAATuH,UACAwB,EAAO/I,EAAP+I,QACAtB,EAAIzH,EAAJyH,KACAC,EAAW1H,EAAX0H,YACAQ,EAAgBlI,EAAhBkI,iBAYA,OAHAnI,EAAAA,WAAgB,WACdmI,EAAiBR,EACnB,GAAG,CAACQ,EAAkBR,KAEpBpG,EAAAA,EAAAA,KAAC+F,EAAAA,EAAa,CACZjE,QAAS2F,EACT7F,UAAWA,EACXqE,UAAWA,EACXG,YAAaA,EACbJ,SAAUG,GAGhB,C,2PC1BMuB,EAAc,CAClBC,MAAO,EACPC,KAAM,EACNC,QAAS,EACTC,MAAO,EACPC,SAAU,EACVC,MAAO,GAGH3G,EAAU,SAACC,EAAcC,GAC7B,OAAQA,EAAOI,MACb,IAAK,SACH,IAAMsG,EAAc1G,EAAO2G,OAAOC,KAAI,SAACC,EAAMC,GAAE,OAAAvH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC1CsH,GAAI,IACPE,cAAc,MAADC,OAAQH,EAAKI,UAAS,KAAAD,OAAIF,IAAI,IAEvCI,EAAK,GAAAF,QAAAG,EAAAA,EAAAA,GAAOpH,EAAMmH,QAAKC,EAAAA,EAAAA,GAAKT,IAC5BU,GAAM7H,EAAAA,EAAAA,GAAA,GAAOQ,EAAMqH,QAKzB,OAJAV,EAAYW,SAAQ,SAACR,GACnB,IAAMS,GAAQC,EAAAA,EAAAA,GAAaV,GAC3BO,EAAOE,IACT,IACO,CAACJ,MAAAA,EAAOE,OAAAA,EAAQI,QAASxH,EAAOyH,QAASnH,OAAQN,EAAOM,QAEjE,IAAK,aACH,OAAAf,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWQ,GAAK,IAAEO,OAAQN,EAAOM,SACnC,IAAK,QACH,MAAO,CAAC4G,MAAO,GAAIE,OAAQjB,EAAa7F,OAAQ,KAAMkH,SAAS,GACjE,QACE,OAAOzH,EAEb,EAEMY,EAAsB,CAC1BuG,MAAO,GACPE,OAAQjB,EACR7F,OAAQ,KACRkH,SAAS,GAGLE,EAAkC,SAACxC,GACvC,IAAMyC,GAASC,EAAAA,EAAAA,KACTC,EAAQ3K,EAAAA,OAAmD,IACjE0E,EAA0B1E,EAAAA,WAAiB4C,EAASa,GAAakB,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAA1D7B,EAAK8B,EAAA,GAAEE,EAAQF,EAAA,GAEhBiG,EAAkC5K,EAAAA,aACtC,SAAC6K,GACC,IAAMC,EAAQL,EAAOM,aAAwD,CAC3EC,aAAc,4CACdC,SAAUC,EACVC,GAAG,OAADrB,OAAS9B,KAGb,GAAI8C,EAAO,CACT,IAAMM,GAAO/I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRyI,GAAK,IACRO,aAAcR,IAAWS,EAAAA,IAAAA,QAAoBT,IAAWS,EAAAA,IAAAA,QACxDT,OAAAA,IAGFJ,EAAOc,cAAc,CACnBP,aAAc,4CACdC,SAAUC,EACVC,GAAG,OAADrB,OAAS9B,GACXzI,KAAM6L,GAEV,CACF,GACA,CAACX,EAAQzC,IAGXhI,EAAAA,WAAgB,WACd2K,EAAMa,QAAU,GAChB3G,EAAS,CAAC3B,KAAM,SAClB,GAAG,CAAC8E,IAIJ,IAAMyD,EAAoBzL,EAAAA,SAAc,WACtC,OAAO0L,KAAS,WACd,GAAKf,EAAMa,QAAQrJ,OAAnB,CAGA,IAAMwJ,GAAU1B,EAAAA,EAAAA,GAAOU,EAAMa,SAC7Bb,EAAMa,QAAU,GAChB,IAAMI,EAAiBD,EAAWE,SAAQ,SAAChE,GAAG,OAAKA,EAAIiE,QAAQ,IACzDC,EAAUJ,EAAWA,EAAWxJ,OAAS,GACzCoI,EAAUwB,EAAQC,kBAClB5I,EAAS2I,EAAQ3I,OAEvByB,EAAS,CAAC3B,KAAM,SAAUuG,OAAQmC,EAAgBrB,QAAAA,EAASnH,OAAAA,IAC3D,IAAM6I,EAlIuB,SAACH,GAClC,IAC8BI,EADxBC,GAAWlC,EAAAA,EAAAA,GAAI6B,GAAUM,UAAUC,GAAAC,EAAAA,EAAAA,GACnBH,GAAQ,IAA9B,IAAAE,EAAA7J,MAAA0J,EAAAG,EAAAE,KAAAC,MAEE,OAFgBN,EAAAO,MACThF,YAEL,IAAK,gBACH,OAAO6D,EAAAA,IAAAA,QACT,IAAK,mBACH,OAAOA,EAAAA,IAAAA,OACT,IAAK,mBACH,OAAOA,EAAAA,IAAAA,SACT,IAAK,oBACH,OAAOA,EAAAA,IAAAA,UACT,IAAK,mBACH,OAAOA,EAAAA,IAAAA,SACT,IAAK,kBACH,OAAOA,EAAAA,IAAAA,QACT,IAAK,kBACH,OAAOA,EAAAA,IAAAA,QAEZ,OAAAoB,GAAAL,EAAAM,EAAAD,EAAA,SAAAL,EAAAO,GAAA,CACD,OAAO,IACT,CA4GiCC,CAA2BjB,GAIlDK,IAAuB1B,GACzBK,EAAgCqB,EAdlC,CAgBF,GAjHmB,IAkHrB,GAAG,CAACrB,IAEGZ,EAAkCnH,EAAlCmH,MAAOE,EAA2BrH,EAA3BqH,OAAQ9G,EAAmBP,EAAnBO,OAAQkH,EAAWzH,EAAXyH,QAE9BwC,EAAyC9M,EAAAA,WAAiBsG,EAAAA,IAAnDC,EAAYuG,EAAZvG,aAAcC,EAAQsG,EAARtG,SAAUqE,EAAMiC,EAANjC,OACzBkC,GAAiBvG,GAA6B,cAAjBD,GAAgCsE,IAAWmC,UAAUC,OAClFC,EAA0BlN,EAAAA,OAA4BoD,GAExD2J,IAGFG,EAAwB1B,QAAUpI,GAEpC,IAAM+J,EAAuBD,EAAwB1B,QAE/CxH,EAAYhE,EAAAA,SAAc,WAC9B,MAAO,CACLgI,MAAAA,EACA5E,OAAQ+J,EAEZ,GAAG,CAACnF,EAAOmF,IAELC,EAAwBpN,EAAAA,SAC5B,kBACEuB,EAAAA,EAAAA,KAAC8L,EAAqB,CACpBrJ,UAAWA,EACXC,mBAAoB,SAAAhE,GAAyB,IAADkE,EACpCmJ,EAA4B,QAAxBnJ,EAD0BlE,EAAhBmE,iBACU7E,YAAI,IAAA4E,OAAA,EAArBA,EAAuBoJ,gBAC/BD,GAA4B,uCAApBA,EAAK7F,aAIlBkD,EAAMa,QAAQgC,KAAKF,GAInBG,sBAAsBhC,GACxB,GACA,GAEJ,CAACzH,EAAWyH,IAGd,OAAOzL,EAAAA,SACL,kBACY,OAAVgK,EACI,CAAC0D,SAAU1D,EAAOE,OAAAA,EAAQI,QAAAA,EAAS8C,sBAAAA,GACnC,CAACM,SAAU,GAAIxD,OAAAA,EAAQI,QAAAA,EAAS8C,sBAAAA,EAAsB,GAC5D,CAAClD,EAAQI,EAASN,EAAOoD,GAE7B,EAOMC,EAAwB,SAAH1J,GASpB,IARLK,EAASL,EAATK,UACAC,EAAkBN,EAAlBM,mBAgBA,OARAJ,EAAAA,EAAAA,GACE8J,EACA,CACE5J,YAAa,WACbC,UAAAA,EACAC,mBAAAA,IAGG,IACT,EAOM2J,EAA4D,SAACzN,GACjE,IAAM0C,EAAQ2H,EAAgCrK,EAAM6H,OACpD,OACEtH,EAAAA,EAAAA,MAAAuE,EAAAA,SAAA,CAAA3D,SAAA,CACGuB,EAAMuK,sBACNjN,EAAMmB,SAASuB,KAGtB,EASMgL,EAAwB,SAAC1N,GAC7B,IAAOmB,EAAmBnB,EAAnBmB,SAAU0G,EAAS7H,EAAT6H,MACjB5C,EAA0BpF,EAAAA,WAAiB4C,EAASa,GAAa4B,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA1DvC,EAAKwC,EAAA,GAAER,EAAQQ,EAAA,GACf6E,EAAyBrH,EAAzBqH,OAAQ9G,EAAiBP,EAAjBO,OAAQ4G,EAASnH,EAATmH,MAEvB1E,GAAoC9F,EAAAA,EAAAA,GAClCsO,EACA,CACEtI,6BAA6B,EAC7BxB,UAAW,CAACgE,MAAAA,EAAO5E,OAAAA,EAAQqC,MA9NT,KA+NlBC,aAZgB,IAahBC,YAAa,SAACpG,GAIZ,GAFAqG,IAG0C,SAApC,OAAJrG,QAAI,IAAJA,OAAI,EAAJA,EAAMwO,mBAAmBtG,aACO,qBAA5B,OAAJlI,QAAI,IAAJA,OAAI,EAAJA,EAAMyO,WAAWvG,YAFnB,CAOA,IAAMwG,EAAM1O,EAAKwO,mBACXtE,EAASlK,EAAKyO,WAAWE,OACzBrD,EAASoD,EAAIpD,OACbzH,EAAS7D,EAAKyO,WAAW5K,OAEzBmH,IACFM,GACFA,IAAWS,EAAAA,IAAAA,SACXT,IAAWS,EAAAA,IAAAA,SACXT,IAAWS,EAAAA,IAAAA,SAEbzG,EAAS,CAAC3B,KAAM,SAAUuG,OAAAA,EAAQc,QAAAA,EAASnH,OAAAA,IAEvCmH,GACF1E,EAtCY,IAsBd,CAkBF,IAjCGD,EAAWN,EAAXM,YAAaC,EAAYP,EAAZO,aAqCpB,OACEtE,EAAAA,EAAAA,KAAA0D,EAAAA,SAAA,CAAA3D,SACGA,EACW,OAAV0I,GAAkBA,EAAM7H,OAAS,EAC7B,CAACuL,SAAU1D,EAAOE,OAAAA,EAAQI,SAAS,GACnC,CAACoD,SAAU,GAAIxD,OAAAA,EAAQI,SAAS,KAI5C,EAEa6D,EAA4C,SAAChO,GACxD,IAAOmB,EAAmBnB,EAAnBmB,SAAU0G,EAAS7H,EAAT6H,MACjB3B,EAAiCrG,EAAAA,WAAiBsG,EAAAA,IAA3CC,EAAYF,EAAZE,aAAcC,EAAQH,EAARG,SAGrB,MAAqB,gBAAjBD,GAAkCC,GAC7BjF,EAAAA,EAAAA,KAACsM,EAAqB,CAAC7F,MAAOA,EAAM1G,SAAEA,IAG1B,0BAAjBiF,GACKhF,EAAAA,EAAAA,KAAA0D,EAAAA,SAAA,CAAA3D,SAAGA,EAAS,CAACoM,SAAU,GAAIxD,OAAQjB,EAAaqB,SAAS,OAG3D/I,EAAAA,EAAAA,KAACqM,EAA4B,CAAC5F,MAAOA,EAAM1G,SAAEA,GACtD,EAEMqM,GAAiC/N,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mhBAsBtCsO,EAAAA,IAGElD,GAAiDtL,EAAAA,EAAAA,IAAG2E,IAAAA,GAAAzE,EAAAA,EAAAA,GAAA,oHAQpDgO,GAAiBlO,EAAAA,EAAAA,IAAGkG,IAAAA,GAAAhG,EAAAA,EAAAA,GAAA,2iBA0BtBsO,EAAAA,G,sSCvZSC,EAAoBC,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,oBAAAC,YAAA,gBAAVF,CAAU,gJAM3B,SAAArO,GAAA,IAAAwO,EAAE5L,EAAK5C,EAAL4C,MAAK,OAClB4L,EAAA,IAAAC,EAAAA,EAAAA,GAAAD,EACEE,EAAAA,GAAAA,QAAqBzN,EAAAA,EAAAA,UAAcwN,EAAAA,EAAAA,GAAAD,EACnCE,EAAAA,GAAAA,UAAuBzN,EAAAA,EAAAA,WAAewN,EAAAA,EAAAA,GAAAD,EACtCE,EAAAA,GAAAA,QAAqBzN,EAAAA,EAAAA,YAAgBwN,EAAAA,EAAAA,GAAAD,EACrCE,EAAAA,GAAAA,OAAoBzN,EAAAA,EAAAA,SAAawN,EAAAA,EAAAA,GAAAD,EACjCE,EAAAA,GAAAA,UAAuBzN,EAAAA,EAAAA,SAAawN,EAAAA,EAAAA,GAAAD,EACpCE,EAAAA,GAAAA,gBAA6BzN,EAAAA,EAAAA,SAAawN,EAAAA,EAAAA,GAAAD,EAC1CE,EAAAA,GAAAA,QAAqBzN,EAAAA,EAAAA,QAAauN,GACnC5L,EAAM,IAEM,SAAAc,GAAA,IAAAiL,EAAE/L,EAAKc,EAALd,MAAK,OAClB+L,EAAA,IAAAF,EAAAA,EAAAA,GAAAE,EACED,EAAAA,GAAAA,QAAqBzN,EAAAA,EAAAA,UAAcwN,EAAAA,EAAAA,GAAAE,EACnCD,EAAAA,GAAAA,UAAuBzN,EAAAA,EAAAA,WAAewN,EAAAA,EAAAA,GAAAE,EACtCD,EAAAA,GAAAA,QAAqBzN,EAAAA,EAAAA,YAAgBwN,EAAAA,EAAAA,GAAAE,EACrCD,EAAAA,GAAAA,OAAoBzN,EAAAA,EAAAA,SAAawN,EAAAA,EAAAA,GAAAE,EACjCD,EAAAA,GAAAA,UAAuBzN,EAAAA,EAAAA,SAAawN,EAAAA,EAAAA,GAAAE,EACpCD,EAAAA,GAAAA,gBAA6BzN,EAAAA,EAAAA,SAAawN,EAAAA,EAAAA,GAAAE,EAC1CD,EAAAA,GAAAA,QAAqBzN,EAAAA,EAAAA,QAAa0N,GACnC/L,EAAM,I,iCCbDgM,EAAmC,SAAH5O,GAAgC,IAA3B6O,EAAO7O,EAAP6O,QAASC,EAAW9O,EAAX8O,YACzDC,EAAgChP,EAAAA,UAAe,GAAMiP,GAAArK,EAAAA,EAAAA,GAAAoK,EAAA,GAA9CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAASC,OAAOC,KAAKR,GAErBS,EADSF,OAAOG,OAAOV,GACDW,QAAO,SAACC,EAAK/L,GAAU,OAAAA,EAAPgM,QAAwBD,EAAQ,EAAIA,CAAK,GAAG,GAElFE,EAAW,SAACxF,GAChB,OAAO,SAACuC,GACN,IAAMkD,EAAUlD,EAAElL,OAAOoO,QACzBd,EAAY3E,EAAmByF,EACjC,CACF,EAEA,OACEtO,EAAAA,EAAAA,KAACuO,EAAAA,EAAO,CACNC,OAAQb,EACRc,UAAU,eACVC,mBAAiB,EACjBC,cAAe,SAACC,GAAsB,OAAKhB,EAAYgB,EAAc,EACrEnH,SACEzH,EAAAA,EAAAA,KAAC6O,EAAAA,GAAI,CAACjP,MAAO,CAACkP,MAAO,SAAU,aAAW,iBAAgB/O,SACvD8N,EAAO1F,KAAI,SAACU,GACX,IAAMkG,EAAiBxB,EAAQ1E,GACxBmG,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,MAAOb,EAAWW,EAAXX,QACrB,OACEpO,EAAAA,EAAAA,KAACkP,EAAAA,GAAQ,CAEPC,QAAQ,MACRC,sBAAsB,EACtBC,MACErP,EAAAA,EAAAA,KAACZ,EAAAA,EAAG,CAACC,KAAM,CAACC,UAAW,MAAOC,WAAY,UAAUQ,UAClDC,EAAAA,EAAAA,KAACsP,EAAY,CACX1F,GAAE,cAAArB,OAAgBM,GAClByF,QAASF,EACTC,SAAUA,EAASxF,GACnBmG,OACE7P,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,KAAM,CACJC,UAAW,MACXE,eAAgB,gBAChBD,WAAY,UAEdK,MAAO,CAACP,KAAM,GAAGU,SAAA,EAEjBC,EAAAA,EAAAA,KAAA,OAAAD,SAAMiP,KACNhP,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAACC,MAAOF,EAAAA,EAAAA,SAAgBI,UAAEwP,EAAAA,EAAAA,GAAcN,aAnBzDpG,EA2BX,MAEH9I,UAEDZ,EAAAA,EAAAA,MAACqQ,EAAY,CACXC,QAAS,kBAAM7B,GAAY,SAAC3D,GAAO,OAAMA,CAAO,GAAC,EACjDyF,MAAM1P,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,KAAK,eACjBmP,WAAW3P,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,KAAK,gBAAiBT,SAAA,CACxC,WACUiO,EAAa,QAI9B,EAEMwB,GAAezC,EAAAA,EAAAA,IAAO6C,EAAAA,IAAOC,WAAA,CAAA7C,YAAA,gCAAAC,YAAA,eAAdF,CAAc,+CAK7BuC,GAAevC,EAAAA,EAAAA,IAAO+C,EAAAA,GAASD,WAAA,CAAA7C,YAAA,gCAAAC,YAAA,eAAhBF,CAAgB,0B,4CC5D/B1L,EAAU,SAACC,EAAcC,GAC7B,OAAQA,EAAOI,MACb,IAAK,eACH,OAAAb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWQ,GAAK,IAAEyO,OAAO,IAC3B,IAAK,eACH,OAAAjP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWQ,GAAK,IAAEyO,OAAO,IAC3B,IAAK,YACH,OAAAjP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWQ,GAAK,IAAE0O,UAAWzO,EAAOyO,YACtC,IAAK,eACH,OAAAlP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWQ,GAAK,IAAEyO,OAAO,EAAMC,UAAW,IAC5C,IAAK,oBACH,OAAAlP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWQ,GAAK,IAAE0O,UAAW,IAC/B,QACE,OAAO1O,EAEb,EAEMY,EAAsB,CAC1B6N,OAAO,EACPC,UAAW,GAGPC,EAAc,CAClBC,UAAW,IAGAC,EAAmC,SAACvR,GAC/C,IAAOsM,EAAwCtM,EAAxCsM,MAAOmD,EAAiCzP,EAAjCyP,SAAU+B,EAAuBxR,EAAvBwR,oBAExBjN,EAA0B1E,EAAAA,WAAiB4C,EAASa,GAAakB,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAA1D7B,EAAK8B,EAAA,GAAEE,EAAQF,EAAA,GACf2M,EAAoBzO,EAApByO,MAAOC,EAAa1O,EAAb0O,UACRK,EAAW5R,EAAAA,OAA+B,MAEhD6R,EAA6B7R,EAAAA,SAAc,WACzC,IAAM8R,EAAcH,EAAoBlC,QAAO,SAACC,EAAOqC,GACrD,IAAMvC,EAASuC,EAASvC,SACxB,OAAOuC,EAASC,OAAK3P,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbqN,GAAK,IAAAhB,EAAAA,EAAAA,GAAA,GAAGqD,EAASC,MAAQ,CAACC,KAAM,IAAIC,EAAAA,EAAK1C,EAAQgC,GAAcW,IAAK3C,KACxEE,CACN,GAAG,CAAC,GACE0C,EAAeT,EAClBjI,KAAI,SAACqI,GAAQ,OAAKA,EAASC,KAAK,IAChCK,QAAO,SAACL,GAAK,OAAKA,CAAK,IAC1B,MAAO,CACLM,MAAO,IAAIJ,EAAAA,EAAKE,EAAcZ,GAC9BM,YAAAA,EAEJ,GAAG,CAACH,IAdGW,EAAKT,EAALS,MAAOR,EAAWD,EAAXC,YAgBRS,EAAmBvS,EAAAA,aACvB,SAACwS,GACC,IAAKA,EACH,OAAOnD,OAAOC,KAAKwC,GAGrB,IAAAW,EAAuBD,EAAYE,MAAM,KAAIC,GAAA/N,EAAAA,EAAAA,GAAA6N,EAAA,GAAtCT,EAAKW,EAAA,GAAElG,EAAKkG,EAAA,GACnB,GAAIX,GAASA,KAASF,EAAa,CACjC,IAAA7R,EAAoB6R,EAAYE,GAAzBC,EAAIhS,EAAJgS,KAAME,EAAGlS,EAAHkS,IACPS,EAAUnG,EACZwF,EAAKY,OAAOpG,GAAO/C,KAAI,SAACoJ,GAAM,SAAAhJ,OAAQkI,EAAK,KAAAlI,OAAIgJ,EAAOC,KAAI,IAC1DZ,EAAIzI,KAAI,SAAC+C,GAAK,SAAA3C,OAAQkI,EAAK,KAAAlI,OAAI2C,EAAK,IAGxC,OAAOmG,EAAQlJ,KAAI,SAACoJ,GAAM,OAAKA,EAAOE,aAAa,IAAEC,SAAST,GAAe,GAAKI,CACpF,CAEA,OAAON,EAAMO,OAAOL,GAAa9I,KAAI,SAACoJ,GAAM,OAAKA,EAAOC,IAAI,GAC9D,GACA,CAACT,EAAOR,IAGVoB,ECrGqC,SACrCX,EACA9F,GAEA,IAAM0G,EAAS1G,EAAM2G,oBAAoBC,OAAOX,MAAM,OAChDF,EAAcW,EAAOA,EAAOhR,OAAS,IAAM,GAE3CmR,EAActT,EAAAA,SAAc,kBAAMuS,EAAiBC,EAAY,GAAE,CACrED,EACAC,IAGIe,EAAqBvT,EAAAA,aACzB,SAACwT,GACC,IAAMC,EAAYhH,EAAM2G,oBAAoBM,YAAYlB,GACxD,IAAmB,IAAfiB,EAAkB,CACpB,IAAME,EAAOlH,EAAMlK,MAAM,EAAGkR,GAC5B,MAAM,GAAN3J,OAAU6J,GAAI7J,OAAG0J,EACnB,CAIA,OAAO/G,CACT,GACA,CAAC+F,EAAa/F,IAGhB,OAAOzM,EAAAA,SACL,iBAAO,CACLsT,YAAAA,EACAC,mBAAAA,EACD,GACD,CAACA,EAAoBD,GAEzB,CDmE4CM,CAAwBrB,EAAkB9F,GAA7E6G,EAAWJ,EAAXI,YAAaC,EAAkBL,EAAlBK,mBAEdM,EAAaP,EAAYnR,OACzB2R,EAAoBR,EAAY/B,IAAc,KAE9CwC,EAAgB/T,EAAAA,aACpB,SAAC2M,GACC9H,EAAS,CAAC3B,KAAM,iBAChB0M,EAASjD,EAAElL,OAAOgL,MACpB,GACA,CAACmD,IAGGoE,EAAWhU,EAAAA,aACf,SAACwT,GACC3O,EAAS,CAAC3B,KAAM,sBAChB0M,EAAS2D,EAAmBC,GAC9B,GACA,CAAC5D,EAAU2D,IAGPU,EAAUjU,EAAAA,aAAkB,WAAO,IAADkU,EACtCrP,EAAS,CAAC3B,KAAM,iBAChB0M,EAAS,IACO,QAAhBsE,EAAAtC,EAASpG,eAAO,IAAA0I,GAAhBA,EAAkBC,OACpB,GAAG,CAACvE,IA+BJ,OACErO,EAAAA,EAAAA,KAACuO,EAAAA,EAAO,CACNC,OAAQuB,GAASgC,EAAYnR,OAAS,EACtCiS,SAAS,cACTpL,SACEzH,EAAAA,EAAAA,KAAC8S,EAAO,CAAA/S,SACLgS,EAAY5J,KAAI,SAAC8J,EAAY5J,GAAE,OAC9BrI,EAAAA,EAAAA,KAAC+S,EAAU,CAETd,WAAYA,EACZe,YAAahD,IAAc3H,EAC3BoK,SAAUA,GAHLR,EAIL,MAGPlS,UAEDC,EAAAA,EAAAA,KAACiT,EAAW,CACVC,YAAY,eACZC,YAAY,EACZC,YAAY,MACZlI,MAAOA,EACPmI,IAAKhD,EACLhC,SAAUmE,EACVc,QAAS,kBAAMhQ,EAAS,CAAC3B,KAAM,gBAAgB,EAC/C4R,OAAQ,kBAAMjQ,EAAS,CAAC3B,KAAM,gBAAgB,EAC9C6R,UAvDY,SAACpI,GACjB,IAAOqI,EAAOrI,EAAPqI,IACP,GAAY,WAARA,GAKJ,GAAKnB,EAAL,CAIA,IAAMoB,EAAapB,EAAa,EAEhC,OAAQmB,GACN,IAAK,UACHrI,EAAEuI,iBACFrQ,EAAS,CAAC3B,KAAM,YAAaqO,UAAyB,IAAdA,EAAkB0D,EAAa1D,EAAY,IACnF,MACF,IAAK,YACH5E,EAAEuI,iBACFrQ,EAAS,CAAC3B,KAAM,YAAaqO,UAAWA,IAAc0D,EAAa,EAAI1D,EAAY,IACnF,MACF,IAAK,QACH5E,EAAEuI,iBACEpB,GACFE,EAASF,GAhBf,OANEjP,EAAS,CAAC3B,KAAM,gBAyBpB,EA4BMiS,cACE5T,EAAAA,EAAAA,KAAC6T,EAAAA,EAAW,CAACpE,QAASiD,EAAQ3S,UAC5BC,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,KAAK,gBAMvB,EAEMuS,EAID,SAACnU,GACJ,IAAOqT,EAAqCrT,EAArCqT,WAAYe,EAAyBpU,EAAzBoU,YAAaP,EAAY7T,EAAZ6T,SAC1BqB,EAAUrV,EAAAA,OAA4B,MAQ5C,OANAA,EAAAA,WAAgB,WACVqV,EAAQ7J,SAAW+I,GACrBc,EAAQ7J,QAAQ8J,eAAe,CAACC,MAAO,WAE3C,GAAG,CAAChB,KAGFhT,EAAAA,EAAAA,KAACiU,EAAI,CACHZ,IAAKS,EACLd,YAAaA,EACbkB,YAAa,SAAC9I,GACZA,EAAEuI,iBACFlB,EAASR,EACX,EAAElS,SAEDkS,GAGP,EAEMgB,GAAclG,EAAAA,EAAAA,IAAOoH,EAAAA,IAAUtE,WAAA,CAAA7C,YAAA,+BAAAC,YAAA,eAAjBF,CAAiB,kBAI/B+F,EAAU/F,EAAAA,GAAAA,GAAAA,WAAS,CAAAC,YAAA,2BAAAC,YAAA,eAATF,CAAS,8GAcnBkH,EAAOlH,EAAAA,GAAAA,GAAAA,WAAS,CAAAC,YAAA,wBAAAC,YAAA,eAATF,CAAS,uOAEA,SAAA3K,GAAa,OAAAA,EAAX4Q,YAAgCrT,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,KAAY,IAC1E,SAAAgD,GAAa,OAAAA,EAAXqQ,YAAgCrT,EAAAA,EAAAA,MAAe,SAAS,IAY7C,SAAAuD,GAAa,OAAAA,EAAX8P,YAAgCrT,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,OAAc,I,sBE9N7EyU,EAAO,SAAPA,GAAO,OAAPA,EAAO,wBAAPA,EAAO,gBAAPA,EAAO,gBAAPA,CAAO,MA2BNC,EAA2C,SAACzV,GACvD,IACE0V,EAWE1V,EAXF0V,MACArS,EAUErD,EAVFqD,SACA0G,EASE/J,EATF+J,OACAmI,EAQElS,EARFkS,OACAtD,EAOE5O,EAPF4O,YACA+G,EAME3V,EANF2V,QACAC,EAKE5V,EALF4V,aACA9N,EAIE9H,EAJF8H,kBACA+N,EAGE7V,EAHF6V,mBACAC,EAEE9V,EAFF8V,cACA3U,EACEnB,EADFmB,SAGF4U,GAGIC,EAAAA,EAAAA,GApB2B,4BAoBmB,SAAC1J,GAAU,MAC1C,kBAAVA,EAAsBA,EAAoBkJ,EAAQrS,MAAM,IAChE8S,GAAAxR,EAAAA,EAAAA,GAAAsR,EAAA,GAJCG,EAAqBD,EAAA,GACrBE,EAAwBF,EAAA,GAKpBG,EAAoBvW,EAAAA,aACxB,SAAC8V,GACCQ,EAAyBR,GACzBC,EAAaD,EACf,GACA,CAACC,EAAcO,IAGXE,EAAcxW,EAAAA,SAClB,kBAAM,IAAIyW,IAAI,CAACX,IAAYH,EAAQe,WAAaZ,EAAUO,GAAuB,GACjF,CAACP,EAASO,IAGZ,OACE3V,EAAAA,EAAAA,MAACiW,EAAAA,GAAgB,CAAArV,SAAA,EACfC,EAAAA,EAAAA,KAACZ,EAAAA,EAAG,CAACiW,OAAQ,CAACC,MAAO,IAAIvV,UACvBC,EAAAA,EAAAA,KAACuV,EAAAA,EAAW,CACVN,YAAaA,EACbO,QAAS,CACP,CAAC5L,GAAIwK,EAAQe,WAAYzF,KAAM,OAAQ+F,QAAS,yBAChD,CAAC7L,GAAIkL,EAAuBpF,KAAM,UAAW+F,QAAS,qBAExDhG,QAAS,SAAC7F,GAAE,OAAK4K,EAAa5K,EAAG,MAGxB,eAAZ2K,GACCvU,EAAAA,EAAAA,KAAC0V,EAAoB,CACnB/M,OAAQA,EACRmI,OAAQA,EACRtD,YAAaA,EACbmI,aAAc5V,EACduU,MAAOA,KAGTtU,EAAAA,EAAAA,KAAC4V,EAAiB,CAChBtB,MAAOA,EACPrS,SAAUA,EACVsS,QAASA,EACTC,aAAcQ,EACdtO,kBAAmBA,EACnB+N,mBAAoBA,EACpBC,cAAeA,IAGlB3U,IAGP,EAEM8V,EAAe,SAAC5T,EAA4B6T,GAIhD,OACEA,EAAWC,SAASC,MAAK,SAAC3P,GAAO,OAAKpE,EAASqS,MAAMjO,GAAU/E,QAAU8L,EAAAA,GAAAA,OAAkB,IAEpFA,EAAAA,GAAAA,QAGP0I,EAAWC,SAASC,MAAK,SAAC3P,GAAO,OAAKpE,EAASqS,MAAMjO,GAAU/E,QAAU8L,EAAAA,GAAAA,OAAkB,IAEpFA,EAAAA,GAAAA,QAGP0I,EAAWC,SAASE,OAAM,SAAC5P,GAAO,OAAKpE,EAASqS,MAAMjO,GAAU/E,QAAU8L,EAAAA,GAAAA,SAAoB,IAEvFA,EAAAA,GAAAA,UAEFA,EAAAA,GAAAA,MACT,EAEawI,EAAoB,SAAHxT,GAgBvB,IAfLkS,EAAKlS,EAALkS,MACArS,EAAQG,EAARH,SACAyE,EAAiBtE,EAAjBsE,kBACA+N,EAAkBrS,EAAlBqS,mBACAF,EAAOnS,EAAPmS,QACAC,EAAYpS,EAAZoS,aACAE,EAAatS,EAAbsS,cAUMwB,EACJjU,EAASiU,kBAAmBC,EAAAA,EAAAA,IAAsCrI,OAAOC,KAAK9L,EAASqS,QAEnF3V,EAAiB+H,GAAsBwP,EAAwBxP,GAC/D0P,IAAyBzX,EAEzB0X,EAAc,SAACC,GACnB,IAAKA,IAAaJ,EAAwBI,GACxC,OAAO,KAET,IAAMC,EAAeL,EAAwBI,GAC7C,OAAoC,IAAhCC,EAAYR,SAASnV,QAAgB0V,IAAYC,EAAYR,SAAS,GACjEO,EAELC,EAAYC,KAAuC,IAAhCD,EAAYR,SAASnV,OACnC2V,EAAYR,SAAS,GAE1BQ,EAAYC,IACR,QAANjO,OAAegO,EAAYC,IAAG,MAAAjO,OAAKgO,EAAYR,SAASnV,OAAM,WAE1D,GAAN2H,OAAU+N,EAAO,MAAA/N,OAAKgO,EAAYR,SAASnV,OAAM,UACnD,EAEA,OACEzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,KAAM,CAACG,eAAgB,gBAAiBD,WAAY,SAAUD,UAAW,OACzEM,MAAO,CAACP,KAAM,GAAGU,SAAA,EAEjBZ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,KAAM,CAACC,UAAW,MAAOC,WAAY,SAAUE,IAAK,IAAIM,SAAA,CAC1DuU,GACCtU,EAAAA,EAAAA,KAACyW,EAAAA,EAAM,CACLxR,UAAWqP,EAAM1T,OACjB8V,MAAO5I,OAAOC,KAAKmI,GACnBS,cAAe,SAACC,EAAOpF,GAAI,OACzBA,EAAKK,oBAAoBH,SAASkF,EAAM/E,oBAAoB,EAE9DgF,aAAc,SAACrF,EAAcjE,GAA2C,OACtEvN,EAAAA,EAAAA,KAACkP,EAAAA,GAAQ,CAEPO,QAASlC,EAAQuJ,YACjBzH,KAAMgH,EAAY7E,GAClBuF,OAAQxJ,EAAQyJ,UAAUD,QAHrBvF,EAIL,EAEJyF,WAAYvQ,EACZwQ,aAAc,SAACZ,GACb7B,EAAmB6B,EACrB,EAAEvW,UAEFC,EAAAA,EAAAA,KAAC4P,EAAAA,GAAM,CAAC3K,UAAWqP,EAAM1T,OAAQ+O,WAAW3P,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,KAAK,gBAAiBT,SACrEsW,EAAY3P,IAAsB,4BAGrCjB,EAEH2Q,GACCpW,EAAAA,EAAAA,KAACuV,EAAAA,EAAW,CACVN,YAAa,IAAIC,IAAI,CAACX,IACtB9E,QAAS+E,EACTgB,QAAS,CACP,CAAC5L,GAAIwK,EAAQrS,OAAQiN,MAAO,UAC5B,CAACpF,GAAIwK,EAAQpS,OAAQgN,MAAO,aAG9B,KAEFsF,OAAyE7O,GAAjEtG,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAW,SAAA,CAAC,WAAsB,OAAdpB,QAAc,IAAdA,OAAc,EAAdA,EAAgBoX,WAAY,IAAIoB,KAAK,YAE7Df,GACCjX,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,KAAM,CAACC,UAAW,MAAOC,WAAY,SAAUE,IAAK,IAAIM,SAAA,CAC1DpB,GACCqB,EAAAA,EAAAA,KAACoX,EAAAA,EAAO,CAAC3I,UAAU,UAAUhH,QAAQ,mCAAkC1H,SACpE8V,EAAa5T,EAAUtD,KAAoByO,EAAAA,GAAAA,SAC1CpN,EAAAA,EAAAA,KAAC+G,EAAAA,EAAO,CAACC,QAAQ,eAEjBhH,EAAAA,EAAAA,KAAC8M,EAAiB,CAACxL,MAAOuU,EAAa5T,EAAUtD,OAGnD,KACH+V,GACC1U,EAAAA,EAAAA,KAACoX,EAAAA,EAAO,CACN3I,UAAU,UACVhH,QACsC,KAAtB,OAAd9I,QAAc,IAAdA,OAAc,EAAdA,EAAgBoX,SAASnV,QAAY,YAAA2H,OACP,OAAd5J,QAAc,IAAdA,OAAc,EAAdA,EAAgBoX,SAAS,GAAE,yCAE5ChW,UAEDC,EAAAA,EAAAA,KAACqX,EAAY,CAAC,aAAW,gBAAgBpX,KAAMyU,EAAe4C,UAAQ,EAAAvX,UACpEC,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,KAAK,uBAAuBX,MAAOF,EAAAA,EAAAA,cAG3C,QAEJ,OAGV,EAEM0X,EAAetK,EAAAA,GAAAA,EAAAA,WAAQ,CAAAC,YAAA,4BAAAC,YAAA,eAARF,CAAQ,2MAKzBwK,EAAAA,GAIOA,EAAAA,GACa5X,EAAAA,EAAAA,QAGZ4X,EAAAA,GAAuBA,EAAAA,GACX5X,EAAAA,EAAAA,MAUlB+V,EAAuB,SAAH/S,GAYnB,IAAD6U,EAXJ1G,EAAMnO,EAANmO,OACAnI,EAAMhG,EAANgG,OACA6E,EAAW7K,EAAX6K,YACA8G,EAAK3R,EAAL2R,MACAqB,EAAWhT,EAAXgT,YAQAlI,EAAgChP,EAAAA,SAAyB,cAAaiP,GAAArK,EAAAA,EAAAA,GAAAoK,EAAA,GAA/DgK,EAAQ/J,EAAA,GAAEgK,EAAWhK,EAAA,GACtBiK,EAAkC7G,EAAO8G,SA3PtCzP,KAAI,SAAAzJ,GAAA,IAAE+R,EAAK/R,EAAL+R,MAAOvF,EAAKxM,EAALwM,MAAK,OAAOuF,EAAK,GAAAlI,OAAMkI,EAAK,KAAAlI,OAAI2C,GAAUA,CAAK,IAAGiM,KAAK,KA4P7EU,EAAsCpZ,EAAAA,UAAuB,kBAAMkZ,CAAc,IAACG,GAAAzU,EAAAA,EAAAA,GAAAwU,EAAA,GAA3E5G,EAAW6G,EAAA,GAAEC,EAAcD,EAAA,GAC5BE,GAAkBC,EAAAA,EAAAA,KAKxBC,GAAgCtD,EAAAA,EAAAA,GAAoBuD,EAAAA,GAAwBC,EAAAA,IAAkBC,GAAAhV,EAAAA,EAAAA,GAAA6U,EAAA,GAApFI,GAAFD,EAAA,GAAoBA,EAAA,IAEtBE,GAA8D,QAA/Cf,EAAA1G,EAAO8G,SAASY,MAAK,SAACC,GAAC,MAAiB,SAAZA,EAAEhI,KAAgB,WAAC,IAAA+G,OAAA,EAA/CA,EAAiDtM,QAAS,KACzEwN,EAAa5H,EAAO8G,SAAS1J,QAAO,SAACC,EAAOjD,GAAK,OAAKiD,EAAQjD,EAAMA,KAAK,GAAE,IAIjFzM,EAAAA,WAAgB,WACdsZ,EAAeJ,EACjB,GAAG,CAACA,IAEJ,IAaMgB,EAAiBla,EAAAA,aACrB,SAACoK,EAAiBuF,GAChB,IAAMwK,EAAoB,IAAI1D,IAC5BpH,OAAOC,KAAK+C,EAAOjD,QAAQiD,QAAO,SAACjI,GAAK,QAAOiI,EAAOjD,OAAOhF,EAAM,KAKrEuF,EAAUwK,EAAkBC,IAAIhQ,GAAS+P,EAAkBE,OAAOjQ,GAClEyP,EAAmBS,MAAMC,KAAKJ,IAG9BpL,GAAW1M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRgQ,GAAM,IACTjD,QAAM/M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDgQ,EAAOjD,QAAM,IAAAV,EAAAA,EAAAA,GAAA,GACftE,EAAQuF,MAGf,GACA,CAAC0C,EAAQtD,EAAa8K,IAIxB7Z,EAAAA,WAAgB,WACd,IAAIgS,EAMJ,MALiB,yBAAbgH,IACFhH,EAAQwI,YAAW,WACjBvB,EAAY,aACd,GAAG,MAEE,WACLjH,GAASyI,aAAazI,EACxB,CACF,GAAG,CAACgH,IAEJ,IAAM0B,EAAgBrL,OAAOsL,YAC3BtL,OAAOC,KAAKsL,EAAAA,GAAUlR,KAAI,SAACU,GACzB,MAAO,CACLA,EACA,CACEmG,MAAOnG,EAAM4I,cACbxC,MAAOtG,EAAOE,GACduF,UAAW0C,EAAOjD,OAAOhF,IAG/B,KAGF,OACE1J,EAAAA,EAAAA,MAAAuE,EAAAA,SAAA,CAAA3D,SAAA,EACEC,EAAAA,EAAAA,KAACmQ,EAAe,CACdjF,MAAO+F,EACPb,qBAAqBkJ,EAAAA,EAAAA,GAAsBhF,GAC3CjG,SAnEW,SAACnD,GAChB,IACM0M,EADS1M,EAAMiG,MAAM,OACHhJ,KAAI,SAACqJ,GAC3B,IAAM+H,EAAW/H,EAAKL,MAAM,KAC5B,OAAIoI,EAAS3Y,OAAS,EACb,CAAC6P,MAAO8I,EAAS,GAAIrO,MAAOqO,EAAS,IAEvC,CAACrO,MAAOqO,EAAS,GAC1B,IACA/L,GAAW1M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGgQ,GAAM,IAAE8G,SAAUA,KAClCG,EAAe7M,EACjB,IA0DKwN,GACC1Y,EAAAA,EAAAA,KAACwZ,EAAgB,CACflL,QAASwC,EAAO2I,eAChBpL,SAAU,SAACqL,GAA0C,OACnDlM,GAAW1M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGgQ,GAAM,IAAE2I,eAAgBC,EAAMC,cAAcrL,UAAS,EAEvEU,MAAM,qBAEN,MACJhP,EAAAA,EAAAA,KAACZ,EAAAA,EAAG,CAACC,KAAM,CAACC,UAAW,MAAOC,WAAY,SAAUE,IAAK,GAAI4V,OAAQ,CAACuE,KAAM,IAAI7Z,UAC9EC,EAAAA,EAAAA,KAACsN,EAAe,CACdC,QAAS4L,EACT3L,YAAamL,MAGhBJ,IAAgBvY,EAAAA,EAAAA,KAAC6Z,EAAAA,GAAc,KAChC7Z,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAACka,SAAU,GAAIza,KAAM,KAChCsW,IACC3V,EAAAA,EAAAA,KAAC4P,EAAAA,GAAM,CACLF,MAAM1P,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,KAAMiX,IAClBhI,QAAS,WACPuI,EAAgB+B,OAAO/T,SAAS/F,MAChCyX,EAAY,uBACd,EAAE3X,SACH,eAMT,EAEMyZ,GAAmBzM,EAAAA,EAAAA,IAAO+C,EAAAA,GAASD,WAAA,CAAA7C,YAAA,gCAAAC,YAAA,eAAhBF,CAAgB,iD,0OCna5BhH,EAMRtH,EAAAA,MAAW,SAAAC,GAA6D,IAA3DoD,EAAOpD,EAAPoD,QAASkE,EAAQtH,EAARsH,SAAUpE,EAASlD,EAATkD,UAAWqE,EAASvH,EAATuH,UAAWG,EAAW1H,EAAX0H,YACnD4T,EAAmBvb,EAAAA,OAAqC,MACxDwb,EAAQxb,EAAAA,SACdgP,EAA8ChP,EAAAA,UAAe,GAAMiP,GAAArK,EAAAA,EAAAA,GAAAoK,EAAA,GAA5DyM,EAAexM,EAAA,GAAEyM,EAAkBzM,EAAA,GAIpC0M,EAAoB,WACpBH,EAAMhQ,UACRiP,aAAae,EAAMhQ,SACnBgQ,EAAMhQ,QAAU,EAEpB,EACMoQ,EAAc,WAClBF,GAAmB,GACnBC,GACF,EACME,EAAsB,WAC1BL,EAAMhQ,QAAU8P,OAAOd,WAAWoB,EA1BL,IA2B/B,EAWI5S,EAAU3F,EACRyY,EAAcC,EAAe/S,GAEnC,GAAIA,GAAW8S,EAAa,CAC1B,IAAME,EAAWhT,EAAQiT,QAAQ,MAAQ,EACnCC,EAAYF,EAAWhT,EAAQ7G,OAAS6G,EAAQzG,MAAMyZ,GAAYhT,EACxEA,EA7CoB,yCA6CQkT,CAC9B,CACA,IAAMC,EAAUL,GACdva,EAAAA,EAAAA,KAAC6a,EAAW,CAAA9a,UACVZ,EAAAA,EAAAA,MAAC2b,EAAAA,EAAK,CAACxb,UAAU,MAAMyb,QAAS,EAAGxb,WAAW,SAAQQ,SAAA,EACpDC,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,KAAK,UAAUX,MAAOF,EAAAA,EAAAA,aAC5BR,EAAAA,EAAAA,MAAA,OAAAY,SAAA,CAAK,uCACkC,IACpCqG,GACCpG,EAAAA,EAAAA,KAAA,KAAGC,KAAMmG,EAAakR,UAAQ,EAAAvX,SAAC,+BAG7B,KAAK,YAKb,KAEJ,OACEZ,EAAAA,EAAAA,MAAAuE,EAAAA,SAAA,CAAA3D,SAAA,EACEZ,EAAAA,EAAAA,MAAC6b,EAAa,CAAC/U,UAAWA,EAAUlG,SAAA,CACjCma,GACCla,EAAAA,EAAAA,KAACib,EAAW,CAAAlb,UACVC,EAAAA,EAAAA,KAACkb,EAAW,CACVzL,QAzDQ,WAClBuK,EAAiB/P,SAAW+P,EAAiB/P,QAAQkR,aACvD,EAwDYC,YAAahB,EACbiB,WAAYf,EAAoBva,UAEhCZ,EAAAA,EAAAA,MAAC2b,EAAAA,EAAK,CAACxb,UAAU,MAAMyb,QAAS,EAAGxb,WAAW,SAAQQ,SAAA,EACpDC,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,KAAK,eAAeX,MAAOF,EAAAA,EAAAA,QAAgB,uBAKrD,MACJR,EAAAA,EAAAA,MAACmc,EAAW,CAAAvb,SAAA,CACT6a,GACD5a,EAAAA,EAAAA,KAACub,EAAiB,CAAAxb,UAChBC,EAAAA,EAAAA,KAACwb,EAAU,CACTC,YAAY,EACZhU,QAAS3F,EACT4Z,WA1DO,SAAC7I,GAClBuH,IAEKvH,GAGHsH,GAAmB,GACnBG,KAHAD,GAKJ,EAkDYsB,aAActB,EACdhH,IAAK2G,SAIVpY,GACC5B,EAAAA,EAAAA,KAAC4b,EAAgB,CAAA7b,UACfC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAO,CAACC,QAAQ,WAEjB,QAELhB,GAAWhG,EAAAA,EAAAA,KAAC6b,EAAU,CAAC5V,UAAWA,EAAUlG,SAAEiG,IAAyB,OAG9E,IAEMwU,EAAiB,SAAC/S,GACtB,QAAKA,IAGW,IAAIqU,aACLC,OAAOtU,GAAS7G,QA9GD,OA+GhC,EAUMob,EAAe,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAA5b,OAAA6b,EAAA,IAAA1D,MAAAwD,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAD,EAAAC,GAAAF,UAAAE,GA4CjB,OA5CiBL,EAAAF,EAAAQ,KAAAC,MAAAT,EAAA,OAAA5T,OAAAkU,KACXI,UAAYpe,EAAAA,YAAiC4d,EAC7CS,WAAa,EAACT,EA4BtBU,SAAW,WACT,GAAKV,EAAKQ,UAAU5S,SAAYoS,EAAKzd,MAAM6c,WAA3C,CAGA,IAAAuB,EAAmCX,EAAKzd,MAAjC8c,EAAUsB,EAAVtB,WAAYC,EAAYqB,EAAZrB,aAEnBsB,EAAgDZ,EAAKQ,UAAU5S,QAAxDiT,EAAYD,EAAZC,aACDrK,EADwBoK,EAATE,WACSD,EADcD,EAAZG,cAE5Bf,EAAKQ,UAAU5S,QAAQkT,UAAYd,EAAKS,WAC1CpB,GAAcA,EAAW7I,GAEzB8I,GAAgBA,EAAa9I,GAE/BwJ,EAAKS,WAAaT,EAAKQ,UAAU5S,QAAQkT,SAVzC,CAWF,EAACd,CAAC,CAuDD,OAvDAgB,EAAAA,EAAAA,GAAArB,EAAA,EAAAvI,IAAA,oBAAAvI,MAxCD,WACEoS,KAAKC,iBACDD,KAAKT,UAAU5S,UACjBqT,KAAKT,UAAU5S,QAAQ2I,QACvB0K,KAAKT,UAAU5S,QAAQuT,iBAAiB,SAAUF,KAAKP,UAE3D,GAAC,CAAAtJ,IAAA,0BAAAvI,MAED,WACE,IAAKoS,KAAKT,UAAU5S,QAClB,OAAO,EAET,IAAAwT,EAAgDH,KAAKT,UAAU5S,QAAxDiT,EAAYO,EAAZP,aAAcC,EAASM,EAATN,UAErB,OAF4CM,EAAZL,aACID,GAAaD,CAEnD,GAAC,CAAAzJ,IAAA,qBAAAvI,MAED,SAAmBwS,EAAa5X,EAAa6X,GACvCA,GACFL,KAAKC,iBAEHD,KAAK1e,MAAM6c,aAAeiC,EAAOjC,YACnC6B,KAAKT,UAAU5S,SAAWqT,KAAKT,UAAU5S,QAAQ2I,OAErD,GAAC,CAAAa,IAAA,QAAAvI,MAkBD,WACE,IAAM9C,EAAOkV,KAAKT,UAAU5S,QACvB7B,GAILA,EAAKwK,OACP,GAAC,CAAAa,IAAA,iBAAAvI,MAED,WACE,IAAM9C,EAAOkV,KAAKT,UAAU5S,QACvB7B,IAILA,EAAK+U,UAAY/U,EAAK8U,aAAe9U,EAAKgV,aAC5C,GAAC,CAAA3J,IAAA,cAAAvI,MAED,WACE,IAAM9C,EAAOkV,KAAKT,UAAU5S,QACvB7B,IAILA,EAAK+U,UAAY,EACjB/U,EAAKwK,QACP,GAAC,CAAAa,IAAA,SAAAvI,MAED,WACE,IAAA0S,EAA6BN,KAAK1e,MAA3B6I,EAAOmW,EAAPnW,QAASoW,EAASD,EAATC,UAChB,OAAKpW,GAWHzH,EAAAA,EAAAA,KAAA,OAAK6d,UAAWA,EAAWje,MAAO,CAACke,QAAS,QAASzK,IAAKiK,KAAKT,UAAWkB,SAAU,EAAEhe,UACpFZ,EAAAA,EAAAA,MAAC6e,EAAgB,CAAAje,SAAA,EACfC,EAAAA,EAAAA,KAACie,EAAW,CAACxW,QAASA,KACtBtI,EAAAA,EAAAA,MAAC+e,EAAO,CAAAne,SAAA,EACNC,EAAAA,EAAAA,KAACme,EAAe,KAChBne,EAAAA,EAAAA,KAACoe,IAAI,CAACC,SAAS,EAAOC,YAAU,EAAAve,SAC7B0H,aAfPzH,EAAAA,EAAAA,KAAA,OAAK6d,UAAWA,EAAWxK,IAAKiK,KAAKT,UAAU9c,UAC7CC,EAAAA,EAAAA,KAACge,EAAgB,CAACpe,MAAO,CAACJ,eAAgB,SAAUD,WAAY,UAAUQ,SAC5D,MAAX0H,EAAkB,wBAA0B,eAmBvD,KAACuU,CAAA,CAnGkB,CAASvd,EAAAA,WAsGxBwf,EAAc,SAACrf,GACnB,IAAO6I,EAAW7I,EAAX6I,QACP,IAAKA,EACH,OAAO,KAET,IAAM8W,EAAU9W,EAAQ+W,MAAM,OACxBvP,EAAQsP,EAAUA,EAAQ3d,OAAS,EACzC,OACEZ,EAAAA,EAAAA,KAACye,EAAmB,CAAA1e,SACjBgZ,MAAMC,KAAKD,MAAM9J,IAAQ,SAACyP,EAAGC,GAAC,OAC7B3e,EAAAA,EAAAA,KAAA,OAAAD,SAAc6e,OAAOD,EAAI,IAAfA,EAAwB,KAI1C,EAEMT,EAAUnR,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,yBAAAC,YAAA,gBAAVF,CAAU,uCAEJpN,EAAAA,EAAAA,SAEhB8e,EAAsB1R,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,qCAAAC,YAAA,gBAAVF,CAAU,wMAOhBpN,EAAAA,EAAAA,SAKhBwe,GAAkBU,EAAAA,EAAAA,IAAiBvgB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iWA0BnCyf,EAAmBjR,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,kCAAAC,YAAA,gBAAVF,CAAU,0EAIbpN,EAAAA,EAAAA,SAEhBqb,EAAgBjO,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,+BAAAC,YAAA,gBAAVF,CAAU,iIAS5B,SAAA3K,GAAW,OAAAA,EAAT6D,UAAkD,KAAO,gBAAgB,IAEzE4V,EAAa9O,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,4BAAAC,YAAA,gBAAVF,CAAU,0KAKPpN,EAAAA,EAAAA,SAKlB,SAAAgD,GAAW,OAAAA,EAATsD,UAAkD,KAAO,gBAAgB,IAGzEqV,EAAcvO,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,6BAAAC,YAAA,gBAAVF,CAAU,gDAKxBwO,EAAoBxO,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,mCAAAC,YAAA,gBAAVF,CAAU,+BAI9ByO,GAAazO,EAAAA,EAAAA,IAAOiP,GAAgBnM,WAAA,CAAA7C,YAAA,4BAAAC,YAAA,gBAAvBF,CAAuB,gIAEzB+R,EAAAA,EAAAA,WAUXlD,EAAmB7O,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,kCAAAC,YAAA,gBAAVF,CAAU,0IASdpN,EAAAA,EAAAA,SAIfsb,EAAclO,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,6BAAAC,YAAA,gBAAVF,CAAU,iJAYxBmO,EAAcnO,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,6BAAAC,YAAA,iBAAVF,CAAU,0OAYxB8N,EAAc9N,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,6BAAAC,YAAA,iBAAVF,CAAU,mF,oHChXjBgS,EAAmC,SAC9C7I,EACA7P,GAEA,IACM2Y,GADY9I,EAAkBpI,OAAOG,OAAOiI,GAAmB,IAC1CsC,MAAK,SAACyG,GAAI,OAAKA,EAAKlJ,SAASrE,SAASrL,EAAQ,IACzE,OAAO2Y,IAAoB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU1I,QAC/B,EAEO,SAAS4I,EAAgCxgB,GAQ5C,IAPFqX,EAAQrX,EAARqX,SACAoJ,EAAiBzgB,EAAjBygB,kBACAld,EAAQvD,EAARuD,SAMAmd,GAAkDC,EAAAA,EAAAA,GAA+B,CAC/EC,SAAU,eACVC,GAAAlc,EAAAA,EAAAA,GAAA+b,EAAA,GAFK1Y,EAAiB6Y,EAAA,GAAEC,EAAoBD,EAAA,GA6C9C,OAzCA9gB,EAAAA,WAAgB,WACd,GAAa,OAARsX,QAAQ,IAARA,GAAAA,EAAUnV,SAAU8F,EAIzB,GAAIzE,EAASiU,gBAAiB,CAC5B,IAAMuJ,EAAc3R,OAAOC,KAAK9L,EAASiU,iBACnCwJ,EAAiBD,EAAYjH,MAAK,SAACmH,GACvC,OAAOR,EAAkBlJ,OACvB,SAAC5P,GAAO,OACNpE,EAASiU,iBACTjU,EAASiU,gBAAgByJ,GAAa5J,SAASrE,SAASrL,EAAQ,GAEtE,IACAmZ,EAAqBE,GAAkBD,EAAY,GACrD,MAAO,GAAK1J,EAASrE,SAAShL,IAMvB,GAAiC,IAA7ByY,EAAkBve,QAAgB8F,IAAsByY,EAAkB,GAAI,CACvF,IAAMH,EAAWD,EACf9c,EAASiU,gBACTiJ,EAAkB,IAEpBH,GAAYQ,EAAqBR,EACnC,MAZkD,CAChD,IAAMA,EAAWD,EACf9c,EAASiU,gBACoB,IAA7BiJ,EAAkBve,OAAeue,EAAkB,GAAMpJ,EAAS,IAEpEiJ,GAAYQ,EAAqBR,EACnC,CAOF,GAAG,CACDjJ,EACArP,EACAyY,EACAld,EAASiU,gBACTsJ,IAQK,CAAC7gB,eAJNsD,EAASiU,iBAAmBxP,KAAqBzE,EAASiU,gBACtDjU,EAASiU,gBAAgBxP,QACzBjB,EAEkBiB,kBAAAA,EAAmB8Y,qBAAAA,EAC7C,C,gNC5DMI,EAAY,IAElB,SAASC,EAAchS,GACrB,OAAOA,EACJiS,OACA3X,KAAI,SAACsL,GAAG,OAAKA,EAAIhC,aAAa,IAC9B0F,KAAKyI,EACV,CAEO,IAAMG,EAA8C,CACzDzL,MAAO,IACPvI,KAAM,GACN8B,OAAQgS,EAAcG,EAAAA,GACtBvG,eAAgB,OAChBwG,YAAa,IAmBFC,EAAuB,SAACC,GACnC,IAAMC,EAAYD,EAAS,MAAK,GAC1BE,EAAmBF,EAAgB,aAAK,GACxCG,EAAsBH,EAAmB,gBAAK,GAC9CI,EAAcJ,EAAW,QAAK,GAE9BK,EAAYJ,EAAUjP,MAAMyO,GAC5BK,EAAcI,IAAqBD,EAAYK,OAAOJ,GAAoB,KAC1E5G,EAAyC,SAAxB6G,EAEjBI,GAAYpH,EAAAA,EAAAA,KAKlB,MAAO,CACLqH,UAAW,EACXV,YAAAA,EACAxG,eAAAA,EACA7B,SARe4I,EAAUrY,KAAI,SAACsI,GAAK,OAAKmQ,EAAAA,EAAAA,IAAyBnQ,EAAOiQ,EAAU,IASlF7S,OAPmB0S,EAAYpP,MAAMyO,GAQlCzX,KAAI,SAACU,GAAK,OAAKA,EAAMgY,aAAa,IAClC/P,QAAO,SAACjI,GAAK,OAAKwQ,EAAAA,EAAAA,eAAwBxQ,EAAM,IAChDqF,QAAO,SAACC,EAAOtF,GAAK,OAAA/H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUqN,GAAK,IAAAhB,EAAAA,EAAAA,GAAA,GAAGtE,GAAQ,GAAI,GAAI,CAAC,GAE9D,EAEO,SAASiY,EAAqBhQ,GACnC,IAAMiQ,EAAuBjQ,EAAO8G,SAASzP,KAAI,SAACsQ,GAAC,OACjDA,EAAEhI,MAAK,GAAAlI,OAAMkQ,EAAEhI,MAAK,KAAAlI,OAAIkQ,EAAEvN,OAAUuN,EAAEvN,KAAK,IAG7C,MAAO,CACLuO,eAAgB3I,EAAO2I,eAAiB,OAAS,QACjDwG,YAAanP,EAAOmP,aAAe,GACnClU,KAAMgV,EAAqB5J,KAAKyI,GAChC/R,OAAQgS,EAAc/R,OAAOC,KAAK+C,EAAOjD,QAAQiD,QAAO,SAAC2C,GAAG,QAAO3C,EAAOjD,OAAO4F,EAAI,KAEzF,CAEO,IAAM0E,EAAyB,sBAEzBC,EAAoB,SAAC4I,GAChC,QAAavb,IAATub,IAAuBjI,MAAMkI,QAAQD,GACvC,OAAO,KAGT,IAAME,EAAc,IAAIhM,IAAIpH,OAAOC,KAAKsL,EAAAA,IACxC,OAAO2H,EAAKlQ,QAAO,SAACjI,GAAK,OAAKqY,EAAYC,IAAItY,EAAM,GACtD,EAEO,SAASuY,IAKd,IAAAzM,GAA0BC,EAAAA,EAAAA,GAAoBuD,EAAwBC,GAA/DiJ,GAAiFhe,EAAAA,EAAAA,GAAAsR,EAAA,GAAlE,GAEhB2M,EAAW7iB,EAAAA,SAAc,WAC7B,IAAMoP,EAAwB,OAAfwT,QAAe,IAAfA,EAAAA,EAAmBrB,EAAAA,EAClC,OAAAlf,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWif,GAAkB,IAAElS,OAAQgS,EAAchS,IACvD,GAAG,CAACwT,IAEJ,OAAOhC,EAAAA,EAAAA,GAAkC,CACvCtD,OAAQ+E,EACRS,OAAQrB,EACRoB,SAAAA,GAEJ,C","sources":["../../core/src/instance/useSupportsCapturedLogs.tsx","../../core/src/runs/CapturedLogPanel.tsx","../../core/src/runs/useComputeLogs.tsx","../../core/src/runs/ComputeLogPanel.tsx","../../core/src/runs/LogsProvider.tsx","../../core/src/runs/ExecutionStateDot.tsx","../../core/src/runs/LogFilterSelect.tsx","../../core/src/runs/LogsFilterInput.tsx","../../ui/src/components/useSuggestionsForString.tsx","../../core/src/runs/LogsToolbar.tsx","../../core/src/runs/RawLogContent.tsx","../../core/src/runs/useComputeLogFileKeyForSelection.tsx","../../core/src/runs/useQueryPersistedLogFilter.ts"],"sourcesContent":["import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceSupportsCapturedLogsQuery,\n  InstanceSupportsCapturedLogsQueryVariables,\n} from './types/useSupportsCapturedLogs.types';\n\nexport const useSupportsCapturedLogs = () => {\n  const {data} = useQuery<\n    InstanceSupportsCapturedLogsQuery,\n    InstanceSupportsCapturedLogsQueryVariables\n  >(INSTANCE_SUPPORTS_CAPTURED_LOGS);\n  return !!data?.instance.hasCapturedLogManager;\n};\n\nconst INSTANCE_SUPPORTS_CAPTURED_LOGS = gql`\n  query InstanceSupportsCapturedLogs {\n    instance {\n      id\n      hasCapturedLogManager\n    }\n  }\n`;\n","import {gql, useQuery, useSubscription} from '@apollo/client';\nimport {Box, Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {WebSocketContext} from '../app/WebSocketProvider';\n\nimport {RawLogContent} from './RawLogContent';\nimport {ILogCaptureInfo} from './RunMetadataProvider';\nimport {\n  CapturedLogFragment,\n  CapturedLogsMetadataQuery,\n  CapturedLogsMetadataQueryVariables,\n  CapturedLogsQuery,\n  CapturedLogsQueryVariables,\n  CapturedLogsSubscription,\n  CapturedLogsSubscriptionVariables,\n} from './types/CapturedLogPanel.types';\n\ninterface CapturedLogProps {\n  logKey: string[];\n  visibleIOType: string;\n  onSetDownloadUrl?: (url: string) => void;\n}\n\ninterface CapturedOrExternalLogPanelProps extends CapturedLogProps {\n  logCaptureInfo?: ILogCaptureInfo;\n}\n\nexport const CapturedOrExternalLogPanel: React.FC<CapturedOrExternalLogPanelProps> = React.memo(\n  ({logCaptureInfo, ...props}) => {\n    const externalUrl =\n      logCaptureInfo &&\n      (props.visibleIOType === 'stdout'\n        ? logCaptureInfo.externalStdoutUrl\n        : logCaptureInfo.externalStderrUrl);\n    if (externalUrl) {\n      return (\n        <Box\n          flex={{direction: 'row', alignItems: 'center', justifyContent: 'center', gap: 1}}\n          background={Colors.Gray900}\n          style={{color: Colors.White, flex: 1, minHeight: 0}}\n        >\n          View logs at\n          <a\n            href={externalUrl}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            style={{\n              color: Colors.White,\n              textDecoration: 'underline',\n              marginLeft: 4,\n              marginRight: 4,\n            }}\n          >\n            {externalUrl}\n          </a>\n          <Icon name=\"open_in_new\" color={Colors.White} size={20} style={{marginTop: 2}} />\n        </Box>\n      );\n    }\n    return props.logKey.length ? <CapturedLogPanel {...props} /> : null;\n  },\n);\n\nconst MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\n\nconst slice = (s: string) =>\n  s.length < MAX_STREAMING_LOG_BYTES ? s : s.slice(-MAX_STREAMING_LOG_BYTES);\n\nconst merge = (a?: string | null, b?: string | null): string | null => {\n  if (!b) {\n    return a || null;\n  }\n  if (!a) {\n    return slice(b);\n  }\n  return slice(a + b);\n};\n\ninterface State {\n  stdout: string | null;\n  stderr: string | null;\n  cursor?: string | null;\n  isLoading: boolean;\n  stdoutDownloadUrl?: string;\n  stdoutLocation?: string;\n  stderrDownloadUrl?: string;\n  stderrLocation?: string;\n}\n\ntype Action =\n  | {type: 'update'; logData: CapturedLogFragment}\n  | {type: 'metadata'; metadata: any}\n  | {type: 'reset'};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        isLoading: false,\n        cursor: action.logData?.cursor,\n        stdout: merge(state.stdout, action.logData?.stdout),\n        stderr: merge(state.stderr, action.logData?.stderr),\n      };\n    case 'metadata':\n      return {\n        ...state,\n        ...action.metadata,\n      };\n    case 'reset':\n      return {\n        ...initialState,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  stdout: null,\n  stderr: null,\n  cursor: null,\n  isLoading: true,\n};\n\nconst CapturedLogSubscription: React.FC<{\n  logKey: string[];\n  onLogData: (logData: CapturedLogFragment) => void;\n}> = React.memo(({logKey, onLogData}) => {\n  useSubscription<CapturedLogsSubscription, CapturedLogsSubscriptionVariables>(\n    CAPTURED_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {logKey},\n      onSubscriptionData: ({subscriptionData}) => {\n        if (subscriptionData.data?.capturedLogs) {\n          onLogData(subscriptionData.data.capturedLogs);\n        }\n      },\n    },\n  );\n  return null;\n});\n\nconst CAPTURED_LOGS_SUBSCRIPTION = gql`\n  subscription CapturedLogsSubscription($logKey: [String!]!, $cursor: String) {\n    capturedLogs(logKey: $logKey, cursor: $cursor) {\n      ...CapturedLog\n    }\n  }\n\n  fragment CapturedLog on CapturedLogs {\n    stdout\n    stderr\n    cursor\n  }\n`;\n\nconst CAPTURED_LOGS_METADATA_QUERY = gql`\n  query CapturedLogsMetadataQuery($logKey: [String!]!) {\n    capturedLogsMetadata(logKey: $logKey) {\n      stdoutDownloadUrl\n      stdoutLocation\n      stderrDownloadUrl\n      stderrLocation\n    }\n  }\n`;\n\nconst QUERY_LOG_LIMIT = 100000;\nconst POLL_INTERVAL = 5000;\n\nconst CapturedLogsSubscriptionProvider = ({\n  logKey,\n  children,\n}: {\n  logKey: string[];\n  children: (result: State) => React.ReactChild;\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const logKeyString = JSON.stringify(logKey);\n  React.useEffect(() => {\n    dispatch({type: 'reset'});\n  }, [logKeyString]);\n\n  const onLogData = React.useCallback((logData: CapturedLogFragment) => {\n    dispatch({type: 'update', logData});\n  }, []);\n  return (\n    <>\n      <CapturedLogSubscription logKey={logKey} onLogData={onLogData} />\n      {children(state)}\n    </>\n  );\n};\n\nconst CapturedLogsQueryProvider = ({\n  logKey,\n  children,\n}: {\n  logKey: string[];\n  children: (result: State) => React.ReactChild;\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const logKeyString = JSON.stringify(logKey);\n  React.useEffect(() => {\n    dispatch({type: 'reset'});\n  }, [logKeyString]);\n  const {cursor} = state;\n\n  const {stopPolling, startPolling} = useQuery<CapturedLogsQuery, CapturedLogsQueryVariables>(\n    CAPTURED_LOGS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n      variables: {logKey, cursor, limit: QUERY_LOG_LIMIT},\n      pollInterval: POLL_INTERVAL,\n      onCompleted: (data: CapturedLogsQuery) => {\n        // We have to stop polling in order to update the `after` value.\n        stopPolling();\n        dispatch({type: 'update', logData: data.capturedLogs});\n        startPolling(POLL_INTERVAL);\n      },\n    },\n  );\n\n  return <>{children(state)}</>;\n};\n\nconst CAPTURED_LOGS_QUERY = gql`\n  query CapturedLogsQuery($logKey: [String!]!, $cursor: String, $limit: Int) {\n    capturedLogs(logKey: $logKey, cursor: $cursor, limit: $limit) {\n      stdout\n      stderr\n      cursor\n    }\n  }\n`;\n\nconst CapturedLogPanel: React.FC<CapturedLogProps> = React.memo(\n  ({logKey, visibleIOType, onSetDownloadUrl}) => {\n    const {rootServerURI} = React.useContext(AppContext);\n    const {availability, disabled} = React.useContext(WebSocketContext);\n    const queryResult = useQuery<CapturedLogsMetadataQuery, CapturedLogsMetadataQueryVariables>(\n      CAPTURED_LOGS_METADATA_QUERY,\n      {\n        variables: {logKey},\n      },\n    );\n\n    React.useEffect(() => {\n      if (!onSetDownloadUrl || !queryResult.data) {\n        return;\n      }\n      const visibleDownloadUrl =\n        visibleIOType === 'stdout'\n          ? queryResult.data.capturedLogsMetadata.stdoutDownloadUrl\n          : queryResult.data.capturedLogsMetadata.stderrDownloadUrl;\n\n      if (!visibleDownloadUrl) {\n        return;\n      }\n      if (visibleDownloadUrl.startsWith('/')) {\n        onSetDownloadUrl(rootServerURI + visibleDownloadUrl);\n      } else {\n        onSetDownloadUrl(visibleDownloadUrl);\n      }\n    }, [onSetDownloadUrl, visibleIOType, rootServerURI, queryResult.data]);\n\n    const stdoutLocation = queryResult.data?.capturedLogsMetadata.stdoutLocation || undefined;\n    const stderrLocation = queryResult.data?.capturedLogsMetadata.stderrLocation || undefined;\n    const websocketsUnavailabile = availability === 'unavailable' || disabled;\n    const Component = websocketsUnavailabile\n      ? CapturedLogsQueryProvider\n      : CapturedLogsSubscriptionProvider;\n    return (\n      <div style={{flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column'}}>\n        <Component logKey={logKey}>\n          {(_state: State) => (\n            <>\n              <RawLogContent\n                logData={_state.stdout}\n                isLoading={_state.isLoading}\n                location={stdoutLocation}\n                isVisible={visibleIOType === 'stdout'}\n              />\n              <RawLogContent\n                logData={_state.stderr}\n                isLoading={_state.isLoading}\n                location={stderrLocation}\n                isVisible={visibleIOType === 'stderr'}\n              />\n            </>\n          )}\n        </Component>\n      </div>\n    );\n  },\n);\n","import {gql, useSubscription} from '@apollo/client';\nimport * as React from 'react';\n\nimport {ComputeIoType} from '../graphql/types';\n\nimport {\n  ComputeLogForSubscriptionFragment,\n  ComputeLogsSubscription,\n  ComputeLogsSubscriptionVariables,\n} from './types/useComputeLogs.types';\n\nconst MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\n\nconst slice = (s: string) =>\n  s.length < MAX_STREAMING_LOG_BYTES ? s : s.slice(-MAX_STREAMING_LOG_BYTES);\n\nconst merge = (\n  a: ComputeLogForSubscriptionFragment | null,\n  b: ComputeLogForSubscriptionFragment | null,\n): ComputeLogForSubscriptionFragment | null => {\n  if (!b) {\n    return a;\n  }\n  let data = a?.data;\n  if (a?.data && b?.data) {\n    data = slice(a.data + b.data);\n  } else if (b?.data) {\n    data = slice(b.data);\n  }\n  return {\n    __typename: b.__typename,\n    path: b.path,\n    downloadUrl: b.downloadUrl,\n    data: typeof data === 'string' ? data : null,\n    cursor: b.cursor,\n  };\n};\n\ninterface State {\n  stepKey: string;\n  stdout: ComputeLogForSubscriptionFragment | null;\n  stderr: ComputeLogForSubscriptionFragment | null;\n  isLoading: boolean;\n}\n\ntype Action =\n  | {type: 'stdout'; stepKey: string; log: ComputeLogForSubscriptionFragment | null}\n  | {type: 'stderr'; stepKey: string; log: ComputeLogForSubscriptionFragment | null};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'stdout':\n      const stdout =\n        action.stepKey === state.stepKey ? merge(state.stdout, action.log) : action.log;\n      return {...state, isLoading: false, stdout};\n    case 'stderr':\n      const stderr =\n        action.stepKey === state.stepKey ? merge(state.stderr, action.log) : action.log;\n      return {...state, isLoading: false, stderr};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  stepKey: '',\n  stdout: null,\n  stderr: null,\n  isLoading: true,\n};\n\nexport const useComputeLogs = (runId: string, stepKey: string) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  useSubscription<ComputeLogsSubscription, ComputeLogsSubscriptionVariables>(\n    COMPUTE_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, stepKey, ioType: ComputeIoType.STDOUT, cursor: null},\n      onSubscriptionData: ({subscriptionData}) => {\n        dispatch({type: 'stdout', stepKey, log: subscriptionData.data?.computeLogs || null});\n      },\n    },\n  );\n\n  useSubscription<ComputeLogsSubscription, ComputeLogsSubscriptionVariables>(\n    COMPUTE_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, stepKey, ioType: ComputeIoType.STDERR, cursor: null},\n      onSubscriptionData: ({subscriptionData}) => {\n        dispatch({type: 'stderr', stepKey, log: subscriptionData.data?.computeLogs || null});\n      },\n    },\n  );\n\n  return state;\n};\n\nconst COMPUTE_LOGS_SUBSCRIPTION = gql`\n  subscription ComputeLogsSubscription(\n    $runId: ID!\n    $stepKey: String!\n    $ioType: ComputeIOType!\n    $cursor: String\n  ) {\n    computeLogs(runId: $runId, stepKey: $stepKey, ioType: $ioType, cursor: $cursor) {\n      ...ComputeLogForSubscription\n    }\n  }\n\n  fragment ComputeLogForSubscription on ComputeLogFile {\n    path\n    cursor\n    data\n    downloadUrl\n  }\n`;\n","import {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\n\nimport {RawLogContent} from './RawLogContent';\nimport {useComputeLogs} from './useComputeLogs';\n\ninterface ComputeLogPanelProps {\n  runId: string;\n  ioType: string;\n  setComputeLogUrl: (url: string | null) => void;\n}\n\ninterface ComputeLogPanelMaybeKeyProps extends ComputeLogPanelProps {\n  computeLogFileKey?: string;\n}\n\nexport const ComputeLogPanel: React.FC<ComputeLogPanelMaybeKeyProps> = (props) => {\n  const {runId, computeLogFileKey, ioType, setComputeLogUrl} = props;\n\n  if (!computeLogFileKey) {\n    return (\n      <Box\n        flex={{justifyContent: 'center', alignItems: 'center'}}\n        style={{flex: 1, height: '100%'}}\n      >\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <ComputeLogsPanelWithKey\n      runId={runId}\n      computeLogFileKey={computeLogFileKey}\n      ioType={ioType}\n      setComputeLogUrl={setComputeLogUrl}\n    />\n  );\n};\n\ninterface ComputeLogPanelWithKeyProps extends ComputeLogPanelProps {\n  computeLogFileKey: string;\n}\n\nconst resolveDownloadUrl = (rootServerURI: string, downloadUrl: string | null) => {\n  if (!downloadUrl) {\n    return null;\n  }\n  const isRelativeUrl = (x?: string) => x && x.startsWith('/');\n  return isRelativeUrl(downloadUrl) ? rootServerURI + downloadUrl : downloadUrl;\n};\n\nconst ComputeLogsPanelWithKey: React.FC<ComputeLogPanelWithKeyProps> = React.memo((props) => {\n  const {runId, computeLogFileKey, ioType, setComputeLogUrl} = props;\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const {isLoading, stdout, stderr} = useComputeLogs(runId, computeLogFileKey);\n  const stdoutDownloadUrl = resolveDownloadUrl(rootServerURI, stdout?.downloadUrl || null);\n  const stderrDownloadUrl = resolveDownloadUrl(rootServerURI, stderr?.downloadUrl || null);\n\n  return (\n    <div style={{flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column'}}>\n      <ContentWrapper\n        content={stdout ? stdout.data : null}\n        path={stdout ? stdout.path : undefined}\n        downloadUrl={stdoutDownloadUrl}\n        isLoading={isLoading}\n        isVisible={ioType === 'stdout'}\n        setComputeLogUrl={setComputeLogUrl}\n      />\n      <ContentWrapper\n        content={stderr ? stderr.data : null}\n        path={stderr ? stderr.path : undefined}\n        downloadUrl={stderrDownloadUrl}\n        isLoading={isLoading}\n        isVisible={ioType === 'stderr'}\n        setComputeLogUrl={setComputeLogUrl}\n      />\n    </div>\n  );\n});\n\nconst ContentWrapper = ({\n  isLoading,\n  isVisible,\n  content,\n  path,\n  downloadUrl,\n  setComputeLogUrl,\n}: {\n  isVisible: boolean;\n  isLoading: boolean;\n  content: string | null;\n  path?: string;\n  downloadUrl: string | null;\n  setComputeLogUrl: (url: string | null) => void;\n}) => {\n  React.useEffect(() => {\n    setComputeLogUrl(downloadUrl);\n  }, [setComputeLogUrl, downloadUrl]);\n  return (\n    <RawLogContent\n      logData={content}\n      isLoading={isLoading}\n      isVisible={isVisible}\n      downloadUrl={downloadUrl}\n      location={path}\n    />\n  );\n};\n","import {\n  gql,\n  OnSubscriptionDataOptions,\n  useApolloClient,\n  useQuery,\n  useSubscription,\n} from '@apollo/client';\nimport {TokenizingFieldValue} from '@dagster-io/ui';\nimport throttle from 'lodash/throttle';\nimport * as React from 'react';\n\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {RunStatus} from '../graphql/types';\n\nimport {LogLevelCounts} from './LogsToolbar';\nimport {RUN_DAGSTER_RUN_EVENT_FRAGMENT} from './RunFragments';\nimport {logNodeLevel} from './logNodeLevel';\nimport {LogNode} from './types';\nimport {\n  RunLogsSubscriptionSuccessFragment,\n  PipelineRunLogsSubscriptionStatusFragment,\n  RunLogsQuery,\n  PipelineRunLogsSubscription,\n  RunLogsQueryVariables,\n  PipelineRunLogsSubscriptionVariables,\n} from './types/LogsProvider.types';\nimport {RunDagsterRunEventFragment} from './types/RunFragments.types';\n\nexport interface LogFilterValue extends TokenizingFieldValue {\n  token?: 'step' | 'type' | 'query';\n}\n\nexport interface LogFilter {\n  logQuery: LogFilterValue[];\n  levels: {[key: string]: boolean};\n  focusedTime: number;\n  sinceTime: number;\n  hideNonMatches: boolean;\n}\n\nexport interface LogsProviderLogs {\n  allNodes: LogNode[];\n  counts: LogLevelCounts;\n  loading: boolean;\n}\n\nconst pipelineStatusFromMessages = (messages: RunDagsterRunEventFragment[]) => {\n  const reversed = [...messages].reverse();\n  for (const message of reversed) {\n    const {__typename} = message;\n    switch (__typename) {\n      case 'RunStartEvent':\n        return RunStatus.STARTED;\n      case 'RunEnqueuedEvent':\n        return RunStatus.QUEUED;\n      case 'RunStartingEvent':\n        return RunStatus.STARTING;\n      case 'RunCancelingEvent':\n        return RunStatus.CANCELING;\n      case 'RunCanceledEvent':\n        return RunStatus.CANCELED;\n      case 'RunSuccessEvent':\n        return RunStatus.SUCCESS;\n      case 'RunFailureEvent':\n        return RunStatus.FAILURE;\n    }\n  }\n  return null;\n};\n\nconst BATCH_INTERVAL = 100;\nconst QUERY_LOG_LIMIT = 10000;\n\ntype State = {\n  nodes: LogNode[];\n  cursor: string | null;\n  counts: LogLevelCounts;\n  loading: boolean;\n};\n\ntype Action =\n  | {type: 'append'; queued: RunDagsterRunEventFragment[]; hasMore: boolean; cursor: string}\n  | {type: 'set-cursor'; cursor: string}\n  | {type: 'reset'};\n\nconst emptyCounts = {\n  DEBUG: 0,\n  INFO: 0,\n  WARNING: 0,\n  ERROR: 0,\n  CRITICAL: 0,\n  EVENT: 0,\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'append': {\n      const queuedNodes = action.queued.map((node, ii) => ({\n        ...node,\n        clientsideKey: `csk${node.timestamp}-${ii}`,\n      }));\n      const nodes = [...state.nodes, ...queuedNodes];\n      const counts = {...state.counts};\n      queuedNodes.forEach((node) => {\n        const level = logNodeLevel(node);\n        counts[level]++;\n      });\n      return {nodes, counts, loading: action.hasMore, cursor: action.cursor};\n    }\n    case 'set-cursor':\n      return {...state, cursor: action.cursor};\n    case 'reset':\n      return {nodes: [], counts: emptyCounts, cursor: null, loading: true};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  nodes: [],\n  counts: emptyCounts,\n  cursor: null,\n  loading: true,\n};\n\nconst useLogsProviderWithSubscription = (runId: string) => {\n  const client = useApolloClient();\n  const queue = React.useRef<RunLogsSubscriptionSuccessFragment[]>([]);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const syncPipelineStatusToApolloCache = React.useCallback(\n    (status: RunStatus) => {\n      const local = client.readFragment<PipelineRunLogsSubscriptionStatusFragment>({\n        fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n        fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n        id: `Run:${runId}`,\n      });\n\n      if (local) {\n        const toWrite = {\n          ...local,\n          canTerminate: status === RunStatus.QUEUED || status === RunStatus.STARTED,\n          status,\n        };\n\n        client.writeFragment({\n          fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n          fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n          id: `Run:${runId}`,\n          data: toWrite,\n        });\n      }\n    },\n    [client, runId],\n  );\n\n  React.useEffect(() => {\n    queue.current = [];\n    dispatch({type: 'reset'});\n  }, [runId]);\n\n  // Batch the nodes together so they don't overwhelm the animation of the Gantt,\n  // which depends on a bit of a timing delay to maintain smoothness.\n  const throttledSetNodes = React.useMemo(() => {\n    return throttle(() => {\n      if (!queue.current.length) {\n        return;\n      }\n      const queuedLogs = [...queue.current];\n      queue.current = [];\n      const queuedMessages = queuedLogs.flatMap((log) => log.messages);\n      const lastLog = queuedLogs[queuedLogs.length - 1]!;\n      const hasMore = lastLog.hasMorePastEvents;\n      const cursor = lastLog.cursor;\n\n      dispatch({type: 'append', queued: queuedMessages, hasMore, cursor});\n      const nextPipelineStatus = pipelineStatusFromMessages(queuedMessages);\n\n      // If we're still loading past events, don't sync to the cache -- event chunks could\n      // give us `status` values that don't match the actual state of the run.\n      if (nextPipelineStatus && !hasMore) {\n        syncPipelineStatusToApolloCache(nextPipelineStatus);\n      }\n    }, BATCH_INTERVAL);\n  }, [syncPipelineStatusToApolloCache]);\n\n  const {nodes, counts, cursor, loading} = state;\n\n  const {availability, disabled, status} = React.useContext(WebSocketContext);\n  const lostWebsocket = !disabled && availability === 'available' && status === WebSocket.CLOSED;\n  const currentInitialCursorRef = React.useRef<string | null>(cursor);\n\n  if (lostWebsocket) {\n    // Record the cursor we're at when disconnecting so that our subscription\n    // picks up where we left off.\n    currentInitialCursorRef.current = cursor;\n  }\n  const currentInitialCursor = currentInitialCursorRef.current;\n\n  const variables = React.useMemo(() => {\n    return {\n      runId,\n      cursor: currentInitialCursor,\n    };\n  }, [runId, currentInitialCursor]);\n\n  const subscriptionComponent = React.useMemo(\n    () => (\n      <SubscriptionComponent\n        variables={variables}\n        onSubscriptionData={({subscriptionData}) => {\n          const logs = subscriptionData.data?.pipelineRunLogs;\n          if (!logs || logs.__typename === 'PipelineRunLogsSubscriptionFailure') {\n            return;\n          }\n          // Maintain a queue of messages as they arrive, and call the throttled setter.\n          queue.current.push(logs);\n          // Wait until end of animation frame to call throttled set nodes\n          // otherwise we wont end up batching anything if rendering takes\n          // longer than the BATCH_INTERVAL\n          requestAnimationFrame(throttledSetNodes);\n        }}\n      />\n    ),\n    [variables, throttledSetNodes],\n  );\n\n  return React.useMemo(\n    () =>\n      nodes !== null\n        ? {allNodes: nodes, counts, loading, subscriptionComponent}\n        : {allNodes: [], counts, loading, subscriptionComponent},\n    [counts, loading, nodes, subscriptionComponent],\n  );\n};\n\n/**\n * Putting useSubscription in a component that returns null avoids re-rendering\n * any children components that aren't completely memoized\n * https://stackoverflow.com/questions/61876931/how-to-prevent-re-rendering-with-usesubscription\n */\nconst SubscriptionComponent = ({\n  variables,\n  onSubscriptionData,\n}: {\n  variables: {\n    runId: string;\n    cursor: string | null;\n  };\n  onSubscriptionData: (options: OnSubscriptionDataOptions<PipelineRunLogsSubscription>) => void;\n}) => {\n  useSubscription<PipelineRunLogsSubscription, PipelineRunLogsSubscriptionVariables>(\n    PIPELINE_RUN_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables,\n      onSubscriptionData,\n    },\n  );\n  return null;\n};\n\ninterface LogsProviderProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst LogsProviderWithSubscription: React.FC<LogsProviderProps> = (props) => {\n  const state = useLogsProviderWithSubscription(props.runId);\n  return (\n    <>\n      {state.subscriptionComponent}\n      {props.children(state)}\n    </>\n  );\n};\n\ninterface LogsProviderWithQueryProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst POLL_INTERVAL = 5000;\n\nconst LogsProviderWithQuery = (props: LogsProviderWithQueryProps) => {\n  const {children, runId} = props;\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {counts, cursor, nodes} = state;\n\n  const {stopPolling, startPolling} = useQuery<RunLogsQuery, RunLogsQueryVariables>(\n    RUN_LOGS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n      variables: {runId, cursor, limit: QUERY_LOG_LIMIT},\n      pollInterval: POLL_INTERVAL,\n      onCompleted: (data: RunLogsQuery) => {\n        // We have to stop polling in order to update the `after` value.\n        stopPolling();\n\n        if (\n          data?.pipelineRunOrError.__typename !== 'Run' ||\n          data?.logsForRun.__typename !== 'EventConnection'\n        ) {\n          return;\n        }\n\n        const run = data.pipelineRunOrError;\n        const queued = data.logsForRun.events;\n        const status = run.status;\n        const cursor = data.logsForRun.cursor;\n\n        const hasMore =\n          !!status &&\n          status !== RunStatus.FAILURE &&\n          status !== RunStatus.SUCCESS &&\n          status !== RunStatus.CANCELED;\n\n        dispatch({type: 'append', queued, hasMore, cursor});\n\n        if (hasMore) {\n          startPolling(POLL_INTERVAL);\n        }\n      },\n    },\n  );\n\n  return (\n    <>\n      {children(\n        nodes !== null && nodes.length > 0\n          ? {allNodes: nodes, counts, loading: false}\n          : {allNodes: [], counts, loading: true},\n      )}\n    </>\n  );\n};\n\nexport const LogsProvider: React.FC<LogsProviderProps> = (props) => {\n  const {children, runId} = props;\n  const {availability, disabled} = React.useContext(WebSocketContext);\n\n  // if disabled, drop to query variant immediately\n  if (availability === 'unavailable' || disabled) {\n    return <LogsProviderWithQuery runId={runId}>{children}</LogsProviderWithQuery>;\n  }\n\n  if (availability === 'attempting-to-connect') {\n    return <>{children({allNodes: [], counts: emptyCounts, loading: true})}</>;\n  }\n\n  return <LogsProviderWithSubscription runId={runId}>{children}</LogsProviderWithSubscription>;\n};\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION = gql`\n  subscription PipelineRunLogsSubscription($runId: ID!, $cursor: String) {\n    pipelineRunLogs(runId: $runId, cursor: $cursor) {\n      ... on PipelineRunLogsSubscriptionFailure {\n        missingRunId\n        message\n      }\n      ...RunLogsSubscriptionSuccess\n    }\n  }\n\n  fragment RunLogsSubscriptionSuccess on PipelineRunLogsSubscriptionSuccess {\n    messages {\n      ... on MessageEvent {\n        runId\n      }\n      ...RunDagsterRunEventFragment\n    }\n    hasMorePastEvents\n    cursor\n  }\n\n  ${RUN_DAGSTER_RUN_EVENT_FRAGMENT}\n`;\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT = gql`\n  fragment PipelineRunLogsSubscriptionStatusFragment on Run {\n    id\n    status\n    canTerminate\n  }\n`;\n\nconst RUN_LOGS_QUERY = gql`\n  query RunLogsQuery($runId: ID!, $cursor: String, $limit: Int) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        status\n        canTerminate\n      }\n    }\n    logsForRun(runId: $runId, afterCursor: $cursor, limit: $limit) {\n      ... on EventConnection {\n        events {\n          ... on MessageEvent {\n            runId\n          }\n          ...RunDagsterRunEventFragment\n        }\n        cursor\n      }\n      ... on PythonError {\n        message\n        stack\n      }\n    }\n  }\n\n  ${RUN_DAGSTER_RUN_EVENT_FRAGMENT}\n`;\n","import {Colors} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nimport {IStepState} from './RunMetadataProvider';\n\nexport const ExecutionStateDot = styled.div<{state: IStepState}>`\n  display: inline-block;\n  width: 11px;\n  height: 11px;\n  border-radius: 5.5px;\n  transition: background 200ms linear;\n  background: ${({state}) =>\n    ({\n      [IStepState.RUNNING]: Colors.Gray400,\n      [IStepState.SUCCEEDED]: Colors.Green700,\n      [IStepState.SKIPPED]: Colors.Yellow500,\n      [IStepState.FAILED]: Colors.Red500,\n      [IStepState.PREPARING]: Colors.Red500,\n      [IStepState.RETRY_REQUESTED]: Colors.Red500,\n      [IStepState.UNKNOWN]: Colors.Red500,\n    }[state])};\n  &:hover {\n    background: ${({state}) =>\n      ({\n        [IStepState.RUNNING]: Colors.Gray400,\n        [IStepState.SUCCEEDED]: Colors.Green700,\n        [IStepState.SKIPPED]: Colors.Yellow500,\n        [IStepState.FAILED]: Colors.Red200,\n        [IStepState.PREPARING]: Colors.Red500,\n        [IStepState.RETRY_REQUESTED]: Colors.Red500,\n        [IStepState.UNKNOWN]: Colors.Red500,\n      }[state])};\n  }\n`;\n","import {Box, Button, Checkbox, Colors, Icon, Menu, MenuItem, Popover} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {LogLevel} from '../graphql/types';\nimport {compactNumber} from '../ui/formatters';\n\nexport type FilterOption = {\n  label: string;\n  count: number;\n  enabled: boolean;\n};\n\ninterface Props {\n  options: Record<LogLevel, FilterOption>;\n  onSetFilter: (level: LogLevel, enabled: boolean) => void;\n}\n\nexport const LogFilterSelect: React.FC<Props> = ({options, onSetFilter}) => {\n  const [showMenu, setShowMenu] = React.useState(false);\n\n  const levels = Object.keys(options);\n  const values = Object.values(options);\n  const enabledCount = values.reduce((accum, {enabled}) => (enabled ? accum + 1 : accum), 0);\n\n  const onChange = (level: string) => {\n    return (e: React.ChangeEvent<HTMLInputElement>) => {\n      const checked = e.target.checked;\n      onSetFilter(level as LogLevel, checked);\n    };\n  };\n\n  return (\n    <Popover\n      isOpen={showMenu}\n      placement=\"bottom-start\"\n      canEscapeKeyClose\n      onInteraction={(nextOpenState: boolean) => setShowMenu(nextOpenState)}\n      content={\n        <Menu style={{width: '180px'}} aria-label=\"filter-options\">\n          {levels.map((level) => {\n            const optionForLevel = options[level as keyof typeof options];\n            const {label, count, enabled} = optionForLevel;\n            return (\n              <MenuItem\n                key={level}\n                tagName=\"div\"\n                shouldDismissPopover={false}\n                text={\n                  <Box flex={{direction: 'row', alignItems: 'center'}}>\n                    <MenuCheckbox\n                      id={`menu-check-${level}`}\n                      checked={enabled}\n                      onChange={onChange(level)}\n                      label={\n                        <Box\n                          flex={{\n                            direction: 'row',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                          }}\n                          style={{flex: 1}}\n                        >\n                          <div>{label}</div>\n                          <div style={{color: Colors.Gray500}}>{compactNumber(count)}</div>\n                        </Box>\n                      }\n                    />\n                  </Box>\n                }\n              />\n            );\n          })}\n        </Menu>\n      }\n    >\n      <FilterButton\n        onClick={() => setShowMenu((current) => !current)}\n        icon={<Icon name=\"filter_alt\" />}\n        rightIcon={<Icon name=\"expand_more\" />}\n      >\n        Levels ({enabledCount})\n      </FilterButton>\n    </Popover>\n  );\n};\n\nconst FilterButton = styled(Button)`\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst MenuCheckbox = styled(Checkbox)`\n  display: flex;\n  flex: 1;\n`;\n","import {\n  Colors,\n  Popover,\n  TextInput,\n  SuggestionProvider,\n  useSuggestionsForString,\n  Icon,\n} from '@dagster-io/ui';\nimport Fuse from 'fuse.js';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {ClearButton} from '../ui/ClearButton';\n\ninterface Props {\n  value: string;\n  onChange: (value: string) => void;\n  suggestionProviders: SuggestionProvider[];\n}\n\ntype Action =\n  | {type: 'show-popover'}\n  | {type: 'hide-popover'}\n  | {type: 'highlight'; highlight: number}\n  | {type: 'change-query'}\n  | {type: 'select-suggestion'};\n\ntype State = {\n  shown: boolean;\n  highlight: number;\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'show-popover':\n      return {...state, shown: true};\n    case 'hide-popover':\n      return {...state, shown: false};\n    case 'highlight':\n      return {...state, highlight: action.highlight};\n    case 'change-query':\n      return {...state, shown: true, highlight: 0};\n    case 'select-suggestion':\n      return {...state, highlight: 0};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  shown: false,\n  highlight: 0,\n};\n\nconst fuseOptions = {\n  threshold: 0.3,\n};\n\nexport const LogsFilterInput: React.FC<Props> = (props) => {\n  const {value, onChange, suggestionProviders} = props;\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {shown, highlight} = state;\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const {empty, perProvider} = React.useMemo(() => {\n    const perProvider = suggestionProviders.reduce((accum, provider) => {\n      const values = provider.values();\n      return provider.token\n        ? {...accum, [provider.token]: {fuse: new Fuse(values, fuseOptions), all: values}}\n        : accum;\n    }, {} as {[token: string]: {fuse: Fuse<string>; all: string[]}});\n    const providerKeys = suggestionProviders\n      .map((provider) => provider.token)\n      .filter((token) => token) as string[];\n    return {\n      empty: new Fuse(providerKeys, fuseOptions),\n      perProvider,\n    };\n  }, [suggestionProviders]);\n\n  const buildSuggestions = React.useCallback(\n    (queryString: string): string[] => {\n      if (!queryString) {\n        return Object.keys(perProvider);\n      }\n\n      const [token, value] = queryString.split(':');\n      if (token && token in perProvider) {\n        const {fuse, all} = perProvider[token]!;\n        const results = value\n          ? fuse.search(value).map((result) => `${token}:${result.item}`)\n          : all.map((value) => `${token}:${value}`);\n\n        // If the querystring is an exact match, don't suggest anything.\n        return results.map((result) => result.toLowerCase()).includes(queryString) ? [] : results;\n      }\n\n      return empty.search(queryString).map((result) => result.item);\n    },\n    [empty, perProvider],\n  );\n\n  const {suggestions, onSelectSuggestion} = useSuggestionsForString(buildSuggestions, value);\n\n  const numResults = suggestions.length;\n  const highlightedResult = suggestions[highlight] || null;\n\n  const onInputChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      dispatch({type: 'change-query'});\n      onChange(e.target.value);\n    },\n    [onChange],\n  );\n\n  const onSelect = React.useCallback(\n    (suggestion: string) => {\n      dispatch({type: 'select-suggestion'});\n      onChange(onSelectSuggestion(suggestion));\n    },\n    [onChange, onSelectSuggestion],\n  );\n\n  const onClear = React.useCallback(() => {\n    dispatch({type: 'change-query'});\n    onChange('');\n    inputRef.current?.focus();\n  }, [onChange]);\n\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    const {key} = e;\n    if (key === 'Escape') {\n      dispatch({type: 'hide-popover'});\n      return;\n    }\n\n    if (!numResults) {\n      return;\n    }\n\n    const lastResult = numResults - 1;\n\n    switch (key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === 0 ? lastResult : highlight - 1});\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === lastResult ? 0 : highlight + 1});\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (highlightedResult) {\n          onSelect(highlightedResult);\n        }\n    }\n  };\n  return (\n    <Popover\n      isOpen={shown && suggestions.length > 0}\n      position=\"bottom-left\"\n      content={\n        <Results>\n          {suggestions.map((suggestion, ii) => (\n            <ResultItem\n              key={suggestion}\n              suggestion={suggestion}\n              isHighlight={highlight === ii}\n              onSelect={onSelect}\n            />\n          ))}\n        </Results>\n      }\n    >\n      <FilterInput\n        placeholder=\"Filter…\"\n        spellCheck={false}\n        autoCorrect=\"off\"\n        value={value}\n        ref={inputRef}\n        onChange={onInputChange}\n        onFocus={() => dispatch({type: 'show-popover'})}\n        onBlur={() => dispatch({type: 'hide-popover'})}\n        onKeyDown={onKeyDown}\n        rightElement={\n          <ClearButton onClick={onClear}>\n            <Icon name=\"cancel\" />\n          </ClearButton>\n        }\n      />\n    </Popover>\n  );\n};\n\nconst ResultItem: React.FC<{\n  suggestion: string;\n  isHighlight: boolean;\n  onSelect: (suggestion: string) => void;\n}> = (props) => {\n  const {suggestion, isHighlight, onSelect} = props;\n  const element = React.useRef<HTMLLIElement>(null);\n\n  React.useEffect(() => {\n    if (element.current && isHighlight) {\n      element.current.scrollIntoView({block: 'nearest'});\n    }\n  }, [isHighlight]);\n\n  return (\n    <Item\n      ref={element}\n      isHighlight={isHighlight}\n      onMouseDown={(e: React.MouseEvent<any>) => {\n        e.preventDefault();\n        onSelect(suggestion);\n      }}\n    >\n      {suggestion}\n    </Item>\n  );\n};\n\nconst FilterInput = styled(TextInput)`\n  width: 300px;\n`;\n\nconst Results = styled.ul`\n  list-style: none;\n  margin: 0;\n  max-height: 200px;\n  max-width: 800px;\n  min-width: 300px;\n  overflow-y: auto;\n  padding: 4px 0;\n`;\n\ninterface HighlightableTextProps {\n  readonly isHighlight: boolean;\n}\n\nconst Item = styled.li<HighlightableTextProps>`\n  align-items: center;\n  background-color: ${({isHighlight}) => (isHighlight ? Colors.Blue500 : Colors.White)};\n  color: ${({isHighlight}) => (isHighlight ? Colors.White : 'default')};\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  font-size: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 4px 8px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  &:hover {\n    background-color: ${({isHighlight}) => (isHighlight ? Colors.Blue500 : Colors.Gray100)};\n  }\n`;\n","import * as React from 'react';\n\nexport const useSuggestionsForString = (\n  buildSuggestions: (value: string) => string[],\n  value: string,\n) => {\n  const tokens = value.toLocaleLowerCase().trim().split(/\\s+/);\n  const queryString = tokens[tokens.length - 1] || '';\n\n  const suggestions = React.useMemo(() => buildSuggestions(queryString), [\n    buildSuggestions,\n    queryString,\n  ]);\n\n  const onSelectSuggestion = React.useCallback(\n    (suggestion: string) => {\n      const lastIndex = value.toLocaleLowerCase().lastIndexOf(queryString);\n      if (lastIndex !== -1) {\n        const keep = value.slice(0, lastIndex);\n        return `${keep}${suggestion}`;\n      }\n\n      // Shouldn't really ever fall through to this, since `queryString` should definitely\n      // be the last token in `value`. No-op just in case.\n      return value;\n    },\n    [queryString, value],\n  );\n\n  return React.useMemo(\n    () => ({\n      suggestions,\n      onSelectSuggestion,\n    }),\n    [onSelectSuggestion, suggestions],\n  );\n};\n","import {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  IconName,\n  Icon,\n  MenuItem,\n  Select,\n  Spinner,\n  IconWrapper,\n  Colors,\n  Tooltip,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useCopyToClipboard} from '../app/browser';\nimport {OptionsContainer, OptionsDivider} from '../gantt/VizComponents';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {ExecutionStateDot} from './ExecutionStateDot';\nimport {FilterOption, LogFilterSelect} from './LogFilterSelect';\nimport {LogLevel} from './LogLevel';\nimport {LogsFilterInput} from './LogsFilterInput';\nimport {LogFilter, LogFilterValue} from './LogsProvider';\nimport {\n  extractLogCaptureStepsFromLegacySteps,\n  ILogCaptureInfo,\n  IRunMetadataDict,\n  IStepState,\n} from './RunMetadataProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\nimport {EnabledRunLogLevelsKey, validateLogLevels} from './useQueryPersistedLogFilter';\n\nexport enum LogType {\n  structured = 'structured',\n  stdout = 'stdout',\n  stderr = 'stderr',\n}\n\ninterface ILogsToolbarProps {\n  steps: string[];\n  metadata: IRunMetadataDict;\n  counts: LogLevelCounts;\n\n  filter: LogFilter;\n  onSetFilter: (filter: LogFilter) => void;\n  logType: LogType;\n  onSetLogType: (logType: LogType) => void;\n  computeLogFileKey?: string;\n  onSetComputeLogKey: (key: string) => void;\n  computeLogUrl: string | null;\n\n  children?: React.ReactNode;\n}\n\nconst logQueryToString = (logQuery: LogFilterValue[]) =>\n  logQuery.map(({token, value}) => (token ? `${token}:${value}` : value)).join(' ');\n\nconst INITIAL_COMPUTE_LOG_TYPE = 'initial-compute-log-type';\n\nexport const LogsToolbar: React.FC<ILogsToolbarProps> = (props) => {\n  const {\n    steps,\n    metadata,\n    counts,\n    filter,\n    onSetFilter,\n    logType,\n    onSetLogType,\n    computeLogFileKey,\n    onSetComputeLogKey,\n    computeLogUrl,\n    children,\n  } = props;\n\n  const [\n    initialComputeLogType,\n    setInitialComputeLogType,\n  ] = useStateWithStorage(INITIAL_COMPUTE_LOG_TYPE, (value: any) =>\n    typeof value === 'string' ? (value as LogType) : LogType.stdout,\n  );\n\n  const setComputeLogType = React.useCallback(\n    (logType: LogType) => {\n      setInitialComputeLogType(logType);\n      onSetLogType(logType);\n    },\n    [onSetLogType, setInitialComputeLogType],\n  );\n\n  const activeItems = React.useMemo(\n    () => new Set([logType === LogType.structured ? logType : initialComputeLogType]),\n    [logType, initialComputeLogType],\n  );\n\n  return (\n    <OptionsContainer>\n      <Box margin={{right: 12}}>\n        <ButtonGroup\n          activeItems={activeItems}\n          buttons={[\n            {id: LogType.structured, icon: 'list', tooltip: 'Structured event logs'},\n            {id: initialComputeLogType, icon: 'wysiwyg', tooltip: 'Raw compute logs'},\n          ]}\n          onClick={(id) => onSetLogType(id)}\n        />\n      </Box>\n      {logType === 'structured' ? (\n        <StructuredLogToolbar\n          counts={counts}\n          filter={filter}\n          onSetFilter={onSetFilter}\n          showCopyURL={!children}\n          steps={steps}\n        />\n      ) : (\n        <ComputeLogToolbar\n          steps={steps}\n          metadata={metadata}\n          logType={logType}\n          onSetLogType={setComputeLogType}\n          computeLogFileKey={computeLogFileKey}\n          onSetComputeLogKey={onSetComputeLogKey}\n          computeLogUrl={computeLogUrl}\n        />\n      )}\n      {children}\n    </OptionsContainer>\n  );\n};\n\nconst resolveState = (metadata: IRunMetadataDict, logCapture: ILogCaptureInfo) => {\n  // resolves the state of potentially many steps into a single state so that we can show the\n  // execution dot representing the status of this log capture group (potentially at the process\n  // level)\n  if (\n    logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey]!.state === IStepState.RUNNING)\n  ) {\n    return IStepState.RUNNING;\n  }\n  if (\n    logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey]!.state === IStepState.SKIPPED)\n  ) {\n    return IStepState.SKIPPED;\n  }\n  if (\n    logCapture.stepKeys.every((stepKey) => metadata.steps[stepKey]!.state === IStepState.SUCCEEDED)\n  ) {\n    return IStepState.SUCCEEDED;\n  }\n  return IStepState.FAILED;\n};\n\nexport const ComputeLogToolbar = ({\n  steps,\n  metadata,\n  computeLogFileKey,\n  onSetComputeLogKey,\n  logType,\n  onSetLogType,\n  computeLogUrl,\n}: {\n  metadata: IRunMetadataDict;\n  steps?: string[];\n  computeLogFileKey?: string;\n  onSetComputeLogKey: (step: string) => void;\n  logType: LogType;\n  onSetLogType: (type: LogType) => void;\n  computeLogUrl: string | null;\n}) => {\n  const logCaptureSteps =\n    metadata.logCaptureSteps || extractLogCaptureStepsFromLegacySteps(Object.keys(metadata.steps));\n\n  const logCaptureInfo = computeLogFileKey && (logCaptureSteps as any)[computeLogFileKey];\n  const isValidStepSelection = !!logCaptureInfo;\n\n  const fileKeyText = (fileKey?: string) => {\n    if (!fileKey || !(logCaptureSteps as any)[fileKey]) {\n      return null;\n    }\n    const captureInfo = (logCaptureSteps as any)[fileKey];\n    if (captureInfo.stepKeys.length === 1 && fileKey === captureInfo.stepKeys[0]) {\n      return fileKey;\n    }\n    if (captureInfo.pid && captureInfo.stepKeys.length === 1) {\n      return captureInfo.stepKeys[0];\n    }\n    if (captureInfo.pid) {\n      return `pid: ${captureInfo.pid} (${captureInfo.stepKeys.length} steps)`;\n    }\n    return `${fileKey} (${captureInfo.stepKeys.length} steps)`;\n  };\n\n  return (\n    <Box\n      flex={{justifyContent: 'space-between', alignItems: 'center', direction: 'row'}}\n      style={{flex: 1}}\n    >\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n        {steps ? (\n          <Select\n            disabled={!steps.length}\n            items={Object.keys(logCaptureSteps)}\n            itemPredicate={(query, item) =>\n              item.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n            }\n            itemRenderer={(item: string, options: {handleClick: any; modifiers: any}) => (\n              <MenuItem\n                key={item}\n                onClick={options.handleClick}\n                text={fileKeyText(item)}\n                active={options.modifiers.active}\n              />\n            )}\n            activeItem={computeLogFileKey}\n            onItemSelect={(fileKey) => {\n              onSetComputeLogKey(fileKey);\n            }}\n          >\n            <Button disabled={!steps.length} rightIcon={<Icon name=\"expand_more\" />}>\n              {fileKeyText(computeLogFileKey) || 'Select a step...'}\n            </Button>\n          </Select>\n        ) : undefined}\n\n        {isValidStepSelection ? (\n          <ButtonGroup<LogType>\n            activeItems={new Set([logType])}\n            onClick={onSetLogType}\n            buttons={[\n              {id: LogType.stdout, label: 'stdout'},\n              {id: LogType.stderr, label: 'stderr'},\n            ]}\n          />\n        ) : null}\n\n        {!steps ? <Box>Step: {(logCaptureInfo?.stepKeys || []).join(', ')}</Box> : undefined}\n      </Box>\n      {isValidStepSelection ? (\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          {logCaptureInfo ? (\n            <Tooltip placement=\"top-end\" content=\"Status of this log capture group\">\n              {resolveState(metadata, logCaptureInfo) === IStepState.RUNNING ? (\n                <Spinner purpose=\"body-text\" />\n              ) : (\n                <ExecutionStateDot state={resolveState(metadata, logCaptureInfo)} />\n              )}\n            </Tooltip>\n          ) : null}\n          {computeLogUrl ? (\n            <Tooltip\n              placement=\"top-end\"\n              content={\n                logCaptureInfo?.stepKeys.length === 1\n                  ? `Download ${logCaptureInfo?.stepKeys[0]} compute logs`\n                  : `Download compute logs`\n              }\n            >\n              <DownloadLink aria-label=\"Download link\" href={computeLogUrl} download>\n                <Icon name=\"download_for_offline\" color={Colors.Gray600} />\n              </DownloadLink>\n            </Tooltip>\n          ) : null}\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nconst DownloadLink = styled.a`\n  border-radius: 4px;\n  display: block;\n  text-decoration: none;\n\n  ${IconWrapper} {\n    transition: background-color 100ms linear;\n  }\n\n  :hover ${IconWrapper} {\n    background-color: ${Colors.Gray800};\n  }\n\n  :active ${IconWrapper}, :focus ${IconWrapper} {\n    background-color: ${Colors.Dark};\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n\nexport type LogLevelCounts = Record<LogLevel, number>;\n\nconst StructuredLogToolbar = ({\n  filter,\n  counts,\n  onSetFilter,\n  steps,\n  showCopyURL,\n}: {\n  filter: LogFilter;\n  counts: LogLevelCounts;\n  onSetFilter: (filter: LogFilter) => void;\n  steps: string[];\n  showCopyURL: boolean;\n}) => {\n  const [copyIcon, setCopyIcon] = React.useState<IconName>('assignment');\n  const logQueryString = logQueryToString(filter.logQuery);\n  const [queryString, setQueryString] = React.useState<string>(() => logQueryString);\n  const copyToClipboard = useCopyToClipboard();\n\n  // Persist the user's selected log level filters as defaults. We only _set_ the value here,\n  // when the filter select changes -- the default is read from localStorage by\n  // useQueryPersistedLogFilter.\n  const [_, setStoredLogLevels] = useStateWithStorage(EnabledRunLogLevelsKey, validateLogLevels);\n\n  const selectedStep = filter.logQuery.find((v) => v.token === 'step')?.value || null;\n  const filterText = filter.logQuery.reduce((accum, value) => accum + value.value, '');\n\n  // Reset the query string if the filter is updated, allowing external behavior\n  // (e.g. clicking a Gantt step) to set the input.\n  React.useEffect(() => {\n    setQueryString(logQueryString);\n  }, [logQueryString]);\n\n  const onChange = (value: string) => {\n    const tokens = value.split(/\\s+/);\n    const logQuery = tokens.map((item) => {\n      const segments = item.split(':');\n      if (segments.length > 1) {\n        return {token: segments[0], value: segments[1]};\n      }\n      return {value: segments[0]};\n    });\n    onSetFilter({...filter, logQuery: logQuery as LogFilterValue[]});\n    setQueryString(value);\n  };\n\n  const onChangeFilter = React.useCallback(\n    (level: LogLevel, enabled: boolean) => {\n      const allEnabledFilters = new Set(\n        Object.keys(filter.levels).filter((level) => !!filter.levels[level]),\n      );\n\n      // When changing log level filters, update localStorage with the selected levels\n      // so that it persists as the default.\n      enabled ? allEnabledFilters.add(level) : allEnabledFilters.delete(level);\n      setStoredLogLevels(Array.from(allEnabledFilters));\n\n      // Then, update the querystring.\n      onSetFilter({\n        ...filter,\n        levels: {\n          ...filter.levels,\n          [level]: enabled,\n        },\n      });\n    },\n    [filter, onSetFilter, setStoredLogLevels],\n  );\n\n  // Restore the clipboard icon after a delay.\n  React.useEffect(() => {\n    let token: any;\n    if (copyIcon === 'assignment_turned_in') {\n      token = setTimeout(() => {\n        setCopyIcon('assignment');\n      }, 2000);\n    }\n    return () => {\n      token && clearTimeout(token);\n    };\n  }, [copyIcon]);\n\n  const filterOptions = Object.fromEntries(\n    Object.keys(LogLevel).map((level) => {\n      return [\n        level,\n        {\n          label: level.toLowerCase(),\n          count: counts[level as LogLevel],\n          enabled: !!filter.levels[level],\n        },\n      ] as [LogLevel, FilterOption];\n    }),\n  );\n\n  return (\n    <>\n      <LogsFilterInput\n        value={queryString}\n        suggestionProviders={getRunFilterProviders(steps)}\n        onChange={onChange}\n      />\n      {filterText ? (\n        <NonMatchCheckbox\n          checked={filter.hideNonMatches}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            onSetFilter({...filter, hideNonMatches: event.currentTarget.checked})\n          }\n          label=\"Hide non-matches\"\n        />\n      ) : null}\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}} margin={{left: 12}}>\n        <LogFilterSelect\n          options={filterOptions as Record<LogLevel, FilterOption>}\n          onSetFilter={onChangeFilter}\n        />\n      </Box>\n      {selectedStep && <OptionsDivider />}\n      <div style={{minWidth: 15, flex: 1}} />\n      {showCopyURL && (\n        <Button\n          icon={<Icon name={copyIcon} />}\n          onClick={() => {\n            copyToClipboard(window.location.href);\n            setCopyIcon('assignment_turned_in');\n          }}\n        >\n          Copy URL\n        </Button>\n      )}\n    </>\n  );\n};\n\nconst NonMatchCheckbox = styled(Checkbox)`\n  &&& {\n    margin: 0 4px 0 12px;\n  }\n\n  white-space: nowrap;\n`;\n","import {Colors, Group, Icon, Spinner, FontFamily} from '@dagster-io/ui';\nimport Ansi from 'ansi-to-react';\nimport * as React from 'react';\nimport styled, {createGlobalStyle} from 'styled-components/macro';\n\nconst MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\nconst TRUNCATE_PREFIX = '\\u001b[33m...logs truncated...\\u001b[39m\\n';\nconst SCROLLER_LINK_TIMEOUT_MS = 3000;\n\nexport const RawLogContent: React.FC<{\n  logData: string | null;\n  isLoading: boolean;\n  isVisible: boolean;\n  downloadUrl?: string | null;\n  location?: string;\n}> = React.memo(({logData, location, isLoading, isVisible, downloadUrl}) => {\n  const contentContainer = React.useRef<ScrollContainer | null>(null);\n  const timer = React.useRef<number>();\n  const [showScrollToTop, setShowScrollToTop] = React.useState(false);\n  const scrollToTop = () => {\n    contentContainer.current && contentContainer.current.scrollToTop();\n  };\n  const cancelHideWarning = () => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = 0;\n    }\n  };\n  const hideWarning = () => {\n    setShowScrollToTop(false);\n    cancelHideWarning();\n  };\n  const scheduleHideWarning = () => {\n    timer.current = window.setTimeout(hideWarning, SCROLLER_LINK_TIMEOUT_MS);\n  };\n  const onScrollUp = (position: number) => {\n    cancelHideWarning();\n\n    if (!position) {\n      hideWarning();\n    } else {\n      setShowScrollToTop(true);\n      scheduleHideWarning();\n    }\n  };\n  let content = logData;\n  const isTruncated = shouldTruncate(content);\n\n  if (content && isTruncated) {\n    const nextLine = content.indexOf('\\n') + 1;\n    const truncated = nextLine < content.length ? content.slice(nextLine) : content;\n    content = TRUNCATE_PREFIX + truncated;\n  }\n  const warning = isTruncated ? (\n    <FileWarning>\n      <Group direction=\"row\" spacing={8} alignItems=\"center\">\n        <Icon name=\"warning\" color={Colors.Yellow500} />\n        <div>\n          This log has exceeded the 5MB limit.{' '}\n          {downloadUrl ? (\n            <a href={downloadUrl} download>\n              Download the full log file\n            </a>\n          ) : null}\n          .\n        </div>\n      </Group>\n    </FileWarning>\n  ) : null;\n\n  return (\n    <>\n      <FileContainer isVisible={isVisible}>\n        {showScrollToTop ? (\n          <ScrollToast>\n            <ScrollToTop\n              onClick={scrollToTop}\n              onMouseOver={cancelHideWarning}\n              onMouseOut={scheduleHideWarning}\n            >\n              <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                <Icon name=\"arrow_upward\" color={Colors.White} />\n                Scroll to top\n              </Group>\n            </ScrollToTop>\n          </ScrollToast>\n        ) : null}\n        <FileContent>\n          {warning}\n          <RelativeContainer>\n            <LogContent\n              isSelected={true}\n              content={logData}\n              onScrollUp={onScrollUp}\n              onScrollDown={hideWarning}\n              ref={contentContainer}\n            />\n          </RelativeContainer>\n        </FileContent>\n        {isLoading ? (\n          <LoadingContainer>\n            <Spinner purpose=\"page\" />\n          </LoadingContainer>\n        ) : null}\n      </FileContainer>\n      {location ? <FileFooter isVisible={isVisible}>{location}</FileFooter> : null}\n    </>\n  );\n});\n\nconst shouldTruncate = (content: string | null | undefined) => {\n  if (!content) {\n    return false;\n  }\n  const encoder = new TextEncoder();\n  return encoder.encode(content).length >= MAX_STREAMING_LOG_BYTES;\n};\n\ninterface IScrollContainerProps {\n  content: string | null | undefined;\n  isSelected?: boolean;\n  className?: string;\n  onScrollUp?: (position: number) => void;\n  onScrollDown?: (position: number) => void;\n}\n\nclass ScrollContainer extends React.Component<IScrollContainerProps> {\n  private container = React.createRef<HTMLDivElement>();\n  private lastScroll = 0;\n\n  componentDidMount() {\n    this.scrollToBottom();\n    if (this.container.current) {\n      this.container.current.focus();\n      this.container.current.addEventListener('scroll', this.onScroll);\n    }\n  }\n\n  getSnapshotBeforeUpdate() {\n    if (!this.container.current) {\n      return false;\n    }\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const shouldScroll = offsetHeight + scrollTop >= scrollHeight;\n    return shouldScroll;\n  }\n\n  componentDidUpdate(_props: any, _state: any, shouldScroll: boolean) {\n    if (shouldScroll) {\n      this.scrollToBottom();\n    }\n    if (this.props.isSelected && !_props.isSelected) {\n      this.container.current && this.container.current.focus();\n    }\n  }\n\n  onScroll = () => {\n    if (!this.container.current || !this.props.isSelected) {\n      return;\n    }\n    const {onScrollUp, onScrollDown} = this.props;\n\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const position = scrollTop / (scrollHeight - offsetHeight);\n    if (this.container.current.scrollTop < this.lastScroll) {\n      onScrollUp && onScrollUp(position);\n    } else {\n      onScrollDown && onScrollDown(position);\n    }\n    this.lastScroll = this.container.current.scrollTop;\n  };\n\n  focus() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.focus();\n  }\n\n  scrollToBottom() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = node.scrollHeight - node.offsetHeight;\n  }\n\n  scrollToTop() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = 0;\n    node.focus();\n  }\n\n  render() {\n    const {content, className} = this.props;\n    if (!content) {\n      return (\n        <div className={className} ref={this.container}>\n          <ContentContainer style={{justifyContent: 'center', alignItems: 'center'}}>\n            {content == null ? 'No log file available' : 'No output'}\n          </ContentContainer>\n        </div>\n      );\n    }\n\n    return (\n      <div className={className} style={{outline: 'none'}} ref={this.container} tabIndex={0}>\n        <ContentContainer>\n          <LineNumbers content={content} />\n          <Content>\n            <SolarizedColors />\n            <Ansi linkify={false} useClasses>\n              {content}\n            </Ansi>\n          </Content>\n        </ContentContainer>\n      </div>\n    );\n  }\n}\n\nconst LineNumbers = (props: IScrollContainerProps) => {\n  const {content} = props;\n  if (!content) {\n    return null;\n  }\n  const matches = content.match(/\\n/g);\n  const count = matches ? matches.length : 0;\n  return (\n    <LineNumberContainer>\n      {Array.from(Array(count), (_, i) => (\n        <div key={i}>{String(i + 1)}</div>\n      ))}\n    </LineNumberContainer>\n  );\n};\n\nconst Content = styled.div`\n  padding: 10px;\n  background-color: ${Colors.Gray900};\n`;\nconst LineNumberContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  border-right: 1px solid #5c7080;\n  padding: 10px 10px 10px 20px;\n  margin-right: 5px;\n  background-color: ${Colors.Gray900};\n  opacity: 0.8;\n  color: #858585;\n  min-height: 100%;\n`;\nconst SolarizedColors = createGlobalStyle`\n  .ansi-black {\n    color: #586e75;\n  }\n  .ansi-red {\n    color: #dc322f;\n  }\n  .ansi-green {\n    color: #859900;\n  }\n  .ansi-yellow {\n    color: #b58900;\n  }\n  .ansi-blue {\n    color: #268bd2;\n  }\n  .ansi-magenta {\n    color: #d33682;\n  }\n  .ansi-cyan {\n    color: #2aa198;\n  }\n  .ansi-white {\n    color: #eee8d5;\n  }\n`;\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100%;\n  background-color: ${Colors.Gray900};\n`;\nconst FileContainer = styled.div`\n  flex: 1;\n  height: 100%;\n  position: relative;\n  &:first-child {\n    border-right: 0.5px solid #5c7080;\n  }\n  display: flex;\n  flex-direction: column;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\nconst FileFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 30px;\n  background-color: ${Colors.Gray900};\n  border-top: 0.5px solid #5c7080;\n  color: #aaaaaa;\n  padding: 2px 5px;\n  font-size: 0.85em;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\n\nconst FileContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\nconst RelativeContainer = styled.div`\n  flex: 1;\n  position: relative;\n`;\nconst LogContent = styled(ScrollContainer)`\n  color: #eeeeee;\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  white-space: pre;\n  overflow: auto;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  justifycontent: center;\n  alignitems: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  backgroundcolor: ${Colors.Gray800};\n  opacity: 0.3;\n`;\n\nconst ScrollToast = styled.div`\n  position: absolute;\n  height: 30px;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  z-index: 1;\n`;\nconst ScrollToTop = styled.div`\n  background-color: black;\n  padding: 10px 20px;\n  border-bottom-right-radius: 5px;\n  border-bottom-left-radius: 5px;\n  color: white;\n  border-bottom: 0.5px solid #5c7080;\n  border-left: 0.5px solid #5c7080;\n  border-right: 0.5px solid #5c7080;\n  cursor: pointer;\n`;\n\nconst FileWarning = styled.div`\n  background-color: #fffae3;\n  padding: 10px 20px;\n  margin: 20px 70px;\n  border-radius: 5px;\n`;\n","import React from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\n\nimport {IRunMetadataDict, ILogCaptureInfo} from './RunMetadataProvider';\n\nexport const matchingComputeLogKeyFromStepKey = (\n  logCaptureSteps: {[fileKey: string]: ILogCaptureInfo} | undefined,\n  stepKey: string,\n) => {\n  const stepsInfo = logCaptureSteps ? Object.values(logCaptureSteps) : [];\n  const matching = stepsInfo.find((info) => info.stepKeys.includes(stepKey));\n  return matching && matching?.fileKey;\n};\n\nexport function useComputeLogFileKeyForSelection({\n  stepKeys,\n  selectionStepKeys,\n  metadata,\n}: {\n  stepKeys: string[];\n  selectionStepKeys: string[];\n  metadata: IRunMetadataDict;\n}) {\n  const [computeLogFileKey, setComputeLogFileKey] = useQueryPersistedState<string>({\n    queryKey: 'logFileKey',\n  });\n\n  React.useEffect(() => {\n    if (!stepKeys?.length || computeLogFileKey) {\n      return;\n    }\n\n    if (metadata.logCaptureSteps) {\n      const logFileKeys = Object.keys(metadata.logCaptureSteps);\n      const selectedLogKey = logFileKeys.find((logFileKey) => {\n        return selectionStepKeys.every(\n          (stepKey) =>\n            metadata.logCaptureSteps &&\n            metadata.logCaptureSteps[logFileKey]!.stepKeys.includes(stepKey),\n        );\n      });\n      setComputeLogFileKey(selectedLogKey || logFileKeys[0]!);\n    } else if (!stepKeys.includes(computeLogFileKey)) {\n      const matching = matchingComputeLogKeyFromStepKey(\n        metadata.logCaptureSteps,\n        selectionStepKeys.length === 1 ? selectionStepKeys[0]! : stepKeys[0]!,\n      );\n      matching && setComputeLogFileKey(matching);\n    } else if (selectionStepKeys.length === 1 && computeLogFileKey !== selectionStepKeys[0]) {\n      const matching = matchingComputeLogKeyFromStepKey(\n        metadata.logCaptureSteps,\n        selectionStepKeys[0]!,\n      );\n      matching && setComputeLogFileKey(matching);\n    }\n  }, [\n    stepKeys,\n    computeLogFileKey,\n    selectionStepKeys,\n    metadata.logCaptureSteps,\n    setComputeLogFileKey,\n  ]);\n\n  const logCaptureInfo: ILogCaptureInfo | undefined =\n    metadata.logCaptureSteps && computeLogFileKey in metadata.logCaptureSteps\n      ? metadata.logCaptureSteps[computeLogFileKey]\n      : undefined;\n\n  return {logCaptureInfo, computeLogFileKey, setComputeLogFileKey};\n}\n","import {tokenizedValueFromString} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {DefaultLogLevels, LogLevel} from './LogLevel';\nimport {LogFilter} from './LogsProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\n\nconst DELIMITER = '|';\n\nfunction levelsToQuery(levels: string[]): string {\n  return levels\n    .sort()\n    .map((key) => key.toLowerCase())\n    .join(DELIMITER);\n}\n\nexport const DefaultQuerystring: {[key: string]: string} = {\n  steps: '*',\n  logs: '',\n  levels: levelsToQuery(DefaultLogLevels),\n  hideNonMatches: 'true',\n  focusedTime: '',\n};\n\n/**\n * Query parameter structure, all optional:\n *\n * `steps`\n *   - string (selection syntax)\n *   - Initializes step selection in Gantt chart\n * `logs`\n *   - string (comma-separated foo:bar tokens or free text)\n *   - Initializes log filter input\n * `levels`\n *   - string (comma-separated values)\n *   - Initializes levels in log filter\n * `focusedTime`\n *   - string (unix timestamp with msec)\n *   - Scrolls directly to log with specified time, if no `logs` filter\n */\nexport const decodeRunPageFilters = (qs: {[key: string]: string}) => {\n  const logsQuery = qs['logs'] || '';\n  const focusedTimeQuery = qs['focusedTime'] || '';\n  const hideNonMatchesQuery = qs['hideNonMatches'] || '';\n  const levelsQuery = qs['levels'] || '';\n\n  const logValues = logsQuery.split(DELIMITER);\n  const focusedTime = focusedTimeQuery && !logsQuery ? Number(focusedTimeQuery) : null;\n  const hideNonMatches = hideNonMatchesQuery === 'true';\n\n  const providers = getRunFilterProviders();\n  const logQuery = logValues.map((token) => tokenizedValueFromString(token, providers));\n\n  const levelsValues = levelsQuery.split(DELIMITER);\n\n  return {\n    sinceTime: 0,\n    focusedTime,\n    hideNonMatches,\n    logQuery,\n    levels: levelsValues\n      .map((level) => level.toUpperCase())\n      .filter((level) => LogLevel.hasOwnProperty(level))\n      .reduce((accum, level) => ({...accum, [level]: true}), {}),\n  } as LogFilter;\n};\n\nexport function encodeRunPageFilters(filter: LogFilter) {\n  const logQueryTokenStrings = filter.logQuery.map((v) =>\n    v.token ? `${v.token}:${v.value}` : v.value,\n  );\n\n  return {\n    hideNonMatches: filter.hideNonMatches ? 'true' : 'false',\n    focusedTime: filter.focusedTime || '',\n    logs: logQueryTokenStrings.join(DELIMITER),\n    levels: levelsToQuery(Object.keys(filter.levels).filter((key) => !!filter.levels[key])),\n  };\n}\n\nexport const EnabledRunLogLevelsKey = 'EnabledRunLogLevels';\n\nexport const validateLogLevels = (json: any) => {\n  if (json === undefined || !Array.isArray(json)) {\n    return null;\n  }\n\n  const validLevels = new Set(Object.keys(LogLevel));\n  return json.filter((level) => validLevels.has(level));\n};\n\nexport function useQueryPersistedLogFilter(): [LogFilter, (updates: LogFilter) => void] {\n  // We only read the stored log levels here as defaults, but we do not set them. This is\n  // because we don't want to update the persisted value unless the user interacts with the\n  // LogFilterSelect component. Navigating to a page with levels set in the URL querystring\n  // should *not* implicitly update the persisted values.\n  const [storedLogLevels] = useStateWithStorage(EnabledRunLogLevelsKey, validateLogLevels);\n\n  const defaults = React.useMemo(() => {\n    const levels = storedLogLevels ?? DefaultLogLevels;\n    return {...DefaultQuerystring, levels: levelsToQuery(levels)};\n  }, [storedLogLevels]);\n\n  return useQueryPersistedState<LogFilter>({\n    encode: encodeRunPageFilters,\n    decode: decodeRunPageFilters,\n    defaults,\n  });\n}\n"],"names":["useSupportsCapturedLogs","data","useQuery","INSTANCE_SUPPORTS_CAPTURED_LOGS","instance","hasCapturedLogManager","gql","_templateObject","_taggedTemplateLiteral","CapturedOrExternalLogPanel","React","_ref","logCaptureInfo","props","_objectWithoutProperties","_excluded","externalUrl","visibleIOType","externalStdoutUrl","externalStderrUrl","_jsxs","Box","flex","direction","alignItems","justifyContent","gap","background","Colors","style","color","minHeight","children","_jsx","href","target","rel","textDecoration","marginLeft","marginRight","Icon","name","size","marginTop","logKey","length","CapturedLogPanel","_objectSpread","MAX_STREAMING_LOG_BYTES","slice","s","merge","a","b","reducer","state","action","_action$logData","_action$logData2","_action$logData3","type","isLoading","cursor","logData","stdout","stderr","metadata","initialState","CapturedLogSubscription","_ref2","onLogData","useSubscription","CAPTURED_LOGS_SUBSCRIPTION","fetchPolicy","variables","onSubscriptionData","_ref3","_subscriptionData$dat","subscriptionData","capturedLogs","CAPTURED_LOGS_METADATA_QUERY","_templateObject2","CapturedLogsSubscriptionProvider","_ref4","_React$useReducer","_React$useReducer2","_slicedToArray","dispatch","logKeyString","JSON","stringify","_Fragment","CapturedLogsQueryProvider","_ref5","_React$useReducer3","_React$useReducer4","_useQuery","CAPTURED_LOGS_QUERY","notifyOnNetworkStatusChange","limit","pollInterval","onCompleted","stopPolling","startPolling","_templateObject3","_ref6","_queryResult$data","_queryResult$data2","onSetDownloadUrl","rootServerURI","AppContext","_React$useContext2","WebSocketContext","availability","disabled","queryResult","visibleDownloadUrl","capturedLogsMetadata","stdoutDownloadUrl","stderrDownloadUrl","startsWith","stdoutLocation","undefined","stderrLocation","Component","display","flexDirection","_state","RawLogContent","location","isVisible","__typename","path","downloadUrl","stepKey","log","COMPUTE_LOGS_SUBSCRIPTION","ComputeLogPanel","runId","computeLogFileKey","ioType","setComputeLogUrl","ComputeLogsPanelWithKey","height","Spinner","purpose","resolveDownloadUrl","x","_useComputeLogs","ComputeIoType","computeLogs","_subscriptionData$dat2","useComputeLogs","ContentWrapper","content","emptyCounts","DEBUG","INFO","WARNING","ERROR","CRITICAL","EVENT","queuedNodes","queued","map","node","ii","clientsideKey","concat","timestamp","nodes","_toConsumableArray","counts","forEach","level","logNodeLevel","loading","hasMore","useLogsProviderWithSubscription","client","useApolloClient","queue","syncPipelineStatusToApolloCache","status","local","readFragment","fragmentName","fragment","PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT","id","toWrite","canTerminate","RunStatus","writeFragment","current","throttledSetNodes","throttle","queuedLogs","queuedMessages","flatMap","messages","lastLog","hasMorePastEvents","nextPipelineStatus","_step","reversed","reverse","_iterator","_createForOfIteratorHelper","n","done","value","err","e","f","pipelineStatusFromMessages","_React$useContext","lostWebsocket","WebSocket","CLOSED","currentInitialCursorRef","currentInitialCursor","subscriptionComponent","SubscriptionComponent","logs","pipelineRunLogs","push","requestAnimationFrame","allNodes","PIPELINE_RUN_LOGS_SUBSCRIPTION","LogsProviderWithSubscription","LogsProviderWithQuery","RUN_LOGS_QUERY","pipelineRunOrError","logsForRun","run","events","LogsProvider","RUN_DAGSTER_RUN_EVENT_FRAGMENT","ExecutionStateDot","styled","displayName","componentId","_IStepState$RUNNING$I","_defineProperty","IStepState","_IStepState$RUNNING$I2","LogFilterSelect","options","onSetFilter","_React$useState","_React$useState2","showMenu","setShowMenu","levels","Object","keys","enabledCount","values","reduce","accum","enabled","onChange","checked","Popover","isOpen","placement","canEscapeKeyClose","onInteraction","nextOpenState","Menu","width","optionForLevel","label","count","MenuItem","tagName","shouldDismissPopover","text","MenuCheckbox","compactNumber","FilterButton","onClick","icon","rightIcon","Button","withConfig","Checkbox","shown","highlight","fuseOptions","threshold","LogsFilterInput","suggestionProviders","inputRef","_React$useMemo","perProvider","provider","token","fuse","Fuse","all","providerKeys","filter","empty","buildSuggestions","queryString","_queryString$split","split","_queryString$split2","results","search","result","item","toLowerCase","includes","_useSuggestionsForStr","tokens","toLocaleLowerCase","trim","suggestions","onSelectSuggestion","suggestion","lastIndex","lastIndexOf","keep","useSuggestionsForString","numResults","highlightedResult","onInputChange","onSelect","onClear","_inputRef$current","focus","position","Results","ResultItem","isHighlight","FilterInput","placeholder","spellCheck","autoCorrect","ref","onFocus","onBlur","onKeyDown","key","lastResult","preventDefault","rightElement","ClearButton","element","scrollIntoView","block","Item","onMouseDown","TextInput","LogType","LogsToolbar","steps","logType","onSetLogType","onSetComputeLogKey","computeLogUrl","_useStateWithStorage","useStateWithStorage","_useStateWithStorage2","initialComputeLogType","setInitialComputeLogType","setComputeLogType","activeItems","Set","structured","OptionsContainer","margin","right","ButtonGroup","buttons","tooltip","StructuredLogToolbar","showCopyURL","ComputeLogToolbar","resolveState","logCapture","stepKeys","some","every","logCaptureSteps","extractLogCaptureStepsFromLegacySteps","isValidStepSelection","fileKeyText","fileKey","captureInfo","pid","Select","items","itemPredicate","query","itemRenderer","handleClick","active","modifiers","activeItem","onItemSelect","join","Tooltip","DownloadLink","download","IconWrapper","_filter$logQuery$find","copyIcon","setCopyIcon","logQueryString","logQuery","_React$useState3","_React$useState4","setQueryString","copyToClipboard","useCopyToClipboard","_useStateWithStorage3","EnabledRunLogLevelsKey","validateLogLevels","_useStateWithStorage4","setStoredLogLevels","selectedStep","find","v","filterText","onChangeFilter","allEnabledFilters","add","delete","Array","from","setTimeout","clearTimeout","filterOptions","fromEntries","LogLevel","getRunFilterProviders","segments","NonMatchCheckbox","hideNonMatches","event","currentTarget","left","OptionsDivider","minWidth","window","contentContainer","timer","showScrollToTop","setShowScrollToTop","cancelHideWarning","hideWarning","scheduleHideWarning","isTruncated","shouldTruncate","nextLine","indexOf","truncated","warning","FileWarning","Group","spacing","FileContainer","ScrollToast","ScrollToTop","scrollToTop","onMouseOver","onMouseOut","FileContent","RelativeContainer","LogContent","isSelected","onScrollUp","onScrollDown","LoadingContainer","FileFooter","TextEncoder","encode","ScrollContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","_key","call","apply","container","lastScroll","onScroll","_this$props","_this$container$curre","scrollHeight","scrollTop","offsetHeight","_createClass","this","scrollToBottom","addEventListener","_this$container$curre2","_props","shouldScroll","_this$props2","className","outline","tabIndex","ContentContainer","LineNumbers","Content","SolarizedColors","Ansi","linkify","useClasses","matches","match","LineNumberContainer","_","i","String","createGlobalStyle","FontFamily","matchingComputeLogKeyFromStepKey","matching","info","useComputeLogFileKeyForSelection","selectionStepKeys","_useQueryPersistedSta","useQueryPersistedState","queryKey","_useQueryPersistedSta2","setComputeLogFileKey","logFileKeys","selectedLogKey","logFileKey","DELIMITER","levelsToQuery","sort","DefaultQuerystring","DefaultLogLevels","focusedTime","decodeRunPageFilters","qs","logsQuery","focusedTimeQuery","hideNonMatchesQuery","levelsQuery","logValues","Number","providers","sinceTime","tokenizedValueFromString","toUpperCase","encodeRunPageFilters","logQueryTokenStrings","json","isArray","validLevels","has","useQueryPersistedLogFilter","storedLogLevels","defaults","decode"],"sourceRoot":""}